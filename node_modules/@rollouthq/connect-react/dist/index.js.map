{"version":3,"sources":["../src/index.ts","../src/components/index.ts","../src/components/automation-creator/automation-creator.tsx","../src/components/automation-form/automation-form.tsx","../src/components/automation-form/get-trigger-renderer-data.ts","../src/components/action-inputs/index.tsx","../src/components/action-inputs/dropdown-input.tsx","../src/components/action-inputs/helpers/action-input-form-control.tsx","../src/components/app-component-renderer/app-component-renderer-context.ts","../src/components/app-component-renderer/use-automation-input-param.ts","../src/components/app-component-renderer/use-automation-input-param-schema.ts","../src/utils/form.tsx","../src/components/action-inputs/find-by.tsx","../src/components/action-inputs/rich-text-input.tsx","../src/components/action-inputs/multiselect-input.tsx","../src/components/action-inputs/boolean-input.tsx","../src/components/action-inputs/no-inputs.tsx","../src/contexts/api-base-url-context.tsx","../src/contexts/allowed-apps-context.tsx","../src/hooks/use-actions-query.ts","../src/hooks/use-apps-query.ts","../src/hooks/use-credential-handler.ts","../src/components/automation-form/use-oauth.tsx","../src/components/automation-form/action-app-key-input.tsx","../src/components/app-icon.tsx","../src/contexts/end-user-context.tsx","../src/utils/find-zod-issue.ts","../src/components/automation-form/context.tsx","../src/components/automation-form/action-credential-id-input.tsx","../src/components/credential-input.tsx","../src/components/automation-form/helpers/credential-details.tsx","../src/components/automation-form/helpers/token-input.tsx","../src/components/automation-form/action-key-select-input.tsx","../src/components/automation-form/automation-form-action.tsx","../src/components/automation-form/automation-form-action-inputs.tsx","../src/components/app-component-renderer/app-component-renderer.tsx","../src/components/automation-form/get-action-renderer-data.ts","../src/components/automation-form/helpers/render-field.tsx","../src/components/card.tsx","../src/components/automation-form/automation-form-trigger.tsx","../src/components/automation-form/helpers/trigger-app-key-input.tsx","../src/components/automation-form/helpers/trigger-key-input.tsx","../src/components/automation-form/trigger-credential-id-input.tsx","../src/components/automation-form/name-input.tsx","../src/components/automation-form/types.ts","../src/components/automation-editor/automation-editor.tsx","../src/components/automations-manager/automations-manager.tsx","../src/components/my-automations/my-automations.tsx","../src/components/automations-list/automations-list.tsx","../src/components/blueprint-activator/blueprint-activator.tsx","../src/components/blueprint-activator/types.ts","../src/components/blueprints-list/blueprints-list.tsx","../src/components/blueprints-manager/blueprints-manager.tsx","../src/components/my-blueprints/my-blueprints.tsx","../src/components/powered-by-rollout/powered-by-rollout.tsx","../../../node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/index.ts","../../../node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx","../src/components/rollout-connect-provider/rollout-connect-provider.tsx","../src/components/error-fallback.tsx","../src/themes/default/index.ts"],"sourcesContent":["import * as components from \"./components\";\n\nexport { curlyTemplate } from \"@rollouthq/common\";\nexport { components };\nexport * from \"./components\";\nexport * from \"./themes/default\";\n","// Export components that should be part of the public API here:\nexport * from \"./automation-creator\";\nexport * from \"./automation-editor\";\nexport * from \"./automations-manager\";\nexport * from \"./blueprint-activator\";\nexport * from \"./blueprints-list\";\nexport * from \"./blueprints-manager\";\nexport * from \"./my-automations\";\nexport * from \"./my-blueprints\";\nexport * from \"./powered-by-rollout\";\nexport * from \"./rollout-connect-provider\";\n","import React, { useState } from \"react\";\n\nimport { InferMutationOutput, useMutation } from \"@rollouthq/api-client-react\";\nimport { AutomationCustomData } from \"@rollouthq/api/engine/automations/custom-data\";\nimport {\n  AutomationForm,\n  AutomationFormData,\n  AutomationFormProps,\n  PartialAutomationFormData,\n} from \"@rollouthq/connect-react/components/automation-form\";\n\ntype Automation = InferMutationOutput<\"automations.create\">;\n\ntype OnBeforeAutomationCreatedReturnSync =\n  | boolean\n  | {\n      automationData: AutomationFormData & {\n        customData?: AutomationCustomData;\n      };\n    };\n\nexport type PrefilledData = {\n  name?: string;\n  trigger?: {\n    appKey?: string;\n    triggerKey?: string;\n    inputParams?: Record<string, any>;\n    credentialId?: string;\n  };\n  action?: {\n    appKey?: string;\n    actionKey?: string;\n    inputParams?: Record<string, any>;\n    credentialId?: string;\n  };\n};\n\nexport type AutomationCreatorProps = {\n  onAutomationCreated: (props: { automation: Automation }) => void;\n  onBeforeAutomationCreate?: (props: {\n    automationData: AutomationFormData;\n  }) =>\n    | OnBeforeAutomationCreatedReturnSync\n    | Promise<OnBeforeAutomationCreatedReturnSync>;\n  onCancel?: () => void;\n  prefilled?: PrefilledData;\n  renderFields?: AutomationFormProps[\"renderFields\"];\n};\n\nexport function AutomationCreator(props: AutomationCreatorProps) {\n  const {\n    onAutomationCreated,\n    onBeforeAutomationCreate,\n    onCancel,\n    prefilled,\n    renderFields,\n  } = props;\n\n  const createAutomationMutation = useMutation(\"automations.create\");\n\n  const [automationFormData, setAutomationFormData] =\n    useState<PartialAutomationFormData>(() => {\n      const defaultData: PartialAutomationFormData = {};\n\n      if (prefilled == null) {\n        return defaultData;\n      }\n\n      if (prefilled.name) {\n        defaultData.name = prefilled.name;\n      }\n\n      if (prefilled.trigger?.appKey != null) {\n        defaultData.trigger = {\n          ...prefilled.trigger,\n          appKey: prefilled.trigger.appKey,\n          inputParams: prefilled.trigger.inputParams ?? {},\n        };\n      }\n\n      if (prefilled.action?.appKey != null) {\n        defaultData.action = {\n          ...prefilled.action,\n          appKey: prefilled.action.appKey,\n          inputParams: prefilled.action.inputParams ?? {},\n        };\n      }\n\n      return defaultData;\n    });\n\n  const createAutomation = async (data: AutomationFormData) => {\n    const onBeforeAutomationCreateReturn = await onBeforeAutomationCreate?.({\n      automationData: data,\n    });\n\n    if (onBeforeAutomationCreateReturn === false) {\n      // Abort creating automation\n      return;\n    }\n\n    const automationData =\n      onBeforeAutomationCreateReturn === true ||\n      onBeforeAutomationCreateReturn === undefined\n        ? data\n        : onBeforeAutomationCreateReturn.automationData;\n\n    const automation = await createAutomationMutation.mutateAsync(\n      automationData\n    );\n\n    onAutomationCreated({ automation });\n  };\n\n  return (\n    <div className=\"rollout-automation-creator\">\n      <AutomationForm\n        mode=\"create\"\n        data={automationFormData}\n        renderFields={renderFields}\n        onUpdate={setAutomationFormData}\n        isSaving={createAutomationMutation.isLoading}\n        onSave={createAutomation}\n        onCancel={onCancel}\n      />\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { useState } from \"react\";\nimport { useSpinDelay } from \"spin-delay\";\n\nimport { useQuery, useTRPCContext } from \"@rollouthq/api-client-react\";\nimport { inputDefToZodObject } from \"@rollouthq/common\";\nimport { useTriggerRendererData } from \"@rollouthq/connect-react/components/automation-form/get-trigger-renderer-data\";\nimport { useRolloutAllowedAppsContext } from \"@rollouthq/connect-react/contexts/allowed-apps-context\";\nimport { useActionsQuery } from \"@rollouthq/connect-react/hooks/use-actions-query\";\nimport { useAppsQuery } from \"@rollouthq/connect-react/hooks/use-apps-query\";\nimport { useCredentialHandler } from \"@rollouthq/connect-react/hooks/use-credential-handler\";\nimport { FormContextProvider } from \"@rollouthq/connect-react/utils/form\";\nimport { dataAttr, useToggle, Spinner, useAsyncMemo } from \"@rollouthq/ui\";\n\nimport { ActionAppKeyField } from \"./action-app-key-input\";\nimport { ActionCredentialIdField } from \"./action-credential-id-input\";\nimport { ActionKeyField } from \"./action-key-select-input\";\nimport { AutomationFormAction } from \"./automation-form-action\";\nimport { ActionInputFields } from \"./automation-form-action-inputs\";\nimport { AutomationFormTrigger } from \"./automation-form-trigger\";\nimport { AutomationFormContextProvider } from \"./context\";\nimport { useActionRendererData } from \"./get-action-renderer-data\";\nimport { RenderFields, renderField } from \"./helpers/render-field\";\nimport { TriggerAppKeyField } from \"./helpers/trigger-app-key-input\";\nimport { TriggerKeyField } from \"./helpers/trigger-key-input\";\nimport { NameField } from \"./name-input\";\nimport {\n  AutomationFormData,\n  PartialAutomationFormData,\n  useValidateAutomationFormData,\n  zAutomationFormSchema,\n} from \"./types\";\n\nexport type AutomationFormProps = {\n  data: PartialAutomationFormData;\n  onUpdate: (\n    updater: (\n      currentData: PartialAutomationFormData\n    ) => PartialAutomationFormData\n  ) => void;\n  onSave: (data: AutomationFormData) => void;\n  onCancel?: () => void;\n  onDelete?: () => void;\n  isSaving: boolean;\n  mode: \"edit\" | \"create\";\n  renderFields?: RenderFields;\n};\n\nexport function AutomationForm(props: AutomationFormProps) {\n  const {\n    data,\n    isSaving,\n    onSave,\n    onCancel,\n    onUpdate,\n    onDelete,\n    mode,\n    renderFields,\n  } = props;\n\n  const [shouldShowErrors, setShouldShowErrors] = useState(false);\n  const [isOpen, toggleDeleteMenu] = useToggle();\n  const { client } = useTRPCContext();\n\n  const triggersQuery = useQuery(\n    [\"apps.triggers\", { appKey: data.trigger?.appKey! }],\n    { enabled: data.trigger?.appKey != null }\n  );\n\n  const selectedTrigger = triggersQuery.data?.find(\n    (t) => t.key === data.trigger?.triggerKey\n  );\n\n  const triggerPayloadSchemaAsync = useAsyncMemo(async () => {\n    if (selectedTrigger == null) {\n      return [];\n    }\n    if (selectedTrigger.payloadConfiguration.type === \"static\") {\n      return selectedTrigger.payloadConfiguration.staticSchema;\n    }\n    return await client.query(\"triggers.getPayloadSchema\", {\n      appKey: data.trigger?.appKey!,\n      triggerKey: data.trigger?.triggerKey!,\n      inputParams: data.trigger?.inputParams!,\n    });\n  }, [\n    JSON.stringify(selectedTrigger?.payloadConfiguration),\n    JSON.stringify(data.trigger),\n  ]);\n\n  const triggerPayloadVariables = useMemo(\n    () =>\n      (triggerPayloadSchemaAsync.value ?? []).map((prop) => ({\n        id: prop.key,\n        label: prop.label,\n        type: \"string\" as const,\n      })),\n    [triggerPayloadSchemaAsync.value]\n  );\n\n  const { allowedApps } = useRolloutAllowedAppsContext();\n\n  const apps = useAppsQuery({ allowedApps });\n  const actions = useActionsQuery(data.action);\n  const actionRendererData = useActionRendererData({ actionRef: data.action });\n  const triggerRendererData = useTriggerRendererData(data.trigger);\n\n  const triggerInputParamsSchema = useMemo(() => {\n    if (triggerRendererData == null) {\n      return zAutomationFormSchema.shape.action.shape.inputParams;\n    }\n    if (\"inputParamsSchema\" in triggerRendererData) {\n      return triggerRendererData.inputParamsSchema;\n    } else {\n      return inputDefToZodObject(triggerRendererData.inputParamDefs);\n    }\n  }, [triggerRendererData]);\n\n  const actionInputParamsSchema = useMemo(() => {\n    if (actionRendererData == null) {\n      return zAutomationFormSchema.shape.action.shape.inputParams;\n    }\n    if (\"inputParamsSchema\" in actionRendererData) {\n      return actionRendererData.inputParamsSchema;\n    } else {\n      return inputDefToZodObject(actionRendererData.inputParamDefs);\n    }\n  }, [actionRendererData]);\n\n  const validation = useValidateAutomationFormData({\n    data,\n    triggerInputParamsSchema,\n    actionInputParamsSchema,\n  });\n\n  const setData = useCallback(\n    (\n      updater: (\n        currentData: PartialAutomationFormData\n      ) => PartialAutomationFormData\n    ) =>\n      onUpdate((currentData) => {\n        const newData = updater(currentData);\n\n        const didChangeTrigger =\n          currentData.trigger?.triggerKey !== newData.trigger?.triggerKey;\n\n        const newAction =\n          newData.action == null\n            ? undefined\n            : {\n                ...newData.action,\n                inputParams: didChangeTrigger ? {} : newData.action.inputParams,\n              };\n\n        return {\n          ...newData,\n          action: newAction,\n        };\n      }),\n    [onUpdate]\n  );\n\n  const context = useMemo(\n    () => ({\n      data,\n      apps,\n      actions,\n      validation,\n      variables: triggerPayloadVariables,\n      setData,\n      renderFields,\n    }),\n    [\n      data,\n      apps,\n      actions,\n      validation,\n      triggerPayloadVariables,\n      setData,\n      renderFields,\n    ]\n  );\n\n  const formContext = useMemo(\n    () => ({ shouldShowErrors, setShouldShowErrors }),\n    [shouldShowErrors, setShouldShowErrors]\n  );\n\n  const setTriggerCredentialId = useCallback(\n    (newCredentialId: string) =>\n      setData((currentData) => ({\n        ...currentData,\n        trigger: {\n          ...currentData.trigger!,\n          credentialId: newCredentialId,\n        },\n      })),\n    [setData]\n  );\n\n  const setActionCredentialId = useCallback(\n    (newCredentialId: string) =>\n      setData((currentData) => ({\n        ...currentData,\n        action: {\n          ...currentData.action!,\n          credentialId: newCredentialId,\n        },\n      })),\n    [setData]\n  );\n\n  useCredentialHandler({\n    appKey: data.trigger?.appKey,\n    setCredentialId: setTriggerCredentialId,\n  });\n\n  useCredentialHandler({\n    appKey: data.action?.appKey,\n    setCredentialId: setActionCredentialId,\n  });\n\n  const hasNullData = apps.data == null;\n  const showSpinner = useSpinDelay(hasNullData, {\n    delay: 500,\n    minDuration: 200,\n  });\n\n  const errorFetchingData = apps.failureCount > 0;\n\n  if (errorFetchingData) {\n    return (\n      <div className=\"rollout-automations-list__error-msg\">\n        Woops! Something went wrong fetching automations.\n      </div>\n    );\n  }\n\n  if (hasNullData || showSpinner) {\n    return (\n      <div className=\"rollout__loading_spinner_container\">\n        <Spinner className=\"rollout__loading_spinner\" />\n      </div>\n    );\n  }\n\n  const nameField = renderField({\n    defaultField: NameField,\n    renderer: renderFields?.name,\n    ctx: { NameField },\n  });\n\n  const triggerField =\n    typeof renderFields?.trigger === \"object\" ? (\n      <AutomationFormTrigger />\n    ) : (\n      renderField({\n        defaultField: AutomationFormTrigger,\n        renderer: renderFields?.trigger,\n        ctx: { TriggerAppKeyField, TriggerKeyField },\n      })\n    );\n\n  const actionField =\n    typeof renderFields?.action === \"object\" ? (\n      <AutomationFormAction />\n    ) : (\n      renderField({\n        defaultField: AutomationFormAction,\n        renderer: renderFields?.action,\n        ctx: {\n          ActionAppKeyField,\n          ActionKeyField,\n          ActionCredentialIdField,\n          ActionInputFields,\n        },\n      })\n    );\n\n  return (\n    <FormContextProvider value={formContext}>\n      <AutomationFormContextProvider value={context}>\n        <div className=\"rollout-automation-form\">\n          <div className=\"rollout-automation-form__header\">{nameField}</div>\n\n          <div className=\"rollout-automation-form__content\">\n            {triggerField}\n            {actionField}\n          </div>\n\n          <div className=\"rollout-automation-form__buttons\">\n            <button\n              type=\"button\"\n              aria-label=\"Save button\"\n              className=\"rollout-button--primary rollout-automation-form__submit\"\n              data-loading={dataAttr(isSaving)}\n              onClick={() => {\n                setShouldShowErrors(true);\n                if (validation.success) {\n                  onSave(validation.data);\n                } else {\n                  console.error(validation.error);\n                }\n              }}\n            >\n              {isSaving ? \"Saving...\" : \"Save\"}\n            </button>\n\n            {onCancel != null && (\n              <button\n                type=\"button\"\n                aria-label=\"Cancel button\"\n                className=\"rollout-button--secondary rollout-automation-form__cancel\"\n                onClick={() => onCancel()}\n              >\n                Cancel\n              </button>\n            )}\n\n            {mode !== \"create\" && (\n              <div className=\"rollout-automation-form__delete\">\n                {isOpen && (\n                  <div className=\"rollout-automation-form-delete__confirm-dialog\">\n                    <div className=\"rollout-automation-form__delete-confirm-text\">\n                      Are you sure you want to delete this automation?\n                    </div>\n\n                    <div className=\"rollout-automation-form__delete-confirm-buttons\">\n                      <button\n                        type=\"button\"\n                        aria-label=\"Cancel deletion button\"\n                        onClick={toggleDeleteMenu}\n                        className=\"rollout-button--secondary rollout-automation-form__delete-cancel\"\n                      >\n                        No, cancel\n                      </button>\n\n                      <button\n                        type=\"button\"\n                        aria-label=\"Confirm deletion button\"\n                        onClick={onDelete}\n                        className=\"rollout-button--danger rollout-automation-form__delete-confirm\"\n                      >\n                        Yes, delete\n                      </button>\n                    </div>\n                  </div>\n                )}\n\n                <button\n                  type=\"button\"\n                  aria-label=\"Delete button\"\n                  className=\"rollout-button--danger rollout-automations-form-delete__trigger\"\n                  onClick={toggleDeleteMenu}\n                >\n                  Delete\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </AutomationFormContextProvider>\n    </FormContextProvider>\n  );\n}\n","import React, { FunctionComponent, useLayoutEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { AnyZodObject } from \"zod\";\n\nimport { isVariable, z } from \"@rollouthq/common\";\nimport * as ActionInputs from \"@rollouthq/connect-react/components/action-inputs\";\nimport { AppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { PartialTriggerRef } from \"@rollouthq/connect-react/components/automation-form/types\";\nimport { useRolloutApiBaseUrlContext } from \"@rollouthq/connect-react/contexts/api-base-url-context\";\n\nconst useSafeLayoutEffect =\n  typeof document === \"undefined\" ? useEffect : useLayoutEffect;\n\nexport type UseTriggerRendererDataParams = PartialTriggerRef | undefined;\n\nexport type UseTriggerRendererData =\n  | AppComponentRendererContext[\"importedData\"]\n  | undefined;\n\nexport function useTriggerRendererData(\n  opts: UseTriggerRendererDataParams\n): UseTriggerRendererData {\n  const { apiBaseUrl } = useRolloutApiBaseUrlContext();\n\n  const [triggerRendererData, setTriggerRendererData] =\n    useState<UseTriggerRendererData>();\n\n  useSafeLayoutEffect(() => {\n    Object.assign(window, {\n      ROLLOUT_CONNECT_DEPS: {\n        zod: { z },\n        react: React,\n        [\"@rollouthq/common\"]: { z, isVariable },\n        [\"@rollouthq/connect-react/components/action-inputs\"]: ActionInputs,\n      },\n    });\n  }, []);\n\n  useSafeLayoutEffect(() => {\n    if (opts == null) {\n      return setTriggerRendererData(undefined);\n    }\n\n    if (!opts.appKey || !opts.triggerKey) {\n      return;\n    }\n\n    const importPath = `${apiBaseUrl}/connect-react/${opts.appKey}/triggers/${opts.triggerKey}.js`;\n    // Workaround to preserve es2020 dynamic import instead of transpiling it\n    // equivalent for:\n    // import(importPath).then(setTriggerRendererData);\n    const fnImport = new Function(\"path\", \"return import(path)\");\n\n    fnImport(importPath).then(\n      (data: {\n        Component: FunctionComponent;\n        inputParamsSchema: AnyZodObject;\n      }) => {\n        setTriggerRendererData(data);\n      }\n    );\n  }, [JSON.stringify(opts)]);\n\n  return triggerRendererData;\n}\n","export * from \"./dropdown-input\";\nexport * from \"./find-by\";\nexport * from \"./rich-text-input\";\nexport * from \"./multiselect-input\";\nexport * from \"./boolean-input\";\nexport * from \"./no-inputs\";\nexport * from \"./types\";\n","import React, { useEffect, useState } from \"react\";\n\nimport { isVariable, ROLLOUTHQ_VARIABLE_PREFIX } from \"@rollouthq/common\";\nimport { ActionInputProps } from \"@rollouthq/connect-react/components/action-inputs\";\nimport { ActionInputFormControl } from \"@rollouthq/connect-react/components/action-inputs/helpers/action-input-form-control\";\nimport { useAppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { useAutomationInputParam } from \"@rollouthq/connect-react/components/app-component-renderer/use-automation-input-param\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport {\n  ComboBox,\n  ComboBoxItem,\n  ComboBoxProps,\n  ComboBoxSection,\n} from \"@rollouthq/ui\";\n\nexport type DropdownOption = {\n  id: string;\n  name: string;\n};\n\nexport type DropdownInputProps = ActionInputProps<string | undefined> & {\n  allowOnlyVariables?: boolean;\n  dependencies?: string[];\n  isDisabled?: boolean;\n  fetchOptions: () =>\n    | Promise<readonly DropdownOption[]>\n    | readonly DropdownOption[];\n} & Omit<\n    ComboBoxProps<Record<string, any>>,\n    \"children\" | \"defaultItems\" | \"selectedOption\"\n  >;\n\nexport function DropdownInput(props: DropdownInputProps) {\n  const { bind, dependencies, fetchOptions, allowOnlyVariables, isDisabled } =\n    props;\n  const param = useAutomationInputParam(bind);\n  const { value, setValue } = param;\n  const label = props.label ?? param.label;\n  const description = props.description ?? param.description;\n  const [options, setOptions] = useState<readonly DropdownOption[]>([]);\n  const [isLoadingOptions, setIsLoadingOptions] = useState(false);\n  const { shouldShowErrors } = useFormContext();\n  const { variables, disabled: disabledFromContext } =\n    useAppComponentRendererContext();\n  const disabled =\n    isDisabled ||\n    disabledFromContext ||\n    (dependencies != null && dependencies.every(Boolean) !== true);\n\n  useEffect(() => {\n    async function refetch() {\n      setIsLoadingOptions(true);\n      const dropDownOptions = await fetchOptions();\n      setOptions(dropDownOptions);\n      setIsLoadingOptions(false);\n    }\n    if (!allowOnlyVariables && !disabled) {\n      refetch();\n    }\n  }, [JSON.stringify(dependencies), allowOnlyVariables, disabled]);\n\n  useEffect(() => {\n    if (allowOnlyVariables && value && !isVariable(value)) {\n      setValue(undefined);\n    }\n  }, [allowOnlyVariables, value]);\n  const variableOptions = variables.map((v) => ({\n    id: `${ROLLOUTHQ_VARIABLE_PREFIX}${v.id}`,\n    name: `@${v.label}`,\n  }));\n  const allOptions = [...variableOptions, ...options];\n  const selectedOption = allOptions.find((opt) => opt.id === value);\n\n  const variableOptionsDisplay = (\n    <ComboBox<typeof variableOptions[number]>\n      aria-label=\"Variable dropdown\"\n      optionKey=\"id\"\n      isDisabled={disabled}\n      defaultItems={variableOptions}\n      menuTrigger=\"focus\"\n      selectedOption={selectedOption}\n      isLoading={isLoadingOptions}\n      inputPlaceholder={props.placeholder || \"Select option\"}\n      onSelectionChange={(newItem) => setValue(newItem?.id)}\n    >\n      <ComboBoxSection title=\"Variables\">\n        {variableOptions.map((opt) => (\n          <ComboBoxItem key={opt.id}>{opt.name}</ComboBoxItem>\n        ))}\n      </ComboBoxSection>\n    </ComboBox>\n  );\n\n  const allVariableOptionsDisplay = (\n    <ComboBox<typeof allOptions[number]>\n      aria-label=\"Variable dropdown\"\n      optionKey=\"id\"\n      isDisabled={disabled /* || preselected*/}\n      defaultItems={allOptions}\n      menuTrigger=\"focus\"\n      selectedOption={selectedOption}\n      key={value}\n      isLoading={isLoadingOptions}\n      inputPlaceholder={props.placeholder || \"Select option\"}\n      onSelectionChange={(newItem) => setValue(newItem?.id)}\n    >\n      <ComboBoxSection title=\"Options\">\n        {options.map((opt) => (\n          <ComboBoxItem key={opt.id}>{opt.name}</ComboBoxItem>\n        ))}\n      </ComboBoxSection>\n      <ComboBoxSection title=\"Variables\">\n        {variableOptions.map((opt) => (\n          <ComboBoxItem key={opt.id}>{opt.name}</ComboBoxItem>\n        ))}\n      </ComboBoxSection>\n    </ComboBox>\n  );\n\n  const optionsDisplay = allowOnlyVariables\n    ? variableOptionsDisplay\n    : allVariableOptionsDisplay;\n\n  return (\n    <ActionInputFormControl\n      bind={bind}\n      label={label}\n      description={description}\n      error={shouldShowErrors ? param.error?.message : undefined}\n      isRequired={!param.isOptional}\n    >\n      {optionsDisplay}\n    </ActionInputFormControl>\n  );\n}\n","import React, { ReactNode } from \"react\";\nimport { ReactElement } from \"react\";\n\nimport { useAppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { useAutomationInputParam } from \"@rollouthq/connect-react/components/app-component-renderer/use-automation-input-param\";\nimport { dataAttr, Flex, UserForm } from \"@rollouthq/ui\";\n\nexport type ActionInputFormControlProps = {\n  bind: any;\n  label?: string;\n  description?: string;\n  error?: string;\n  isRequired?: boolean;\n  children: ReactElement;\n};\n\nexport function ActionInputFormControl(props: ActionInputFormControlProps) {\n  const { bind, children, description, error, isRequired = false } = props;\n\n  const { credentialId, isBlueprintActivation = false } =\n    useAppComponentRendererContext();\n\n  const param = useAutomationInputParam(bind);\n\n  const isProvidedByUserPlaceholder =\n    param.isCredentialDependent &&\n    credentialId == null &&\n    !isBlueprintActivation;\n\n  if (isBlueprintActivation && !param.isCredentialDependent) {\n    return null;\n  }\n\n  function getChildren() {\n    if (isProvidedByUserPlaceholder) {\n      return (\n        <Flex\n          css={{\n            alignItems: \"center\",\n            padding: \"8px\",\n            backgroundColor: \"$surfaceSecondary\",\n            borderRadius: \"4px\",\n            color: \"$grayMedium\",\n            fontSize: \"13px\",\n            fontWeight: 500,\n          }}\n        >\n          <UserForm css={{ marginRight: \"6px\" }} />\n          Input provided by user when automation is activated\n        </Flex>\n      );\n    }\n\n    return children;\n  }\n\n  const label = props.label ?? \"\";\n\n  return (\n    <StyledActionInputFormControl\n      description={description}\n      error={error}\n      isRequired={isRequired}\n      label={label}\n    >\n      {getChildren()}\n    </StyledActionInputFormControl>\n  );\n}\n\nexport type StyledActionInputFormControlProps = {\n  children: ReactNode;\n  label: string;\n  description?: string;\n  error: string | undefined;\n  isRequired: boolean;\n};\n\nexport function StyledActionInputFormControl(\n  props: StyledActionInputFormControlProps\n) {\n  const { label, description, error, isRequired, children } = props;\n\n  return (\n    <div className=\"rollout-form-control\">\n      {label && (\n        <div className=\"rollout-form-control__label\">\n          {label}\n          {isRequired && (\n            <span className=\"rollout-form-control__required-hint\">\n              {\" \"}\n              (required)\n            </span>\n          )}\n        </div>\n      )}\n\n      {description && (\n        <div className=\"rollout-form-control__description\">{description}</div>\n      )}\n\n      <div\n        className=\"rollout-form-control__input\"\n        data-error={dataAttr(!!error)}\n      >\n        {children}\n      </div>\n\n      {error && <div className=\"rollout-form-control__error\">{error}</div>}\n    </div>\n  );\n}\n","import { FunctionComponent } from \"react\";\nimport { ObjPathProxy } from \"ts-object-path\";\nimport { AnyZodObject, z } from \"zod\";\n\nimport { TRPCClient, useQuery } from \"@rollouthq/api-client-react\";\nimport { CustomerTriggerDropdownInputOption } from \"@rollouthq/api/engine/customers/get-customer-trigger-dropdown-options\";\nimport { InputDefOutput } from \"@rollouthq/api/engine/inputs/inputs-configuration\";\nimport { Variable } from \"@rollouthq/common\";\nimport * as inputComponents from \"@rollouthq/connect-react/components/action-inputs\";\nimport { createContext } from \"@rollouthq/ui\";\n\nexport type AppComponentProps<Params extends AnyZodObject> = {\n  /**\n   * Proxy object used to bind `inputParams` properties to inputs.\n   * Can't be used to access the actual data!\n   * @example\n   * <RichTextInput bind={b.to} label=\"To\" />\n   */\n  b: ObjPathProxy<z.infer<Params>, z.infer<Params>>;\n  credentialId: string;\n  inputParams: z.infer<Params>;\n  setInputParams: (newParams: z.infer<Params>) => void;\n  api: TRPCClient;\n  useQuery: typeof useQuery;\n  inputComponents: typeof inputComponents;\n};\n\nexport type AppComponentRendererContext = {\n  api: TRPCClient;\n  credentialId: string;\n  setInputParams: (newParams: Record<string, any>) => void;\n  inputParams: Record<string, any>;\n  variables: readonly Variable[];\n  getDynamicOptions: (opts: {\n    inputKey: string;\n  }) => Promise<CustomerTriggerDropdownInputOption[]>;\n  importedData:\n    | {\n        inputParamsSchema: AnyZodObject;\n        Component: FunctionComponent<AppComponentProps<AnyZodObject>>;\n      }\n    | {\n        inputParamDefs: InputDefOutput[];\n      };\n  isBlueprintActivation?: boolean;\n  disabled?: boolean;\n};\n\nexport const [\n  AppComponentRendererContextProvider,\n  useAppComponentRendererContext,\n] = createContext<AppComponentRendererContext>({\n  name: \"AppComponentRenderer\",\n});\n","import { get, getPath, ObjPathProxy, set } from \"ts-object-path\";\nimport { SafeParseReturnType, ZodIssue } from \"zod\";\n\nimport { Meta } from \"@rollouthq/api/@types/zod\";\nimport { inputDefToZodObject } from \"@rollouthq/common\";\n\nimport { useAppComponentRendererContext } from \"./app-component-renderer-context\";\nimport { getAutomationInputParamSchema } from \"./use-automation-input-param-schema\";\n\nexport function useAutomationInputParam<T extends any>(\n  bind: ObjPathProxy<any, T>\n): {\n  path: PropertyKey[];\n  value: T;\n  setValue: (newVal: T) => void;\n  isOptional: boolean;\n  label: string;\n  description: string;\n  isCredentialDependent: boolean;\n  error: ZodIssue | undefined;\n} {\n  const ctx = useAppComponentRendererContext();\n  const {\n    inputParams,\n    setInputParams,\n    importedData,\n    credentialId,\n    isBlueprintActivation,\n  } = ctx;\n\n  const path = getPath(bind);\n  const value = get(inputParams, bind) as T;\n  const setValue = (newValue: T) => {\n    const newInputParams = structuredClone(inputParams);\n    set(newInputParams, bind, newValue);\n    setInputParams(newInputParams);\n  };\n\n  const inputParamsSchema =\n    \"inputParamsSchema\" in importedData\n      ? importedData.inputParamsSchema\n      : inputDefToZodObject(importedData.inputParamDefs);\n\n  const schema = getAutomationInputParamSchema(inputParamsSchema, bind);\n  const isOptional = schema.isOptional();\n  const meta = schema.description as any as Meta | undefined;\n  const label = meta?.label ?? pathToLabel(path);\n  const description = meta?.description ?? \"\";\n  const isCredentialDependent = meta?.isCredentialDependent ?? false;\n\n  const validation = inputParamsSchema.safeParse(inputParams);\n  const error =\n    isCredentialDependent && credentialId == null && !isBlueprintActivation\n      ? undefined\n      : getAutomationInputParamValidation(validation, bind);\n\n  return {\n    value,\n    setValue,\n    isOptional,\n    label,\n    description,\n    isCredentialDependent,\n    error,\n    path,\n  };\n}\n\nfunction getAutomationInputParamValidation(\n  validation: SafeParseReturnType<any, any>,\n  bind: ObjPathProxy<any, any> | undefined\n) {\n  const path = getPath(bind!);\n\n  if (validation.success) {\n    return undefined;\n  }\n\n  return validation.error.issues.find((err) => {\n    return err.path.join(\".\") === path.join(\".\");\n  });\n}\n\nfunction pathToLabel(path: PropertyKey[]) {\n  return path\n    .map((prop) => camelCaseToSpaceSeparated(prop.toString()))\n    .join(\" \");\n}\n\nfunction camelCaseToSpaceSeparated(str: string) {\n  const spaceSeparated = str.replace(\n    /([A-Z\\d])/g,\n    (char) => ` ${char.toLowerCase()}`\n  );\n\n  return `${spaceSeparated[0].toUpperCase()}${spaceSeparated.slice(1)}`;\n}\n","import { getPath, ObjPathProxy } from \"ts-object-path\";\nimport {\n  AnyZodObject,\n  ZodFirstPartySchemaTypes,\n  ZodObject,\n  ZodOptional,\n  ZodRecord,\n} from \"zod\";\n\nexport function getAutomationInputParamSchema(\n  inputParamsSchema: AnyZodObject,\n  bind: ObjPathProxy<any, any>\n) {\n  const bindPath = getPath(bind);\n  const prop = getByPath(inputParamsSchema, bindPath);\n  return prop;\n}\n\nfunction getByPath(\n  schema: ZodFirstPartySchemaTypes,\n  path: PropertyKey[]\n): ZodFirstPartySchemaTypes {\n  const restPath = path.slice(1);\n  const unwrappedType =\n    schema instanceof ZodOptional ? schema.unwrap() : schema;\n\n  if (unwrappedType instanceof ZodObject) {\n    const prop = unwrappedType.shape[path[0]];\n    return path.length > 1 ? getByPath(prop, restPath) : prop;\n  }\n\n  if (unwrappedType instanceof ZodRecord) {\n    const prop = unwrappedType.valueSchema;\n    return path.length > 1 ? getByPath(prop, restPath) : prop;\n  }\n\n  console.error(\"getByPath: unhandled prop type:\", unwrappedType);\n  throw new Error(`getByPath: unhandled prop type`);\n}\n","import { createContext } from \"@rollouthq/ui\";\n\nexport type FormContext = {\n  shouldShowErrors: boolean;\n  setShouldShowErrors: (show: boolean) => void;\n};\n\nexport const [FormContextProvider, useFormContext] = createContext<FormContext>(\n  {\n    name: \"Form\",\n  }\n);\n","import React, { ReactElement, useEffect } from \"react\";\n\nimport { ActionInputFormControl } from \"@rollouthq/connect-react/components/action-inputs/helpers/action-input-form-control\";\nimport { useAutomationInputParam } from \"@rollouthq/connect-react/components/app-component-renderer/use-automation-input-param\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\n\nimport { ActionInputProps } from \"./types\";\n\ntype FindByInputProps = ActionInputProps<string | undefined> & {\n  filterInput: ReactElement;\n  filterValueInput: ReactElement;\n  selectInput: ReactElement;\n  resource: string;\n};\n\nexport function FindBy(props: FindByInputProps) {\n  const { filterInput, filterValueInput, selectInput, resource } = props;\n  const { bind } = props;\n  const param = useAutomationInputParam(bind);\n  const { shouldShowErrors } = useFormContext();\n  const { value, setValue, isOptional } = param;\n  const label = props.label ?? param.label;\n  const description = props.description ?? param.description;\n\n  useEffect(() => {\n    if (value == null) {\n      setValue(\"filter\");\n    }\n  }, [value]);\n\n  return (\n    <>\n      <ActionInputFormControl\n        bind={bind}\n        label={label}\n        isRequired={!isOptional}\n        description={description}\n        error={shouldShowErrors ? param.error?.message : undefined}\n      >\n        <div className=\"rollout-form-control-find__container\">\n          <button\n            type=\"button\"\n            aria-label=\"Search from list button\"\n            className={\n              value == \"select\"\n                ? \"rollout-form-control-find__active\"\n                : \"rollout-form-control-find__disabled\"\n            }\n            onClick={() => setValue(\"select\")}\n          >\n            From list\n          </button>\n          <button\n            type=\"button\"\n            aria-label=\"Search by filter button\"\n            className={\n              value == \"filter\"\n                ? \"rollout-form-control-find__active\"\n                : \"rollout-form-control-find__disabled\"\n            }\n            onClick={() => setValue(\"filter\")}\n          >\n            From search\n          </button>\n        </div>\n      </ActionInputFormControl>\n\n      {value == \"filter\" && filterInput}\n      {value == \"filter\" && filterValueInput}\n      {value == \"select\" && selectInput}\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { resolveMentions } from \"@rollouthq/common\";\nimport { ActionInputFormControl } from \"@rollouthq/connect-react/components/action-inputs/helpers/action-input-form-control\";\nimport { useAppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { useAutomationInputParam } from \"@rollouthq/connect-react/components/app-component-renderer/use-automation-input-param\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport { RichEditorProps, RichEditorContent, RichEditor } from \"@rollouthq/ui\";\n\nimport { ActionInputProps } from \"./types\";\n\nexport type RichTextInputProps = ActionInputProps<\n  RichEditorContent | undefined\n> & {\n  inputProps?: Omit<RichEditorProps, \"value\" | \"setValue\">;\n  isRequired?: boolean;\n  disabled?: boolean;\n};\n\nexport function RichTextInput(props: RichTextInputProps) {\n  const { bind, inputProps, placeholder, disabled: disabledFromProps } = props;\n  const param = useAutomationInputParam(bind);\n  const label = props.label ?? param.label;\n  const description = props.description ?? param.description;\n  const { variables, disabled: disabledFromContext } =\n    useAppComponentRendererContext();\n\n  const { shouldShowErrors } = useFormContext();\n  const disabled = disabledFromContext || disabledFromProps;\n  const value = param.value ?? null;\n  const setValue = (val: RichEditorContent | null) => {\n    param.setValue(val ?? undefined);\n  };\n\n  const richEditorValue = value && resolveMentions(value, variables);\n\n  return (\n    <ActionInputFormControl\n      bind={bind}\n      label={label}\n      isRequired={!param.isOptional || props.isRequired}\n      description={description}\n      error={shouldShowErrors ? param.error?.message : undefined}\n    >\n      <div className=\"rollout-rich-text-input\">\n        <RichEditor\n          value={richEditorValue}\n          setValue={setValue}\n          placeholder={placeholder}\n          formattingEnabled={false}\n          linksEnabled={false}\n          mentionVariables={variables}\n          isDisabled={disabled}\n          {...inputProps}\n        />\n      </div>\n    </ActionInputFormControl>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { ActionInputProps } from \"@rollouthq/connect-react/components/action-inputs\";\nimport { ActionInputFormControl } from \"@rollouthq/connect-react/components/action-inputs/helpers/action-input-form-control\";\nimport { useAppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { useAutomationInputParam } from \"@rollouthq/connect-react/components/app-component-renderer/use-automation-input-param\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport { MultiSelect, MultiSelectOption } from \"@rollouthq/ui\";\n\nexport type MultiSelectInputProps = ActionInputProps<string | undefined> & {\n  fetchOptions: () => Promise<MultiSelectOption[]> | MultiSelectOption[];\n  dependencies?: string[];\n};\n\nexport function MultiSelectInput(props: MultiSelectInputProps) {\n  const { bind, dependencies, fetchOptions, placeholder } = props;\n  const param = useAutomationInputParam(bind);\n  const { disabled: disabledCtx } = useAppComponentRendererContext();\n  const disabled = disabledCtx || !dependencies?.every(Boolean);\n  const { value, setValue } = param;\n  const label = props.label ?? param.label;\n  const description = props.description ?? param.description;\n  const [options, setOptions] = useState<MultiSelectOption[]>([]);\n  const [isLoadingOptions, setIsLoadingOptions] = useState(false);\n  const { shouldShowErrors } = useFormContext();\n\n  useEffect(() => {\n    async function getOptions() {\n      setIsLoadingOptions(true);\n      if (!disabled) {\n        const dropDownOptions = await fetchOptions();\n        setOptions(dropDownOptions);\n      }\n      setIsLoadingOptions(false);\n    }\n    getOptions();\n  }, [disabled]);\n\n  return (\n    <ActionInputFormControl\n      bind={bind}\n      label={label}\n      description={description}\n      error={shouldShowErrors ? param.error?.message : undefined}\n    >\n      <MultiSelect\n        label={label}\n        isDisabled={disabled}\n        items={options}\n        isLoading={isLoadingOptions}\n        inputPlaceholder={placeholder || \"Select option\"}\n        onSelectionChange={(items) => {\n          setValue(items.map((i) => i.id).join(\", \"));\n        }}\n        value={value}\n      />\n    </ActionInputFormControl>\n  );\n}\n","import React from \"react\";\n\nimport { ActionInputFormControl } from \"@rollouthq/connect-react/components/action-inputs/helpers/action-input-form-control\";\nimport { useAppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { useAutomationInputParam } from \"@rollouthq/connect-react/components/app-component-renderer/use-automation-input-param\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\n\nimport { ActionInputProps } from \"./types\";\n\nexport type BooleanInputProps = ActionInputProps<boolean | undefined>;\n\nexport function BooleanInput(props: BooleanInputProps) {\n  const { bind } = props;\n  const param = useAutomationInputParam(bind);\n  const { shouldShowErrors } = useFormContext();\n  const { disabled } = useAppComponentRendererContext();\n  const { value, setValue, isOptional, path } = param;\n\n  const label = props.label ?? param.label;\n  const description = props.description ?? param.description;\n\n  return (\n    <ActionInputFormControl\n      bind={bind}\n      label={label}\n      isRequired={!isOptional}\n      description={description}\n      error={shouldShowErrors ? param.error?.message : undefined}\n    >\n      <input\n        type=\"checkbox\"\n        checked={value}\n        disabled={disabled}\n        onChange={(e) => setValue(e.target.checked)}\n      />\n    </ActionInputFormControl>\n  );\n}\n","import React from \"react\";\n\nexport const NoInputsComponent = () => <>No inputs</>;\n","import { PropsWithChildren, useMemo } from \"react\";\nimport React from \"react\";\n\nimport { createContext } from \"@rollouthq/ui\";\n\nexport type RolloutApiBaseUrlContext = {\n  apiBaseUrl: string;\n};\n\nconst [_RolloutApiBaseUrlContextProvider, useRolloutApiBaseUrlContext] =\n  createContext<RolloutApiBaseUrlContext>({\n    name: \"RolloutApiBaseUrlContext\",\n  });\n\nexport { useRolloutApiBaseUrlContext };\n\nexport function RolloutApiBaseUrlContextProvider(\n  props: PropsWithChildren<RolloutApiBaseUrlContext>\n) {\n  const { children, ...ctxProps } = props;\n  const ctx = useMemo(() => ctxProps, Object.values(ctxProps));\n\n  return (\n    <_RolloutApiBaseUrlContextProvider value={ctx}>\n      {children}\n    </_RolloutApiBaseUrlContextProvider>\n  );\n}\n","import { PropsWithChildren, useMemo } from \"react\";\nimport React from \"react\";\n\nimport { ThirdPartyAppKey as ThirdPartyAppSlug } from \"@rollouthq/api/apps/types\";\nimport { createContext } from \"@rollouthq/ui\";\n\nexport type AnyAppSlug = ThirdPartyAppSlug | \"customer\";\n\nexport type RolloutAllowedAppsContext = {\n  allowedApps: AnyAppSlug[] | undefined;\n};\n\nconst [_RolloutAllowedAppsContextProvider, useRolloutAllowedAppsContext] =\n  createContext<RolloutAllowedAppsContext>({\n    name: \"RolloutAllowedAppsContextProvider\",\n  });\n\nexport { useRolloutAllowedAppsContext };\n\nexport function RolloutAllowedAppsContextProvider(\n  props: PropsWithChildren<RolloutAllowedAppsContext>\n) {\n  const { children, ...ctxProps } = props;\n  const ctx = useMemo(() => ctxProps, Object.values(ctxProps));\n\n  return (\n    <_RolloutAllowedAppsContextProvider value={ctx}>\n      {children}\n    </_RolloutAllowedAppsContextProvider>\n  );\n}\n","import { useEffect } from \"react\";\n\nimport { useLazyQuery } from \"@rollouthq/api-client-react\";\nimport { PartialActionRef } from \"@rollouthq/connect-react/components/automation-form/types\";\n\nexport function useActionsQuery(action: PartialActionRef | undefined) {\n  const actions = useLazyQuery(\"apps.actions\");\n\n  useEffect(() => {\n    if (action?.appKey != null) {\n      actions.fetch({ appKey: action.appKey });\n    }\n  }, [action?.appKey]);\n\n  return actions;\n}\n","import { useQuery } from \"@rollouthq/api-client-react\";\n\nexport function useAppsQuery(opts: { allowedApps: string[] | undefined }) {\n  const { allowedApps } = opts;\n\n  return useQuery([\"apps.list\"], {\n    select:\n      allowedApps != null\n        ? (appsList) => appsList.filter((a) => allowedApps.includes(a.key))\n        : undefined,\n  });\n}\n","import assert from \"assert\";\n\nimport { useEffect } from \"react\";\n\nimport { useQuery } from \"@rollouthq/api-client-react/\";\nimport { useOAuth } from \"@rollouthq/connect-react/components/automation-form/use-oauth\";\n\nexport function useCredentialHandler(opts: {\n  appKey: string | undefined;\n  setCredentialId: (newCredentialId: string) => void;\n}) {\n  const { appKey, setCredentialId } = opts;\n\n  const { openOAuthPopup } = useOAuth({\n    onCredentialAdded: (newCredentialId) => {\n      setCredentialId(newCredentialId);\n      credentialsQuery.refetch();\n    },\n  });\n\n  const authInfoQuery = useQuery([\"apps.authInfo\", { appKey: appKey! }], {\n    enabled: appKey != null,\n  });\n\n  const authInfo = authInfoQuery.data;\n\n  const credentialsQuery = useQuery([\"apps.credentials\", { appKey: appKey! }], {\n    enabled: appKey != null,\n  });\n\n  const credentials = credentialsQuery.data;\n\n  useEffect(() => {\n    if (authInfo == null || credentials == null) {\n      return;\n    }\n\n    if (authInfo.type === \"none\") {\n      const hasCredentials = credentials.length > 0;\n      assert(hasCredentials, \"No credentials found!\");\n      return setCredentialId(credentials[0].id);\n    }\n\n    if (\n      (authInfo.type === \"oauth1\" || authInfo.type === \"oauth2\") &&\n      authInfo.singleCredentialOnly\n    ) {\n      if (credentials.length === 0) {\n        openOAuthPopup({ appKey: appKey! });\n      } else {\n        setCredentialId(credentials[0].id);\n      }\n    }\n  }, [authInfo, credentials]);\n}\n","import popup from \"popup-centered\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { useTRPCContext } from \"@rollouthq/api-client-react\";\n\nexport function useOAuth(opts: {\n  onCredentialAdded?: (credentialId: string) => void;\n}) {\n  const [oauthPopupError, setOauthPopupError] = useState<string | null>(null);\n  const [currentAppKey, setCurrentAppKey] = useState<string>();\n  const { client } = useTRPCContext();\n\n  useEffect(() => {\n    function handleNewOauthCredentialMessage(e: MessageEvent<any>) {\n      const evData = e.data._rollouthq;\n\n      if (evData?.ok) {\n        if (\n          evData?.type === \"credential-added\" &&\n          evData.appKey === currentAppKey &&\n          evData.credentialId != null\n        ) {\n          opts.onCredentialAdded?.(evData.credentialId);\n        }\n      } else {\n        if (evData?.error) {\n          setOauthPopupError(evData.error);\n        }\n      }\n    }\n\n    window.addEventListener(\"message\", handleNewOauthCredentialMessage, false);\n\n    return () => {\n      window.removeEventListener(\"message\", handleNewOauthCredentialMessage);\n    };\n  }, [currentAppKey]);\n\n  const openOAuthPopup = useCallback(\n    async (popupOpts: {\n      appKey: string;\n      customParams?: Record<string, any>;\n    }) => {\n      setCurrentAppKey(popupOpts.appKey);\n      setOauthPopupError(null);\n\n      try {\n        const { url } = await client.query(\"oauth.getURL\", {\n          appKey: popupOpts.appKey,\n          customParams: popupOpts.customParams,\n        });\n\n        popup(url, \"\", {\n          width: 800,\n          height: 800,\n        });\n      } catch (err) {\n        setOauthPopupError(\"Woops! Something went wrong linking account.\");\n      }\n    },\n    []\n  );\n\n  return {\n    oauthPopupError,\n    openOAuthPopup,\n  };\n}\n","import React, { useMemo } from \"react\";\n\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport { FieldProps } from \"@rollouthq/connect-react/components/automation-form/helpers/render-field\";\nimport { useRolloutAppKeyContext } from \"@rollouthq/connect-react/contexts/end-user-context\";\nimport { findIssue } from \"@rollouthq/connect-react/utils/find-zod-issue\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport { Center, ComboBox, ComboBoxItem, FormControl } from \"@rollouthq/ui\";\n\nimport { useAutomationFormContext } from \"./context\";\n\ntype ActionAppKeyInputProps = {\n  isDisabled?: boolean;\n};\n\nfunction ActionAppKeyInput(props: ActionAppKeyInputProps) {\n  const { appKey } = useRolloutAppKeyContext();\n  const { apps, data, setData, validation } = useAutomationFormContext();\n  const { action } = data;\n\n  const error = findIssue(validation, (b) => b.action);\n\n  const options = useMemo(\n    () => apps.data?.filter((a) => a.hasActions) ?? [],\n    [apps.data]\n  );\n  const selectedApp = apps.data?.find((a) => a.key === action?.appKey);\n\n  const { shouldShowErrors } = useFormContext();\n\n  return (\n    <div className=\"rollout-automation-form__action-app\">\n      {/* Preload app icons by rendering them in a hidden div */}\n      <div style={{ display: \"none\" }}>\n        {apps.data?.map((app) => (\n          <AppIcon key={app.key} appKey={app.key} />\n        ))}\n      </div>\n\n      <FormControl error={shouldShowErrors ? error?.message : undefined}>\n        <ComboBox<typeof options[number]>\n          aria-label=\"Action dropdown\"\n          defaultItems={options}\n          selectedOption={selectedApp}\n          isDisabled={props.isDisabled}\n          icon={\n            selectedApp == null ? undefined : (\n              <AppIcon appKey={selectedApp.key} />\n            )\n          }\n          inputPlaceholder=\"Select app\"\n          menuTrigger=\"focus\"\n          onSelectionChange={(newSelectedApp) => {\n            return setData((currentData) => {\n              if (newSelectedApp == null) {\n                return {\n                  ...currentData,\n                  action: undefined,\n                };\n              }\n\n              const isNewActionAppCustomers = newSelectedApp.key === appKey;\n              const isTriggerAppCustomers =\n                currentData.trigger?.appKey === appKey;\n\n              const bothAppsAreCustomers =\n                isNewActionAppCustomers && isTriggerAppCustomers;\n\n              const bothAppsAreThirdParty =\n                !isNewActionAppCustomers && !isTriggerAppCustomers;\n\n              // If both trigger and action are customer's app, unset action\n              const shouldUnsetTrigger =\n                bothAppsAreCustomers || bothAppsAreThirdParty;\n\n              return {\n                ...currentData,\n                action: {\n                  appKey: newSelectedApp.key,\n                  inputParams: {},\n                },\n                trigger: shouldUnsetTrigger ? undefined : currentData.trigger,\n              };\n            });\n          }}\n        >\n          {(app) => (\n            <ComboBoxItem key={app._comboboxKey} textValue={app.name}>\n              <Center className=\"rollout-listbox__option-icon\">\n                <AppIcon appKey={app.key} />\n              </Center>\n              {app.name}\n            </ComboBoxItem>\n          )}\n        </ComboBox>\n      </FormControl>\n    </div>\n  );\n}\n\nexport function ActionAppKeyField(props: FieldProps) {\n  return <ActionAppKeyInput isDisabled={props.disabled} />;\n}\n","import React from \"react\";\n\nimport { useRolloutApiBaseUrlContext } from \"@rollouthq/connect-react/contexts/api-base-url-context\";\nimport { CSS, st } from \"@rollouthq/ui\";\n\nexport type AppIconProps = {\n  appKey: string;\n  css?: CSS;\n};\n\nexport function AppIcon(props: AppIconProps) {\n  const { apiBaseUrl } = useRolloutApiBaseUrlContext();\n\n  const { appKey, css } = props;\n  const src = `${apiBaseUrl}/connect-react/${appKey}/icon`;\n\n  return <st.img key={appKey} src={src} css={{ width: \"1em\", ...css }} />;\n}\n","import React, { ReactNode, useMemo } from \"react\";\n\nimport { useQuery } from \"@rollouthq/api-client-react\";\nimport { createContext } from \"@rollouthq/ui/\";\n\nconst [_RolloutAppKeyProvider, useRolloutAppKeyContext] = createContext<{\n  appKey: string;\n}>({\n  name: \"RolloutEndUserProvider\",\n});\n\nexport { useRolloutAppKeyContext };\n\nexport function RolloutAppKeyProvider(props: { children: ReactNode }) {\n  const endUserQuery = useQuery([\"end-users.getInfo\"]);\n  const appKey = endUserQuery.data?.appKey;\n\n  if (appKey == null) {\n    return null;\n  }\n\n  return (\n    <RolloutAppKeyProviderInner appKey={appKey}>\n      {props.children}\n    </RolloutAppKeyProviderInner>\n  );\n}\n\nfunction RolloutAppKeyProviderInner(props: {\n  children: ReactNode;\n  appKey: string;\n}) {\n  const { appKey } = props;\n\n  const context = useMemo(() => ({ appKey }), [appKey]);\n\n  return (\n    <_RolloutAppKeyProvider value={context}>\n      {props.children}\n    </_RolloutAppKeyProvider>\n  );\n}\n","import { createProxy, getPath, ObjPathProxy } from \"ts-object-path\";\nimport { SafeParseReturnType } from \"zod\";\n\nexport function findIssue<Input, Output>(\n  validation: SafeParseReturnType<Input, Output>,\n  pathGetter: (b: ObjPathProxy<Input, Input>) => any\n) {\n  if (validation.success) {\n    return undefined;\n  }\n  const proxy = createProxy<Input>();\n  const path = getPath(pathGetter(proxy));\n\n  return validation.error.issues.find((err) => {\n    return err.path.join(\".\") === path.join(\".\");\n  });\n}\n","import { z } from \"zod\";\n\nimport { InferQueryOutput, UseQueryResult } from \"@rollouthq/api-client-react\";\nimport { Variable } from \"@rollouthq/common\";\nimport { createContext } from \"@rollouthq/ui\";\n\nimport { RenderFields } from \"./helpers/render-field\";\nimport {\n  AutomationFormData,\n  AutomationFormDataInput,\n  PartialAutomationFormData,\n} from \"./types\";\n\nexport type AutomationFormContext = {\n  data: PartialAutomationFormData;\n  setData: (\n    updater: (\n      currentData: PartialAutomationFormData\n    ) => PartialAutomationFormData\n  ) => void;\n  validation: z.SafeParseReturnType<\n    AutomationFormData,\n    AutomationFormDataInput\n  >;\n  apps: UseQueryResult<InferQueryOutput<\"apps.list\">>;\n  actions: UseQueryResult<InferQueryOutput<\"apps.actions\">>;\n  variables: readonly Variable[];\n  renderFields: RenderFields | undefined;\n};\n\nexport const [AutomationFormContextProvider, useAutomationFormContext] =\n  createContext<AutomationFormContext>({\n    name: \"AutomationForm\",\n  });\n","import React, { useCallback } from \"react\";\nimport { ZodIssue } from \"zod\";\n\nimport { useQuery } from \"@rollouthq/api-client-react/\";\nimport { AnyAuthCredentialInput } from \"@rollouthq/connect-react/components/credential-input\";\n\nimport { useAutomationFormContext } from \"./context\";\nimport { FieldProps } from \"./helpers/render-field\";\n\nexport type ActionCredentialIdInput = {\n  appKey: string;\n  credentialId: string | undefined;\n  setCredentialId: (newCredentialId: string | undefined) => void;\n  error: ZodIssue | undefined;\n  isDisabled?: boolean;\n};\n\nexport function ActionCredentialIdInput(props: ActionCredentialIdInput) {\n  const { appKey, credentialId, setCredentialId, error, isDisabled } = props;\n\n  const authInfoQuery = useQuery([\"apps.authInfo\", { appKey }]);\n\n  if (authInfoQuery.data == null) {\n    return null;\n  }\n\n  return (\n    <AnyAuthCredentialInput\n      appKey={appKey}\n      authInfoQuery={authInfoQuery}\n      credentialId={credentialId}\n      setCredentialId={setCredentialId}\n      error={error}\n      isDisabled={isDisabled}\n    />\n  );\n}\n\nexport function ActionCredentialIdField(props: FieldProps) {\n  const { data, setData, validation } = useAutomationFormContext();\n\n  const { action } = data;\n\n  const setCredentialId = useCallback(\n    (newCredentialId: string | undefined) =>\n      setData((currentData) => ({\n        ...currentData,\n        action: {\n          ...currentData.action!,\n          credentialId: newCredentialId,\n        },\n      })),\n    []\n  );\n\n  if (action?.actionKey == null) {\n    return null;\n  }\n\n  return (\n    <ActionCredentialIdInput\n      appKey={action.appKey}\n      credentialId={action.credentialId}\n      setCredentialId={setCredentialId}\n      error={\n        validation.success\n          ? undefined\n          : validation.error.issues.find(\n              (issue) => issue.path.join(\".\") === \"action.credentialId\"\n            )\n      }\n      isDisabled={props.disabled}\n    />\n  );\n}\n","import assert from \"assert\";\n\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { ZodIssue } from \"zod\";\n\nimport {\n  InferQueryOutput,\n  useMutation,\n  useQuery,\n  UseQueryResult,\n} from \"@rollouthq/api-client-react\";\nimport { CredentialDetails } from \"@rollouthq/connect-react/components/automation-form/helpers/credential-details\";\nimport { useOAuth } from \"@rollouthq/connect-react/components/automation-form/use-oauth\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport {\n  Avatar,\n  Center,\n  ComboBox,\n  ComboBoxItem,\n  dataAttr,\n  FormControl,\n  GoogleSignIn,\n  GreenPlus,\n  Person,\n  Plus,\n} from \"@rollouthq/ui\";\n\nconst ADD_NEW_CREDENTIAL_OPTION = {\n  id: \"ADD_OPTION\",\n  label: \"Add new account\",\n  avatar: undefined,\n  icon: <Plus />,\n} as const;\n\nexport type CredentialInputProps = {\n  appKey: string;\n  authInfoQuery: UseQueryResult<InferQueryOutput<\"apps.authInfo\">>;\n  setCredentialId: (newCredentialId: string | undefined) => void;\n  credentialId: string | undefined;\n  error: ZodIssue | undefined;\n  isDisabled?: boolean;\n};\n\nexport function CredentialInput(props: CredentialInputProps) {\n  const {\n    isDisabled,\n    appKey,\n    setCredentialId,\n    credentialId,\n    authInfoQuery,\n    error,\n  } = props;\n\n  const { shouldShowErrors } = useFormContext();\n  const [oauthError, setOauthError] = useState(false);\n  const [savingApiToken, setSavingApiToken] = useState(false);\n  const apiTokenQuery = useMutation(\"credentials.add-api-token\");\n  const credentials = useQuery([\"apps.credentials\", { appKey }]);\n  const firstApiTokenInput = useRef<HTMLInputElement | null>(null);\n  const credentialInputRef = useRef<HTMLInputElement | null>(null);\n  const [displayCredentialDetails, setDisplayCredentialDetails] =\n    useState(false);\n\n  const { openOAuthPopup, oauthPopupError } = useOAuth({\n    onCredentialAdded: (newCredentialId) => {\n      setCredentialId(newCredentialId);\n      credentials.refetch();\n    },\n  });\n\n  // setAuthError on popupError\n  useEffect(() => {\n    setOauthError(oauthPopupError != null);\n  }, [oauthPopupError]);\n\n  const credentialsList = useMemo(\n    () => [...(credentials.data ?? []), ADD_NEW_CREDENTIAL_OPTION],\n    [credentials.data]\n  );\n\n  const selectedCredential = credentialsList.find(\n    (cred) => cred.id === credentialId\n  );\n\n  const icon = displayCredentialDetails ? (\n    <GreenPlus />\n  ) : selectedCredential && selectedCredential.avatar != null ? (\n    <Avatar\n      src={selectedCredential.avatar}\n      name={selectedCredential.label}\n      alt={selectedCredential.label}\n    />\n  ) : (\n    <Person />\n  );\n\n  function saveApiToken(apiToken: Record<string, string>) {\n    if (apiToken != null) {\n      setSavingApiToken(true);\n      apiTokenQuery.mutate(\n        {\n          appKey,\n          credential: apiToken,\n        },\n        {\n          onSuccess: (t) => {\n            setDisplayCredentialDetails(false);\n            credentials.refetch();\n            credentialInputRef.current?.blur();\n            setCredentialId(t);\n            setSavingApiToken(false);\n          },\n          onError: () => setSavingApiToken(false),\n        }\n      );\n    }\n  }\n\n  const options = credentialsList;\n  const selectedOption = options.find((opt) => opt.id === credentialId);\n\n  return (\n    <div\n      className=\"rollout-automation-form__credentials\"\n      data-avatar\n      data-selected={dataAttr(selectedCredential?.avatar != null)}\n    >\n      <FormControl error={shouldShowErrors ? error?.message : undefined}>\n        <ComboBox<typeof options[number]>\n          aria-label=\"Account dropdown\"\n          customRef={credentialInputRef}\n          defaultItems={options}\n          selectedOption={selectedOption}\n          menuTrigger=\"focus\"\n          icon={icon}\n          isDisabled={isDisabled}\n          isLoading={credentials.isFetching || authInfoQuery.isFetching}\n          inputPlaceholder={\n            displayCredentialDetails ? \"Connect new account\" : \"Select account\"\n          }\n          onSelectionChange={(newCred) => {\n            if (newCred == null) {\n              return setCredentialId(undefined);\n            }\n\n            const appAuthInfo = authInfoQuery.data;\n            const addNewAccount = newCred === ADD_NEW_CREDENTIAL_OPTION;\n\n            assert(appAuthInfo != null, \"No app auth info\");\n\n            if (addNewAccount) {\n              if (\n                appAuthInfo.type === \"oauth1\" ||\n                appAuthInfo.type === \"oauth2\"\n              ) {\n                if (appAuthInfo.customParams != null) {\n                  setDisplayCredentialDetails(true);\n                  setTimeout(() => firstApiTokenInput.current?.focus());\n                } else {\n                  openOAuthPopup({ appKey });\n                }\n              }\n\n              if (appAuthInfo.type === \"apiKey\") {\n                setDisplayCredentialDetails(true);\n                setTimeout(() => firstApiTokenInput.current?.focus());\n              }\n\n              setOauthError(false);\n              return;\n            }\n\n            setOauthError(false);\n            setDisplayCredentialDetails(false);\n            setCredentialId(newCred.id);\n          }}\n        >\n          {(item) => {\n            const isGoogleApp =\n              appKey === \"gmail\" ||\n              appKey === \"googleCalendar\" ||\n              appKey === \"googleDocs\" ||\n              appKey === \"googleSheets\";\n\n            if (isGoogleApp && item.id === \"ADD_OPTION\") {\n              return (\n                <ComboBoxItem key={item._comboboxKey} textValue={item.label}>\n                  <GoogleSignIn />\n                </ComboBoxItem>\n              );\n            } else {\n              return (\n                <ComboBoxItem key={item._comboboxKey} textValue={item.label}>\n                  <Center className=\"rollout-listbox__option-icon\">\n                    <Avatar\n                      aria-label=\"Option icon\"\n                      src={item.avatar}\n                      name={\"icon\" in item ? null : item.label}\n                      alt={item.label}\n                      icon={\"icon\" in item ? item.icon : undefined}\n                    />\n                  </Center>\n                  {item.label}\n                </ComboBoxItem>\n              );\n            }\n          }}\n        </ComboBox>\n      </FormControl>\n\n      {oauthError && (\n        <div className=\"rollout-automation-form-oauth__error__message\">\n          {oauthPopupError ?? \"Oops! Couldn't link that account.\"}\n        </div>\n      )}\n\n      {displayCredentialDetails && authInfoQuery.data != null && (\n        <CredentialDetails\n          appKey={appKey}\n          authType={authInfoQuery.data}\n          saveApiToken={saveApiToken}\n          savingApiToken={savingApiToken}\n          credentialId={credentialId}\n          firstApiTokenInput={firstApiTokenInput}\n          openOAuthPopup={openOAuthPopup}\n          closeModal={() => setDisplayCredentialDetails(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport type AnyAuthCredentialInputProps = {\n  appKey: string;\n  authInfoQuery: UseQueryResult<InferQueryOutput<\"apps.authInfo\">>;\n  setCredentialId: (newCredentialId: string | undefined) => void;\n  credentialId: string | undefined;\n  error: ZodIssue | undefined;\n  isDisabled?: boolean;\n};\n\nexport function AnyAuthCredentialInput(props: AnyAuthCredentialInputProps) {\n  const {\n    appKey,\n    authInfoQuery,\n    credentialId,\n    error,\n    setCredentialId,\n    isDisabled,\n  } = props;\n\n  const authInfo = authInfoQuery.data;\n\n  if (authInfo == null) {\n    return null;\n  }\n\n  if (\n    (authInfo.type === \"oauth1\" || authInfo.type === \"oauth2\") &&\n    authInfo.singleCredentialOnly\n  ) {\n    return null;\n  }\n\n  if (authInfo.type === \"none\") {\n    return null;\n  }\n\n  return (\n    <CredentialInput\n      appKey={appKey}\n      authInfoQuery={authInfoQuery}\n      credentialId={credentialId}\n      setCredentialId={setCredentialId}\n      error={error}\n      isDisabled={isDisabled}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { InferQueryOutput, useMutation } from \"@rollouthq/api-client-react\";\nimport { Spinner } from \"@rollouthq/ui\";\n\nimport { TokenInput } from \"./token-input\";\n\ntype CredentialDetailsProps = {\n  appKey: string;\n  authType: InferQueryOutput<\"apps.authInfo\">;\n  saveApiToken: (apiToken: Record<string, string>) => void;\n  credentialId: string | undefined;\n  firstApiTokenInput: React.MutableRefObject<HTMLInputElement | null> | null;\n  openOAuthPopup: (opts: {\n    appKey: string;\n    customParams?: Record<string, any>;\n  }) => Promise<void>;\n  closeModal: () => void;\n  savingApiToken: boolean;\n};\n\nexport function CredentialDetails(props: CredentialDetailsProps) {\n  const {\n    appKey,\n    saveApiToken,\n    authType,\n    firstApiTokenInput,\n    openOAuthPopup,\n    closeModal,\n    savingApiToken,\n  } = props;\n\n  const [inputValues, setInputValues] = useState<Record<string, string>>({});\n\n  const [apiTokenConnectionTested, setApiTokenConnectionTested] =\n    useState(false);\n\n  const [apiTokenConnectionValid, setApiTokenConnectionValid] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n\n  const apiTokenConnectionQuery = useMutation(\"credentials.test-connection\");\n  const apiTokenFormIsValid = validateApiTokenForm();\n\n  // When api token is reset\n  useEffect(() => {\n    if (apiTokenConnectionTested) {\n      setApiTokenConnectionTested(false);\n      setApiTokenConnectionValid(false);\n    }\n  }, [inputValues]);\n\n  function validateApiTokenForm() {\n    if (\"customParams\" in authType && authType.customParams != null) {\n      return authType.customParams.every((i) => inputValues?.[i.key] != null);\n    }\n\n    return true;\n  }\n\n  function testApiTokenConnection() {\n    setTestingConnection(true);\n    apiTokenConnectionQuery.mutate(\n      { appKey: appKey, apiToken: inputValues },\n      {\n        onSuccess: (valid) => {\n          setApiTokenConnectionTested(true);\n          setApiTokenConnectionValid(valid);\n          setTestingConnection(false);\n        },\n      }\n    );\n  }\n\n  function renderInputs() {\n    if (authType == null) {\n      return null;\n    }\n    if (\"customParams\" in authType) {\n      return authType.customParams?.map((input, inputIdx) => (\n        <TokenInput\n          key={inputIdx}\n          ref={inputIdx === 0 ? firstApiTokenInput : undefined}\n          definition={input}\n          value={inputValues?.[input.key] ?? \"\"}\n          onChange={(newValue) =>\n            setInputValues({ ...inputValues, [input.key]: newValue })\n          }\n          isTestingConnection={testingConnection}\n        />\n      ));\n    }\n  }\n\n  const openOAuth = () => {\n    openOAuthPopup({\n      appKey,\n      customParams: inputValues,\n    });\n    setTestingConnection(false);\n    closeModal();\n  };\n\n  const testOrSaveToken = () => {\n    if (apiTokenConnectionValid && inputValues != null) {\n      saveApiToken(inputValues);\n    } else {\n      testApiTokenConnection();\n    }\n  };\n\n  return (\n    <div className=\"rollout-automation-form__api-token-input-container\">\n      {renderInputs()}\n\n      {authType?.type === \"apiKey\" ? (\n        <div className=\"rollout-automation-form__api-token-apitoken-button-container\">\n          <button\n            type=\"button\"\n            aria-label=\"Save button\"\n            disabled={\n              !apiTokenFormIsValid || testingConnection || savingApiToken\n            }\n            className={`rollout-button--primary ${\n              testingConnection\n                ? \"rollout-automation-form__api-token-test-button\"\n                : \"rollout-automation-form__api-token-save-button\"\n            }`}\n            onClick={testOrSaveToken}\n          >\n            {(testingConnection || savingApiToken) && <Spinner />}\n            {apiTokenConnectionTested && apiTokenConnectionValid\n              ? \"Save\"\n              : testingConnection\n              ? \"Testing Connection ...\"\n              : \"Test Connection\"}\n          </button>\n\n          {apiTokenConnectionTested && (\n            <span className=\"rollout-automation-form__api-token-connection-result\">\n              {apiTokenConnectionValid\n                ? \"✅ Connection Success\"\n                : \"⚠️ Woops! Check your credentials\"}\n            </span>\n          )}\n        </div>\n      ) : (\n        <button\n          type=\"button\"\n          aria-label=\"Save button\"\n          disabled={!apiTokenFormIsValid || testingConnection || savingApiToken}\n          className=\"rollout-button--primary\"\n          onClick={openOAuth}\n        >\n          Add account\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { forwardRef } from \"react\";\n\nimport { AuthCustomParamInputDefinition } from \"@rollouthq/api/engine/define-auth\";\nimport { TextField } from \"@rollouthq/ui\";\n\ntype TokenInputProps = {\n  definition: AuthCustomParamInputDefinition;\n  isTestingConnection: boolean;\n  value: string;\n  onChange: (newValue: string) => void;\n};\n\nexport const TokenInput = forwardRef<HTMLInputElement, TokenInputProps>(\n  (props, ref) => {\n    const { isTestingConnection, value, onChange } = props;\n    const { infoHTML, label, placeholder } = props.definition;\n\n    return (\n      <div>\n        <label className=\"rollout-automation-form__api-token-input-label\">\n          {label}\n        </label>\n\n        {infoHTML != null && (\n          <div\n            dangerouslySetInnerHTML={{ __html: infoHTML }}\n            className=\"rollout-automation-form__api-token-input-info\"\n          />\n        )}\n\n        <div>\n          <TextField\n            ref={ref}\n            className=\"rollout-automation-form__api-token-input\"\n            aria-label=\"Token input text field\"\n            isDisabled={isTestingConnection}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\n\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport { FieldProps } from \"@rollouthq/connect-react/components/automation-form/helpers/render-field\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport { Center, ComboBox, ComboBoxItem, FormControl } from \"@rollouthq/ui\";\n\nimport { useAutomationFormContext } from \"./context\";\n\nexport function ActionKeySelectInput(props: { isDisabled?: boolean }) {\n  const { data, setData, actions, validation } = useAutomationFormContext();\n  const { shouldShowErrors, setShouldShowErrors } = useFormContext();\n\n  const getValidationIssues = () => {\n    if (validation.success) {\n      return null;\n    }\n    return validation.error.issues.find(\n      (issue) => issue.path.join(\".\") === \"action.actionKey\"\n    );\n  };\n  const error = getValidationIssues();\n  const icon =\n    data.action != null ? <AppIcon appKey={data.action.appKey} /> : undefined;\n\n  const options = actions.data ?? [];\n  const selectedAction = actions.data?.find(\n    (a) => a.key === data.action?.actionKey\n  );\n\n  return (\n    <div className=\"rollout-automation-form__action-action\">\n      <FormControl error={shouldShowErrors ? error?.message : undefined}>\n        <ComboBox<typeof options[number]>\n          aria-label=\"Action dropdown\"\n          defaultItems={options}\n          selectedOption={selectedAction}\n          isDisabled={props.isDisabled}\n          icon={icon}\n          isLoading={actions.isLoading}\n          inputPlaceholder=\"Select action\"\n          menuTrigger=\"focus\"\n          onSelectionChange={(newSelectedAction) => {\n            setShouldShowErrors(false);\n\n            return setData((currentData) => ({\n              ...currentData,\n              action: {\n                ...currentData.action!,\n                actionKey: newSelectedAction?.key,\n                inputParams: {},\n              },\n            }));\n          }}\n        >\n          {(item) => (\n            <ComboBoxItem key={item._comboboxKey} textValue={item.name}>\n              <Center className=\"rollout-listbox__option-icon\">{icon}</Center>\n              {item.name}\n            </ComboBoxItem>\n          )}\n        </ComboBox>\n      </FormControl>\n    </div>\n  );\n}\n\nexport function ActionKeyField(props: FieldProps) {\n  return <ActionKeySelectInput isDisabled={props.disabled} />;\n}\n","import assert from \"assert\";\n\nimport React from \"react\";\n\nimport { ActionAppKeyField } from \"./action-app-key-input\";\nimport { ActionCredentialIdField } from \"./action-credential-id-input\";\nimport { ActionKeyField } from \"./action-key-select-input\";\nimport { AutomationFormActionInputs } from \"./automation-form-action-inputs\";\nimport { useAutomationFormContext } from \"./context\";\nimport { renderField } from \"./helpers/render-field\";\n\nexport function AutomationFormAction() {\n  const { data, renderFields } = useAutomationFormContext();\n  const { action } = data;\n\n  assert(\n    typeof renderFields?.action !== \"function\" &&\n      typeof renderFields?.action !== \"boolean\"\n  );\n\n  const actionAppKeyField = renderField({\n    defaultField: ActionAppKeyField,\n    renderer: renderFields?.action?.appKey,\n    ctx: { ActionAppKeyField },\n  });\n\n  const actionKeyField = renderField({\n    defaultField: ActionKeyField,\n    renderer: renderFields?.action?.actionKey,\n    ctx: { ActionKeyField },\n  });\n\n  const credentialIdField = renderField({\n    defaultField: ActionCredentialIdField,\n    renderer: renderFields?.action?.credentialId,\n    ctx: { ActionCredentialIdField },\n  });\n\n  return (\n    <>\n      <div className=\"rollout-automation-form__action\">\n        <div className=\"rollout-automation-form__label\">Select action</div>\n\n        <div className=\"rollout-automation-form__helper-text\">\n          This is what your automation will do when triggered\n        </div>\n\n        {actionAppKeyField}\n        {actionKeyField}\n        {credentialIdField}\n      </div>\n\n      {action?.actionKey != null && action.credentialId != null && (\n        <AutomationFormActionInputs />\n      )}\n    </>\n  );\n}\n","import React, { useCallback } from \"react\";\n\nimport { useTRPCContext } from \"@rollouthq/api-client-react\";\nimport { AppComponentRenderer } from \"@rollouthq/connect-react/components/app-component-renderer\";\nimport { useAutomationFormContext } from \"@rollouthq/connect-react/components/automation-form\";\nimport { useActionRendererData } from \"@rollouthq/connect-react/components/automation-form/get-action-renderer-data\";\n\nexport function AutomationFormActionInputs() {\n  return (\n    <div className=\"rollout-automation-form__action-inputs\">\n      <div>\n        <div className=\"rollout-automation-form__label\">Set up action</div>\n        <ActionInputFields />\n      </div>\n    </div>\n  );\n}\n\nexport function ActionInputFields() {\n  const { client } = useTRPCContext();\n  const { data, setData, variables } = useAutomationFormContext();\n  const action = data.action!;\n  const actionRendererData = useActionRendererData({ actionRef: data.action });\n\n  const setInputParams = useCallback(\n    (newParams: Record<string, any>) => {\n      setData((currentData) => ({\n        ...currentData,\n        action: {\n          ...currentData.action!,\n          inputParams: newParams,\n        },\n      }));\n    },\n    [setData]\n  );\n\n  if (actionRendererData == null || action.credentialId == null) {\n    return null;\n  }\n\n  return (\n    <div className=\"rollout-automation-form__action-inputs-wrapper\">\n      <AppComponentRenderer\n        api={client}\n        credentialId={action.credentialId!}\n        inputParams={action.inputParams}\n        setInputParams={setInputParams}\n        importedData={actionRendererData}\n        variables={variables}\n        getDynamicOptions={() => {\n          throw new Error(\"Dynamic options not implemented in actions\");\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { unreachableCase } from \"ts-assert-unreachable\";\nimport { createProxy } from \"ts-object-path\";\nimport { AnyZodObject, z } from \"zod\";\n\nimport { useQuery } from \"@rollouthq/api-client-react\";\nimport type { CustomerTriggerDropdownInputOption } from \"@rollouthq/api/engine/customers/get-customer-trigger-dropdown-options\";\nimport type {\n  DropdownInputDefOutput,\n  InputDefOutput,\n} from \"@rollouthq/api/engine/inputs/inputs-configuration\";\nimport { resolveMentions, Variable } from \"@rollouthq/common\";\nimport * as inputComponents from \"@rollouthq/connect-react/components/action-inputs\";\nimport { StyledActionInputFormControl } from \"@rollouthq/connect-react/components/action-inputs/helpers/action-input-form-control\";\nimport {\n  ComboBox,\n  ComboBoxItem,\n  RichEditor,\n  TextField,\n  useAsyncMemo,\n} from \"@rollouthq/ui\";\n\nimport {\n  AppComponentRendererContext,\n  AppComponentRendererContextProvider,\n} from \"./app-component-renderer-context\";\n\nconst b = createProxy<z.infer<AnyZodObject>>();\n\nexport type ActionRendererProps = AppComponentRendererContext;\n\nexport function AppComponentRenderer(props: ActionRendererProps) {\n  const {\n    api,\n    credentialId,\n    inputParams,\n    setInputParams,\n    importedData,\n    variables,\n    getDynamicOptions,\n  } = props;\n\n  return (\n    <AppComponentRendererContextProvider value={props}>\n      {\"Component\" in importedData ? (\n        <importedData.Component\n          b={b}\n          credentialId={credentialId}\n          inputParams={inputParams}\n          setInputParams={setInputParams}\n          api={api}\n          useQuery={useQuery}\n          inputComponents={inputComponents}\n        />\n      ) : (\n        <>\n          {importedData.inputParamDefs.map((def) => {\n            return (\n              <InputDefRenderer\n                key={def.key}\n                def={def}\n                value={inputParams[def.key]}\n                setValue={(newValue) =>\n                  setInputParams({\n                    ...inputParams,\n                    [def.key]: newValue,\n                  })\n                }\n                variables={variables}\n                getDynamicOptions={getDynamicOptions}\n              />\n            );\n          })}\n        </>\n      )}\n    </AppComponentRendererContextProvider>\n  );\n}\n\nfunction InputDefRenderer(props: {\n  def: InputDefOutput;\n  value: any;\n  setValue: (newValue: any) => void;\n  variables: readonly Variable[];\n  getDynamicOptions: (opts: {\n    inputKey: string;\n  }) => Promise<CustomerTriggerDropdownInputOption[]>;\n}) {\n  const { def, value, setValue, variables, getDynamicOptions } = props;\n\n  function renderInput() {\n    if (def.type === \"plainText\") {\n      return (\n        <TextField\n          className=\"rollout-input\"\n          value={value ?? \"\"}\n          onChange={setValue}\n        />\n      );\n    }\n\n    if (def.type === \"dropdown\") {\n      return (\n        <DropdownInputDefRenderer\n          def={def}\n          value={value}\n          setValue={setValue}\n          getDynamicOptions={getDynamicOptions}\n        />\n      );\n    }\n\n    if (def.type === \"string\") {\n      return (\n        <div className=\"rollout-rich-text-input\">\n          <RichEditor\n            value={value && resolveMentions(value, variables)}\n            setValue={setValue}\n            formattingEnabled={false}\n            linksEnabled={false}\n            mentionVariables={variables}\n          />\n        </div>\n      );\n    }\n\n    unreachableCase(def);\n  }\n\n  return (\n    <StyledActionInputFormControl\n      label={def.label}\n      isRequired\n      error={undefined}\n    >\n      {renderInput()}\n    </StyledActionInputFormControl>\n  );\n}\n\nfunction DropdownInputDefRenderer(props: {\n  def: DropdownInputDefOutput;\n  value: string;\n  setValue: (newValue: string | undefined) => void;\n  getDynamicOptions: (opts: {\n    inputKey: string;\n  }) => Promise<CustomerTriggerDropdownInputOption[]>;\n}) {\n  const { def, value, setValue, getDynamicOptions } = props;\n\n  const dropdownOptionsAsync = useAsyncMemo(async () => {\n    if (def.dropdownConfiguration?.type === \"static\") {\n      return def.dropdownConfiguration.staticOptions.map((opt) => ({\n        key: opt,\n        label: opt,\n      }));\n    } else {\n      return await getDynamicOptions({ inputKey: def.key });\n    }\n  }, [JSON.stringify(def.dropdownConfiguration)]);\n\n  const dropdownOptions = dropdownOptionsAsync.value ?? [];\n  const selectedOption = dropdownOptions.find((e) => e.key === value);\n\n  return (\n    <ComboBox<typeof dropdownOptions[number]>\n      defaultItems={dropdownOptions}\n      selectedOption={selectedOption}\n      menuTrigger=\"focus\"\n      icon={null}\n      inputPlaceholder=\"Select option\"\n      onSelectionChange={(newSelectedOption) => {\n        setValue(newSelectedOption?.key);\n      }}\n    >\n      {(item) => (\n        <ComboBoxItem key={item._comboboxKey} textValue={item.label}>\n          {item.label}\n        </ComboBoxItem>\n      )}\n    </ComboBox>\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport { isVariable, z } from \"@rollouthq/common\";\nimport * as ActionInputs from \"@rollouthq/connect-react/components/action-inputs\";\nimport { AppComponentRendererContext } from \"@rollouthq/connect-react/components/app-component-renderer/app-component-renderer-context\";\nimport { PartialActionRef } from \"@rollouthq/connect-react/components/automation-form/types\";\nimport { useRolloutApiBaseUrlContext } from \"@rollouthq/connect-react/contexts/api-base-url-context\";\n\nconst useSafeLayoutEffect =\n  typeof document === \"undefined\" ? useEffect : useLayoutEffect;\n\nexport type UseActionRendererDataOpts = {\n  actionRef: PartialActionRef | undefined;\n};\n\nexport type UseActionRendererData = AppComponentRendererContext[\"importedData\"];\n\nexport function useActionRendererData(opts: UseActionRendererDataOpts) {\n  const { actionRef } = opts;\n  const { apiBaseUrl } = useRolloutApiBaseUrlContext();\n\n  const [actionRendererData, setActionRendererData] = useState<\n    UseActionRendererData | undefined\n  >();\n\n  useSafeLayoutEffect(() => {\n    Object.assign(window, {\n      ROLLOUT_CONNECT_DEPS: {\n        zod: { z },\n        react: React,\n        [\"@rollouthq/common\"]: { z, isVariable },\n        [\"@rollouthq/connect-react/components/action-inputs\"]: ActionInputs,\n      },\n    });\n  }, []);\n\n  useSafeLayoutEffect(() => {\n    if (actionRef != null) {\n      const { appKey, actionKey } = actionRef;\n      if (!appKey || !actionKey) {\n        return;\n      }\n\n      const importPath = `${apiBaseUrl}/connect-react/${appKey}/actions/${actionKey}.js`;\n      // Workaround to preserve es2020 dynamic import instead of transpiling it\n      // equivalent for:\n      // import(importPath).then(setActionRendererData);\n      const fnImport = new Function(\"path\", \"return import(path)\");\n      fnImport(importPath).then((data: UseActionRendererData) =>\n        setActionRendererData(data)\n      );\n    }\n  }, [actionRef?.appKey, actionRef?.actionKey]);\n\n  return actionRendererData;\n}\n","import React, {\n  createElement,\n  FunctionComponent,\n  ReactNode,\n  VoidFunctionComponent,\n} from \"react\";\n\nimport { Card } from \"@rollouthq/connect-react/components/card\";\n\nexport type RenderCb<Ctx extends {}> = (\n  ctx: Ctx & {\n    createElement: typeof createElement;\n    Card: typeof Card;\n  }\n) => ReactNode;\n\nexport type RenderCbOrBool<Ctx extends {}> = RenderCb<Ctx> | boolean;\n\nexport type FieldProps = {\n  disabled?: boolean;\n};\n\nexport type FieldComponent = FunctionComponent<FieldProps>;\n\nexport type TriggerRenderCb = RenderCbOrBool<{\n  TriggerAppKeyField: FieldComponent;\n  TriggerKeyField: FieldComponent;\n}>;\n\nexport type ActionRenderCb = RenderCbOrBool<{\n  ActionAppKeyField: FieldComponent;\n  ActionKeyField: FieldComponent;\n  ActionCredentialIdField: FieldComponent;\n  ActionInputFields: FieldComponent;\n}>;\n\nexport type RenderFields = {\n  name?: RenderCbOrBool<{ NameField: FieldComponent }>;\n  trigger?:\n    | TriggerRenderCb\n    | {\n        appKey?: RenderCbOrBool<{ TriggerAppKeyField: FieldComponent }>;\n        triggerKey?: RenderCbOrBool<{ TriggerKeyField: FieldComponent }>;\n        // inputParams?: {\n        //   [key: string]: RenderCbOrBool<{ Field: FieldComponent }>;\n        // };\n      };\n  action?:\n    | ActionRenderCb\n    | {\n        appKey?: RenderCbOrBool<{ ActionAppKeyField: FieldComponent }>;\n        actionKey?: RenderCbOrBool<{ ActionKeyField: FieldComponent }>;\n        credentialId?: RenderCbOrBool<{\n          ActionCredentialIdField: FieldComponent;\n        }>;\n      };\n};\n\nexport function renderField<Ctx extends {}>(opts: {\n  defaultField: VoidFunctionComponent<{}>;\n  ctx: Ctx;\n  renderer: RenderCbOrBool<Ctx> | undefined;\n}) {\n  const { defaultField: DefaultField, ctx, renderer } = opts;\n\n  if (renderer == null || renderer === true) {\n    return <DefaultField />;\n  }\n\n  if (renderer === false) {\n    return null;\n  }\n\n  return renderer({\n    ...ctx,\n    createElement,\n    Card,\n  });\n}\n","import React, { ReactNode } from \"react\";\n\nexport function Card(props: { children: ReactNode }) {\n  return <div className=\"rollout-card\">{props.children}</div>;\n}\n","import assert from \"assert\";\n\nimport React, { useCallback, useMemo } from \"react\";\n\nimport { useTRPCContext } from \"@rollouthq/api-client-react\";\nimport { AppComponentRenderer } from \"@rollouthq/connect-react/components/app-component-renderer\";\n\nimport { useAutomationFormContext } from \"./context\";\nimport { useTriggerRendererData } from \"./get-trigger-renderer-data\";\nimport { renderField } from \"./helpers/render-field\";\nimport { TriggerAppKeyField } from \"./helpers/trigger-app-key-input\";\nimport { TriggerKeyField } from \"./helpers/trigger-key-input\";\nimport { TriggerCredentialIdInput } from \"./trigger-credential-id-input\";\n\nexport function AutomationFormTrigger() {\n  const { client } = useTRPCContext();\n\n  const { data, setData, renderFields, validation } =\n    useAutomationFormContext();\n\n  const { trigger } = data;\n\n  const triggerRendererData = useTriggerRendererData(trigger);\n\n  const setInputParams = useCallback(\n    (newParams: Record<string, any>) => {\n      setData((currentData) => ({\n        ...currentData,\n        trigger: {\n          ...currentData.trigger!,\n          inputParams: newParams,\n        },\n      }));\n    },\n    [setData]\n  );\n\n  const setCredentialId = useCallback(\n    (newCredentialId: string | undefined) =>\n      setData((currentData) => ({\n        ...currentData,\n        trigger: {\n          ...currentData.trigger!,\n          credentialId: newCredentialId,\n        },\n      })),\n    [setData]\n  );\n\n  const variables = useMemo(() => [], []);\n\n  assert(\n    typeof renderFields?.trigger !== \"function\" &&\n      typeof renderFields?.trigger !== \"boolean\"\n  );\n\n  const triggerAppKeyField = renderField({\n    defaultField: TriggerAppKeyField,\n    renderer: renderFields?.trigger?.appKey,\n    ctx: { TriggerAppKeyField },\n  });\n\n  const triggerKeyField = renderField({\n    defaultField: TriggerKeyField,\n    renderer: renderFields?.trigger?.triggerKey,\n    ctx: { TriggerKeyField },\n  });\n\n  const hasInputParams =\n    triggerRendererData &&\n    (\"inputParamsSchema\" in triggerRendererData\n      ? Object.keys(triggerRendererData.inputParamsSchema.shape).length > 0\n      : triggerRendererData.inputParamDefs.length > 0);\n\n  return (\n    <div className=\"rollout-automation-form__trigger\">\n      <div className=\"rollout-automation-form__label\">Select trigger</div>\n\n      <div className=\"rollout-automation-form__helper-text\">\n        This is the event that will kick off your action\n      </div>\n\n      {triggerAppKeyField}\n\n      <div className=\"rollout-automation-form__trigger-trigger\">\n        {triggerKeyField}\n      </div>\n\n      {trigger?.triggerKey != null && (\n        <TriggerCredentialIdInput\n          appKey={trigger.appKey}\n          credentialId={trigger.credentialId}\n          setCredentialId={setCredentialId}\n          error={\n            validation.success\n              ? undefined\n              : validation.error.issues.find(\n                  (issue) => issue.path.join(\".\") === \"trigger.credentialId\"\n                )\n          }\n        />\n      )}\n\n      {trigger?.credentialId != null && hasInputParams && (\n        <div className=\"rollout-automation-form__trigger-inputs\">\n          <div className=\"rollout-automation-form__trigger-inputs-wrapper\">\n            <AppComponentRenderer\n              api={client}\n              credentialId={trigger.credentialId}\n              inputParams={trigger.inputParams}\n              setInputParams={setInputParams}\n              importedData={triggerRendererData}\n              variables={variables}\n              getDynamicOptions={({ inputKey }) =>\n                client.query(\"triggers.getTriggerInputOptions\", {\n                  triggerKey: trigger.triggerKey!,\n                  inputKey,\n                })\n              }\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { useQuery } from \"@rollouthq/api-client-react\";\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport { FieldProps } from \"@rollouthq/connect-react/components/automation-form/helpers/render-field\";\nimport { useRolloutAppKeyContext } from \"@rollouthq/connect-react/contexts/end-user-context\";\nimport { findIssue } from \"@rollouthq/connect-react/utils/find-zod-issue\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport {\n  Center,\n  ComboBox,\n  ComboBoxItem,\n  FormControl,\n  Rocket,\n} from \"@rollouthq/ui\";\n\nimport { useAutomationFormContext } from \"../context\";\n\ntype TriggerAppKeyInputProps = {\n  isDisabled?: boolean;\n};\n\nexport function TriggerAppKeyInput(props: TriggerAppKeyInputProps) {\n  const { appKey } = useRolloutAppKeyContext();\n  const { data, setData, validation } = useAutomationFormContext();\n  const { trigger } = data;\n  const triggerApps = useQuery([\"triggers.apps\"]);\n  const { shouldShowErrors } = useFormContext();\n  const error = findIssue(validation, (b) => b.trigger);\n  const options = triggerApps.data ?? [];\n  const selectedApp = options?.find((opt) => opt.key === trigger?.appKey);\n\n  return (\n    <div className=\"rollout-automation-form__trigger-app\">\n      <FormControl error={shouldShowErrors ? error?.message : undefined}>\n        <ComboBox<typeof options[number]>\n          aria-label=\"Trigger app dropdown\"\n          defaultItems={options}\n          selectedOption={selectedApp}\n          menuTrigger=\"focus\"\n          icon={\n            trigger == null ? <Rocket /> : <AppIcon appKey={trigger.appKey} />\n          }\n          isDisabled={props.isDisabled}\n          inputPlaceholder=\"Select app\"\n          onSelectionChange={(newSelectedTriggerApp) => {\n            return setData((currentData) => {\n              if (newSelectedTriggerApp == null) {\n                return {\n                  ...currentData,\n                  trigger: undefined,\n                };\n              }\n\n              const isNewTriggerAppCustomers =\n                newSelectedTriggerApp.key === appKey;\n              const isActionAppCustomers =\n                currentData.action?.appKey === appKey;\n\n              const bothAppsAreCustomers =\n                isNewTriggerAppCustomers && isActionAppCustomers;\n\n              const bothAppsAreThirdParty =\n                !isNewTriggerAppCustomers && !isActionAppCustomers;\n\n              // If both trigger and action are customer's app, unset action\n              const shouldUnsetAction =\n                bothAppsAreCustomers || bothAppsAreThirdParty;\n\n              return {\n                ...currentData,\n                trigger: {\n                  appKey: newSelectedTriggerApp.key,\n                  inputParams: {},\n                },\n                action: shouldUnsetAction ? undefined : currentData.action,\n              };\n            });\n          }}\n        >\n          {(option) => (\n            <ComboBoxItem key={option._comboboxKey} textValue={option.name}>\n              <Center className=\"rollout-listbox__option-icon\">\n                <AppIcon appKey={option.key} />\n              </Center>\n              {option.name}\n            </ComboBoxItem>\n          )}\n        </ComboBox>\n      </FormControl>\n    </div>\n  );\n}\n\nexport function TriggerAppKeyField(props: FieldProps) {\n  return <TriggerAppKeyInput isDisabled={props.disabled} />;\n}\n","import React from \"react\";\n\nimport { useQuery } from \"@rollouthq/api-client-react\";\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport { FieldProps } from \"@rollouthq/connect-react/components/automation-form/helpers/render-field\";\nimport { findIssue } from \"@rollouthq/connect-react/utils/find-zod-issue\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport {\n  Center,\n  ComboBox,\n  ComboBoxItem,\n  FormControl,\n  Rocket,\n} from \"@rollouthq/ui\";\n\nimport { useAutomationFormContext } from \"../context\";\n\ntype TriggerInputProps = {\n  isDisabled?: boolean;\n};\n\nexport function TriggerKeyInput(props: TriggerInputProps) {\n  const { isDisabled } = props;\n  const { shouldShowErrors } = useFormContext();\n  const { validation, data, setData } = useAutomationFormContext();\n  const { trigger } = data;\n\n  const triggers = useQuery([\"apps.triggers\", { appKey: trigger?.appKey! }], {\n    enabled: trigger?.appKey != null,\n  });\n\n  const error = findIssue(validation, (b) => b.trigger.triggerKey);\n  const options = triggers.data ?? [];\n  const selectedOption = options.find((opt) => opt.key === trigger?.triggerKey);\n\n  return (\n    <FormControl error={shouldShowErrors ? error?.message : undefined}>\n      <ComboBox<typeof options[number]>\n        aria-label=\"Trigger dropdown\"\n        defaultItems={options}\n        selectedOption={selectedOption}\n        menuTrigger=\"focus\"\n        isDisabled={isDisabled || triggers.isLoading}\n        icon={\n          trigger?.appKey == null ? (\n            <Rocket />\n          ) : (\n            <AppIcon appKey={trigger?.appKey} />\n          )\n        }\n        inputPlaceholder=\"Select trigger\"\n        onSelectionChange={(newTrigger) =>\n          setData((currentData) => ({\n            ...currentData,\n            trigger: {\n              ...currentData.trigger!,\n              triggerKey: newTrigger?.key,\n              inputParams: {},\n            },\n          }))\n        }\n      >\n        {(item) => (\n          <ComboBoxItem key={item._comboboxKey} textValue={item.name}>\n            <Center className=\"rollout-listbox__option-icon\">\n              {trigger?.appKey == null ? (\n                <Rocket />\n              ) : (\n                <AppIcon appKey={trigger?.appKey} />\n              )}\n            </Center>\n\n            {item.name}\n          </ComboBoxItem>\n        )}\n      </ComboBox>\n    </FormControl>\n  );\n}\n\nexport function TriggerKeyField(props: FieldProps) {\n  return <TriggerKeyInput isDisabled={props.disabled} />;\n}\n","import React from \"react\";\nimport { ZodIssue } from \"zod\";\n\nimport { useQuery } from \"@rollouthq/api-client-react\";\nimport { AnyAuthCredentialInput } from \"@rollouthq/connect-react/components/credential-input\";\n\nexport type TriggerCredentialIdInputProps = {\n  appKey: string;\n  credentialId: string | undefined;\n  setCredentialId: (newCredentialId: string | undefined) => void;\n  error: ZodIssue | undefined;\n  isDisabled?: boolean;\n};\n\nexport function TriggerCredentialIdInput(props: TriggerCredentialIdInputProps) {\n  const { appKey, credentialId, setCredentialId, error, isDisabled } = props;\n\n  const authInfoQuery = useQuery([\"apps.authInfo\", { appKey }]);\n\n  if (authInfoQuery.data == null) {\n    return null;\n  }\n\n  return (\n    <AnyAuthCredentialInput\n      appKey={appKey}\n      authInfoQuery={authInfoQuery}\n      credentialId={credentialId}\n      setCredentialId={setCredentialId}\n      error={error}\n      isDisabled={isDisabled}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { FieldProps } from \"@rollouthq/connect-react/components/automation-form/helpers/render-field\";\nimport { findIssue } from \"@rollouthq/connect-react/utils/find-zod-issue\";\nimport { useFormContext } from \"@rollouthq/connect-react/utils/form\";\nimport { TextField } from \"@rollouthq/ui\";\n\nimport { useAutomationFormContext } from \"./context\";\n\nexport function NameInput(props: { disabled?: boolean }) {\n  const { disabled = false } = props;\n  const { data, setData, validation } = useAutomationFormContext();\n  const { shouldShowErrors } = useFormContext();\n  const hasError = findIssue(validation, (b) => b.name) != null;\n\n  return (\n    <TextField\n      aria-label=\"Automation Name Input\"\n      className=\"rollout-automation-form__name\"\n      placeholder=\"Give your automation a name\"\n      isDisabled={disabled}\n      value={data.name ?? \"\"}\n      validationState={shouldShowErrors && hasError ? \"invalid\" : \"valid\"}\n      onChange={(newName) =>\n        setData((currentData) => ({\n          ...currentData,\n          name: newName,\n        }))\n      }\n    />\n  );\n}\n\nexport function NameField(props: FieldProps) {\n  return <NameInput {...props} />;\n}\n","import { useMemo } from \"react\";\nimport { AnyZodObject, z } from \"zod\";\n\nexport const zAutomationFormSchema = z.object({\n  name: z.string().min(1),\n  trigger: z.object({\n    appKey: z.string(),\n    triggerKey: z.string(),\n    credentialId: z.string(),\n    inputParams: z.object({}),\n  }),\n  action: z.object({\n    appKey: z.string(),\n    actionKey: z.string(),\n    credentialId: z.string(),\n    inputParams: z.object({}),\n  }),\n});\n\nexport type AutomationFormData = z.output<typeof zAutomationFormSchema>;\nexport type AutomationFormDataInput = PartialAutomationFormData;\n\nexport type MakePartialRef<\n  Type extends {},\n  RequiredProps extends keyof Type\n> = Pick<Type, RequiredProps> & Omit<MaybeUndefinedProps<Type>, RequiredProps>;\n\nexport type PartialActionRef = MakePartialRef<\n  AutomationFormData[\"action\"],\n  \"appKey\" | \"inputParams\"\n>;\n\nexport type PartialTriggerRef = MakePartialRef<\n  AutomationFormData[\"trigger\"],\n  \"appKey\" | \"inputParams\"\n>;\n\nexport type PartialAutomationFormData = Omit<\n  MaybeUndefinedProps<AutomationFormData>,\n  \"action\" | \"trigger\"\n> & {\n  action?: PartialActionRef;\n  trigger?: PartialTriggerRef;\n};\n\ntype MaybeUndefinedProps<T> = { [K in keyof T]?: T[K] | undefined };\n\nexport function useValidateAutomationFormData(opts: {\n  data: PartialAutomationFormData;\n  triggerInputParamsSchema: AnyZodObject;\n  actionInputParamsSchema: AnyZodObject;\n}) {\n  const { data, actionInputParamsSchema, triggerInputParamsSchema } = opts;\n\n  const schema = useMemo(\n    () =>\n      zAutomationFormSchema.extend({\n        trigger: zAutomationFormSchema.shape.trigger.extend({\n          inputParams: triggerInputParamsSchema,\n        }),\n        action: zAutomationFormSchema.shape.action.extend({\n          inputParams: actionInputParamsSchema,\n        }),\n      }),\n    [triggerInputParamsSchema, actionInputParamsSchema]\n  );\n\n  return useMemo(() => {\n    return schema.safeParse(data);\n  }, [data, schema]);\n}\n","import React, { useState } from \"react\";\n\nimport {\n  InferQueryOutput,\n  useMutation,\n  useQuery,\n  useTRPCContext,\n} from \"@rollouthq/api-client-react\";\nimport {\n  AutomationForm,\n  PartialAutomationFormData,\n  AutomationFormData,\n  AutomationFormProps,\n} from \"@rollouthq/connect-react/components/automation-form\";\n\ntype Automation = NonNullable<InferQueryOutput<\"automations.get\">>;\n\ntype AutomationEditorProps = {\n  automationId: string;\n  onAutomationDeleted?: () => void;\n  onAutomationUpdated?: (automation: Automation) => void;\n  onCancel?: () => void;\n  renderFields?: AutomationFormProps[\"renderFields\"];\n};\n\nexport function AutomationEditor(props: AutomationEditorProps) {\n  const {\n    automationId,\n    onAutomationDeleted,\n    onAutomationUpdated,\n    onCancel,\n    renderFields,\n  } = props;\n  const { invalidateQueries } = useTRPCContext();\n\n  const deleteAutomation = useMutation(\"automations.delete\", {\n    onSuccess: () => invalidateQueries([\"automations.list\"]),\n  });\n\n  const [automationFormData, setAutomationFormData] =\n    useState<PartialAutomationFormData>({});\n\n  const automation = useQuery([\"automations.get\", { automationId }], {\n    onSuccess(aut) {\n      if (aut != null) {\n        setAutomationFormData({\n          name: aut.name,\n          action: aut.action,\n          trigger: aut.trigger,\n        });\n      }\n    },\n  });\n\n  const updateAutomationMutation = useMutation(\"automations.update\");\n\n  if (automation.isLoading) {\n    return null;\n  }\n\n  if (automation.data == null) {\n    return (\n      <div className=\"rollout-automations-editor__not-found\">\n        Automation not found\n      </div>\n    );\n  }\n\n  const editAutomation = async (data: AutomationFormData) => {\n    const updatedAutomation = await updateAutomationMutation.mutateAsync({\n      id: automationId,\n      automationData: {\n        name: data.name,\n        action: data.action,\n        trigger: data.trigger,\n      },\n    });\n\n    onAutomationUpdated?.(updatedAutomation);\n  };\n\n  const onDelete = () => {\n    deleteAutomation.mutate(\n      { id: automation.data.id },\n      {\n        onSuccess: () => {\n          onAutomationDeleted?.();\n        },\n      }\n    );\n  };\n\n  return (\n    <div className=\"rollout-automation-editor\">\n      <AutomationForm\n        mode=\"edit\"\n        data={automationFormData}\n        renderFields={renderFields}\n        onUpdate={setAutomationFormData}\n        isSaving={updateAutomationMutation.isLoading}\n        onSave={editAutomation}\n        onDelete={onDelete}\n        onCancel={onCancel}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport {\n  AutomationCreator,\n  AutomationCreatorProps,\n} from \"@rollouthq/connect-react/components/automation-creator\";\nimport { AutomationEditor } from \"@rollouthq/connect-react/components/automation-editor\";\nimport { AutomationFormProps } from \"@rollouthq/connect-react/components/automation-form\";\nimport {\n  MyAutomations,\n  MyAutomationsProps,\n} from \"@rollouthq/connect-react/components/my-automations\";\nimport { ArrowBack } from \"@rollouthq/ui\";\n\nexport type AutomationsManagerProps = {\n  onAutomationCreated?: AutomationCreatorProps[\"onAutomationCreated\"];\n  onBeforeAutomationCreate?: AutomationCreatorProps[\"onBeforeAutomationCreate\"];\n  prefilled?: AutomationCreatorProps[\"prefilled\"];\n  filter?: MyAutomationsProps[\"filter\"];\n  renderFields?: AutomationFormProps[\"renderFields\"];\n};\n\ntype AutomationsManagerView =\n  | { mode: \"LIST\" }\n  | { mode: \"CREATE\" }\n  | { mode: \"EDIT\"; automationId: string };\n\nexport function AutomationsManager(props: AutomationsManagerProps) {\n  const {\n    onAutomationCreated,\n    onBeforeAutomationCreate,\n    prefilled,\n    filter,\n    renderFields,\n  } = props;\n\n  const [currentView, setCurrentView] = useState<AutomationsManagerView>({\n    mode: \"LIST\",\n  });\n\n  return (\n    <div className=\"rollout-automations-manager\">\n      {currentView.mode === \"LIST\" && (\n        <MyAutomations\n          onEditAutomation={(aut) =>\n            setCurrentView({ mode: \"EDIT\", automationId: aut.id })\n          }\n          onCreateAutomation={() => setCurrentView({ mode: \"CREATE\" })}\n          filter={filter}\n        />\n      )}\n\n      {(currentView.mode === \"CREATE\" || currentView.mode === \"EDIT\") && (\n        <div className=\"rollout-automations-manager__navbar\">\n          <button\n            type=\"button\"\n            aria-label=\"Return to automations list button\"\n            className=\"rollout-automations-manager__back-btn\"\n            onClick={() => setCurrentView({ mode: \"LIST\" })}\n          >\n            <ArrowBack className=\"rollout-automation-form__header-back__arrow\" />\n          </button>\n        </div>\n      )}\n      {currentView.mode === \"CREATE\" && (\n        <AutomationCreator\n          onBeforeAutomationCreate={onBeforeAutomationCreate}\n          onAutomationCreated={(createdData) => {\n            onAutomationCreated?.(createdData);\n            setCurrentView({ mode: \"LIST\" });\n          }}\n          prefilled={prefilled}\n          renderFields={renderFields}\n        />\n      )}\n      {currentView.mode === \"EDIT\" && (\n        <AutomationEditor\n          automationId={currentView.automationId}\n          onAutomationUpdated={() => setCurrentView({ mode: \"LIST\" })}\n          onAutomationDeleted={() => setCurrentView({ mode: \"LIST\" })}\n          renderFields={renderFields}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  InferQueryOutput,\n  useMutation,\n  useQuery,\n  useTRPCContext,\n} from \"@rollouthq/api-client-react\";\nimport { AutomationsList } from \"@rollouthq/connect-react/components/automations-list\";\nimport { Plus } from \"@rollouthq/ui\";\n\ntype AutomationsListItem = InferQueryOutput<\"automations.list\">[number];\n\nexport type AutomationFilterData = {\n  name?: string;\n  trigger: {\n    appKey?: string;\n    triggerKey?: string;\n    inputParams?: Record<string, any>;\n  };\n  action: {\n    appKey?: string;\n    actionKey?: string;\n    inputParams?: Record<string, any>;\n  };\n};\n\nexport type MyAutomationsProps = {\n  onEditAutomation: (automation: AutomationsListItem) => void;\n  onCreateAutomation: () => void;\n  filter?: (automation: AutomationFilterData) => boolean;\n};\n\nexport function MyAutomations(props: MyAutomationsProps) {\n  const { onEditAutomation, onCreateAutomation, filter } = props;\n  const { invalidateQueries } = useTRPCContext();\n  const [automationData, setAutomationData] = useState<AutomationsListItem[]>(\n    () => []\n  );\n\n  const automations = useQuery([\"automations.list\"]);\n\n  useEffect(() => {\n    if (automations.data != null) {\n      if (filter != null) {\n        setAutomationData(\n          automations.data.filter((a: AutomationsListItem) => {\n            try {\n              return filter(a as AutomationFilterData);\n            } catch (filterError) {\n              console.error(filterError);\n              return false;\n            }\n          })\n        );\n      } else {\n        setAutomationData(automations.data);\n      }\n    }\n  }, [automations.data, filter]);\n\n  const deleteAutomation = useMutation(\"automations.delete\", {\n    onSuccess: () => invalidateQueries([\"automations.list\"]),\n  });\n\n  return (\n    <div>\n      <div className=\"rollout-automations-list__header\">\n        <span className=\"rollout-automations-list__header-title\">\n          My automations\n        </span>\n\n        <button\n          type=\"button\"\n          aria-label=\"New automation button\"\n          className=\"rollout-automations-list__new-btn\"\n          onClick={() => onCreateAutomation()}\n        >\n          <Plus />\n          New\n        </button>\n      </div>\n\n      <AutomationsList\n        automations={automationData ?? []}\n        isLoading={automations.isFetching}\n        isDeleting={deleteAutomation.isLoading}\n        onDeleteAutomation={(at) => deleteAutomation.mutate({ id: at.id })}\n        onEditAutomation={onEditAutomation}\n      />\n    </div>\n  );\n}\n","import { matchSorter } from \"match-sorter\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { InferQueryOutput } from \"@rollouthq/api-client-react\";\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport {\n  isChildofInteractiveElement,\n  Center,\n  Search,\n  TextField,\n  Spinner,\n  dataAttr,\n} from \"@rollouthq/ui\";\nimport { useToggle, Trash } from \"@rollouthq/ui\";\n\ntype AutomationsListItem = InferQueryOutput<\"automations.list\">[number];\n\nexport type AutomationsListProps = {\n  automations: AutomationsListItem[];\n  isLoading?: boolean;\n  isDeleting?: boolean;\n  onEditAutomation: (automation: AutomationsListItem) => void;\n  onDeleteAutomation: (automation: AutomationsListItem) => void;\n};\n\nexport function AutomationsList(props: AutomationsListProps) {\n  const {\n    automations,\n    isLoading = false,\n    isDeleting = false,\n    onEditAutomation,\n    onDeleteAutomation,\n  } = props;\n\n  const [query, setQuery] = useState(\"\");\n\n  const automationFiltered = matchSorter(automations, query, {\n    keys: [\"name\", \"action.app.name\"],\n    threshold: matchSorter.rankings.ACRONYM,\n  });\n\n  const isEmptyAutomations = automationFiltered.length === 0;\n\n  return (\n    <div className=\"rollout-automations-list__container\">\n      <div className=\"rollout-automations-list__search-input__group\">\n        <div className=\"rollout-automations-list__search-input__left-element\">\n          <Search />\n        </div>\n\n        <TextField\n          aria-label=\"Search automations text field\"\n          placeholder=\"Search automations\"\n          value={query}\n          onChange={setQuery}\n          className=\"rollout-automations-list__search-input\"\n        />\n      </div>\n\n      {isLoading && (\n        <div className=\"rollout__loading_spinner_container\">\n          <Spinner className=\"rollout__loading_spinner\" />\n        </div>\n      )}\n\n      {!isLoading && isEmptyAutomations && (\n        <div className=\"rollout-automations-list__empty-msg\">\n          No automations found\n        </div>\n      )}\n\n      <div className=\"rollout-automations-list__list\">\n        {automationFiltered.map((automation) => (\n          <AutomationsListItem\n            key={automation.id}\n            automation={automation}\n            onEdit={() => onEditAutomation(automation)}\n            onDelete={() => onDeleteAutomation(automation)}\n            isDeleting={isDeleting}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype AutomationsListItemProps = {\n  automation: AutomationsListItem;\n  onEdit: () => void;\n  onDelete: () => void;\n  isDeleting: boolean;\n};\n\nfunction AutomationsListItem(props: AutomationsListItemProps) {\n  const { automation, onEdit, onDelete, isDeleting } = props;\n  const [isOpen, toggleDeleteMenu] = useToggle();\n  const [itemDeleting, setItemDeleting] = useState(false);\n\n  useEffect(() => {\n    if (!isDeleting && itemDeleting) {\n      setItemDeleting(false);\n    }\n  }, [isDeleting]);\n\n  const optionsList = isOpen && (\n    <div\n      className=\"rollout-automations-list-item__options__content\"\n      onMouseLeave={() => {\n        if (isOpen) {\n          toggleDeleteMenu();\n        }\n      }}\n    >\n      <span>Really delete?</span>\n      <button\n        type=\"button\"\n        aria-label=\"Confirm deletion button\"\n        onClick={() => {\n          onDelete();\n          setItemDeleting(true);\n        }}\n        className=\"rollout-automations-list-item__options__delete-item-btn\"\n      >\n        Delete\n      </button>\n\n      <button\n        type=\"button\"\n        aria-label=\"Cancel deletion button\"\n        onClick={toggleDeleteMenu}\n        className=\"rollout-automations-list-item__options__cancel-item-btn\"\n      >\n        Cancel\n      </button>\n    </div>\n  );\n\n  return (\n    <div\n      className=\"rollout-automations-list__item-wrapper\"\n      data-deleting={dataAttr(itemDeleting)}\n    >\n      {optionsList}\n      <div\n        className=\"rollout-automations-list__item\"\n        role=\"group\"\n        data-open={dataAttr(isOpen)}\n        onClick={(e) => {\n          if (!isChildofInteractiveElement(e.target as Element)) {\n            onEdit();\n          }\n        }}\n      >\n        <div className=\"rollout-automations-list-item__header\">\n          <div className=\"rollout-automations-list-item__icons\">\n            <Center className=\"rollout-automations-list-item__trigger\">\n              <AppIcon appKey={automation.trigger.appKey} />\n            </Center>\n            <Center className=\"rollout-automations-list-item__action\">\n              <AppIcon appKey={automation.action.appKey} />\n            </Center>\n          </div>\n          <div\n            role=\"button\"\n            className=\"rollout-automations-list-item__options__trigger\"\n            onClick={toggleDeleteMenu}\n          >\n            <Trash />\n          </div>\n        </div>\n        <div className=\"rollout-automations-list-item__name\">\n          {automation.name}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useSpinDelay } from \"spin-delay\";\n\nimport {\n  useLazyQuery,\n  useMutation,\n  useQuery,\n  useTRPCContext,\n} from \"@rollouthq/api-client-react\";\nimport type { AutomationThirdPartyActionRef } from \"@rollouthq/api/engine/automations/action-ref\";\nimport { inputDefToZodObject } from \"@rollouthq/common/\";\nimport { AppComponentRenderer } from \"@rollouthq/connect-react/components/app-component-renderer\";\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport { useActionRendererData } from \"@rollouthq/connect-react/components/automation-form/get-action-renderer-data\";\nimport { useTriggerRendererData } from \"@rollouthq/connect-react/components/automation-form/get-trigger-renderer-data\";\nimport { PartialActionRef } from \"@rollouthq/connect-react/components/automation-form/types\";\nimport { AnyAuthCredentialInput } from \"@rollouthq/connect-react/components/credential-input\";\nimport { useCredentialHandler } from \"@rollouthq/connect-react/hooks/use-credential-handler\";\nimport { FormContextProvider } from \"@rollouthq/connect-react/utils/form\";\nimport { Center, FormControl, Spinner, useAsyncMemo } from \"@rollouthq/ui\";\n\nimport {\n  PartialBlueprintActivatorData,\n  useValidateBlueprintActivatorFormData,\n  zBlueprintActivatorFormSchema,\n} from \"./types\";\n\nexport type BlueprintActivatorProps = {\n  blueprintId: string;\n};\n\nexport function BlueprintActivator(props: BlueprintActivatorProps) {\n  const { blueprintId } = props;\n\n  const { client, invalidateQueries } = useTRPCContext();\n\n  const [data, setData] = useState<PartialBlueprintActivatorData | undefined>();\n\n  const triggerPayloadSchema = useLazyQuery(\"triggers.getPayloadSchema\");\n  const triggerAuthType = useLazyQuery(\"apps.authInfo\");\n  const triggersForApp = useLazyQuery(\"apps.triggers\");\n\n  const triggerRendererData = useTriggerRendererData(data?.trigger);\n\n  useEffect(() => {\n    const trigger = data?.trigger;\n\n    if (trigger == null) {\n      return;\n    }\n\n    triggerAuthType.fetch({ appKey: trigger.appKey });\n    triggersForApp.fetch({ appKey: trigger.appKey });\n\n    if (trigger.triggerKey != null && trigger.appKey != null) {\n      triggerPayloadSchema.fetch({\n        appKey: trigger.appKey,\n        triggerKey: trigger.triggerKey,\n      });\n    }\n  }, [data?.trigger]);\n\n  const authType = useLazyQuery(\"apps.authInfo\");\n\n  useEffect(() => {\n    if (data?.action?.appKey != null) {\n      authType.fetch({ appKey: data.action.appKey });\n    }\n  }, [data?.action?.appKey]);\n\n  const blueprint = useQuery(\n    [\n      \"blueprints.get\",\n      {\n        blueprintId,\n      },\n    ],\n    {\n      onSuccess: (bp) => {\n        if (data == null) {\n          if (bp.automation != null) {\n            setData({\n              name: bp.automation.name,\n              action: bp.automation.action,\n              trigger: bp.automation.trigger,\n            });\n          } else {\n            setData({\n              name: bp.name,\n              action: bp.action,\n              trigger: bp.trigger,\n            });\n          }\n        }\n      },\n    }\n  );\n\n  const createAutomation = useMutation(\"blueprints.createAutomation\");\n  const deactivateAutomation = useMutation(\"blueprints.deactivateAutomation\");\n\n  const triggerInputParamsSchema = useMemo(() => {\n    if (triggerRendererData == null) {\n      return zBlueprintActivatorFormSchema.shape.action.shape.inputParams;\n    }\n    if (\"inputParamsSchema\" in triggerRendererData) {\n      return triggerRendererData.inputParamsSchema;\n    } else {\n      return inputDefToZodObject(triggerRendererData.inputParamDefs);\n    }\n  }, [triggerRendererData]);\n\n  const actionRendererData = useActionRendererData({\n    actionRef: data?.action,\n  });\n\n  const actionInputParamsSchema = useMemo(() => {\n    if (actionRendererData == null) {\n      return zBlueprintActivatorFormSchema.shape.action.shape.inputParams;\n    }\n    if (\"inputParamsSchema\" in actionRendererData) {\n      return actionRendererData.inputParamsSchema;\n    } else {\n      return inputDefToZodObject(actionRendererData.inputParamDefs);\n    }\n  }, [actionRendererData]);\n\n  const validation = useValidateBlueprintActivatorFormData({\n    data,\n    triggerInputParamsSchema,\n    actionInputParamsSchema,\n  });\n\n  const setTriggerCredentialId = useCallback(\n    (newCredentialId: string) =>\n      setData((currentData) => ({\n        ...currentData,\n        trigger: {\n          ...currentData?.trigger!,\n          credentialId: newCredentialId,\n        },\n      })),\n    [setData]\n  );\n\n  const setActionCredentialId = useCallback(\n    (newCredentialId: string) =>\n      setData((currentData) => ({\n        ...currentData,\n        action: {\n          ...currentData?.action!,\n          credentialId: newCredentialId,\n        },\n      })),\n    [setData]\n  );\n\n  useCredentialHandler({\n    appKey: data?.trigger?.appKey,\n    setCredentialId: setTriggerCredentialId,\n  });\n\n  const setTriggerInputParams = useCallback(\n    (newParams: Record<string, any>) => {\n      setData((currentData) => ({\n        ...currentData,\n        trigger: {\n          ...currentData!.trigger!,\n          inputParams: newParams,\n        },\n      }));\n    },\n    [setData]\n  );\n\n  const triggersQuery = useQuery(\n    [\"apps.triggers\", { appKey: data?.trigger?.appKey! }],\n    { enabled: data?.trigger?.appKey != null }\n  );\n\n  const selectedTrigger = triggersQuery.data?.find(\n    (t) => t.key === data?.trigger?.triggerKey\n  );\n\n  const triggerPayloadSchemaAsync = useAsyncMemo(async () => {\n    if (selectedTrigger == null) {\n      return [];\n    }\n    if (selectedTrigger.payloadConfiguration.type === \"static\") {\n      return selectedTrigger.payloadConfiguration.staticSchema;\n    }\n    return await client.query(\"triggers.getPayloadSchema\", {\n      appKey: data?.trigger?.appKey!,\n      triggerKey: data?.trigger?.triggerKey!,\n      inputParams: data?.trigger?.inputParams!,\n    });\n  }, [\n    JSON.stringify(selectedTrigger?.payloadConfiguration),\n    JSON.stringify(data?.trigger),\n  ]);\n\n  const triggerPayloadVariables = useMemo(\n    () =>\n      (triggerPayloadSchemaAsync.value ?? []).map((prop) => ({\n        id: prop.key,\n        label: prop.label,\n        type: \"string\" as const,\n      })),\n    [triggerPayloadSchemaAsync.value]\n  );\n\n  function maybeRenderActionRender() {\n    if (data?.action == null) {\n      return null;\n    }\n\n    if (actionRendererData == null) {\n      return null;\n    }\n\n    return (\n      <div className=\"rollout-automation-form__action-inputs\">\n        <div>\n          <div className=\"rollout-automation-form__label\">Set up action</div>\n\n          <div className=\"rollout-automation-form__credential\">\n            <FormControl label=\"Account\" isRequired>\n              <AnyAuthCredentialInput\n                error={\n                  validation.success\n                    ? undefined\n                    : validation.error.issues.find(\n                        (issue) =>\n                          issue.path.join(\".\") === \"action.credentialId\"\n                      )\n                }\n                credentialId={data.action.credentialId}\n                setCredentialId={(newCredentialId) => {\n                  const newAction: PartialActionRef = {\n                    ...(data.action as AutomationThirdPartyActionRef),\n                    credentialId: newCredentialId,\n                  };\n\n                  setData({\n                    ...data,\n                    action: newAction,\n                  });\n                }}\n                authInfoQuery={authType}\n                appKey={data.action.appKey}\n              />\n            </FormControl>\n          </div>\n\n          <div className=\"rollout-automation-form__action-inputs-wrapper\">\n            <AppComponentRenderer\n              isBlueprintActivation\n              api={client}\n              credentialId={data.action.credentialId!}\n              inputParams={data.action.inputParams}\n              setInputParams={(newParams) =>\n                setData({\n                  ...data,\n                  action: {\n                    ...(data.action as PartialActionRef),\n                    inputParams: newParams,\n                  },\n                })\n              }\n              importedData={actionRendererData}\n              variables={triggerPayloadVariables}\n              getDynamicOptions={() => {\n                throw new Error(\"Dynamic options not implemented in actions\");\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const isActivated = blueprint.data?.automation?.active ?? false;\n\n  const [shouldShowErrors, setShouldShowErrors] = useState(false);\n\n  const formContext = useMemo(\n    () => ({ shouldShowErrors, setShouldShowErrors }),\n    [shouldShowErrors, setShouldShowErrors]\n  );\n\n  const triggerInputVariables = useMemo(() => [], []);\n\n  async function activate() {\n    setShouldShowErrors(true);\n    if (validation.success) {\n      const d = validation.data;\n\n      await createAutomation.mutateAsync({\n        blueprintId,\n        trigger: {\n          credentialId: d.trigger.credentialId,\n          inputParams: d.trigger.inputParams,\n        },\n        action: {\n          credentialId: d.action.credentialId,\n          inputParams: d.action.inputParams,\n        },\n      });\n\n      invalidateQueries([\"blueprints.getAutomation\", { blueprintId }]);\n      invalidateQueries([\"blueprints.get\", { blueprintId }]);\n      invalidateQueries(\"blueprints.list\");\n    } else {\n      console.log(data);\n      console.error(validation.error);\n    }\n  }\n\n  async function deactivate() {\n    await deactivateAutomation.mutateAsync({ blueprintId });\n\n    invalidateQueries([\"blueprints.getAutomation\", { blueprintId }]);\n    invalidateQueries([\"blueprints.get\", { blueprintId }]);\n    invalidateQueries(\"blueprints.list\");\n  }\n\n  const showSpinner = useSpinDelay(data == null, {\n    delay: 500,\n    minDuration: 200,\n  });\n\n  if (data == null) {\n    return null;\n  }\n\n  if (showSpinner) {\n    return (\n      <div className=\"rollout__loading_spinner_container\">\n        <Spinner className=\"rollout__loading_spinner\" />\n      </div>\n    );\n  }\n\n  const hasInputParams =\n    triggerRendererData &&\n    (\"inputParamsSchema\" in triggerRendererData\n      ? Object.keys(triggerRendererData.inputParamsSchema.shape).length > 0\n      : triggerRendererData.inputParamDefs.length > 0);\n\n  const triggerInputs = data.trigger?.triggerKey != null && (\n    <div className=\"rollout-blueprint-activator__trigger\">\n      <div className=\"rollout-blueprint-activator__label\">Set up trigger</div>\n\n      <div className=\"rollout-blueprint-activator__trigger__fields\">\n        <AnyAuthCredentialInput\n          error={\n            validation.success\n              ? undefined\n              : validation.error.issues.find(\n                  (issue) => issue.path.join(\".\") === \"trigger.credentialId\"\n                )\n          }\n          appKey={data.trigger.appKey}\n          setCredentialId={(newCredentialId) =>\n            setData({\n              ...data,\n              trigger: {\n                ...data.trigger!,\n                credentialId: newCredentialId,\n              },\n            })\n          }\n          authInfoQuery={triggerAuthType}\n          credentialId={data.trigger.credentialId}\n        />\n\n        {data.trigger.credentialId != null && hasInputParams && (\n          <div className=\"rollout-automation-form__trigger-inputs-wrapper\">\n            <AppComponentRenderer\n              api={client}\n              credentialId={data.trigger.credentialId}\n              inputParams={data.trigger.inputParams}\n              setInputParams={setTriggerInputParams}\n              importedData={triggerRendererData}\n              variables={triggerInputVariables}\n              getDynamicOptions={({ inputKey }) =>\n                client.query(\"triggers.getTriggerInputOptions\", {\n                  triggerKey: data.trigger?.triggerKey!,\n                  inputKey,\n                })\n              }\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <FormContextProvider value={formContext}>\n      <div>\n        {blueprint.data != null && (\n          <div>\n            <div className=\"rollout-blueprint-activator__header\">\n              <div className=\"rollout-automations-list-item__icons\">\n                <Center className=\"rollout-automations-list-item__trigger\">\n                  <AppIcon appKey={blueprint.data.trigger.appKey} />\n                </Center>\n                <Center className=\"rollout-automations-list-item__action\">\n                  <AppIcon appKey={blueprint.data.action.appKey} />\n                </Center>\n              </div>\n\n              <div className=\"rollout-blueprint-activator__name\">\n                {blueprint.data.name}\n              </div>\n            </div>\n\n            {triggerInputs}\n\n            {maybeRenderActionRender()}\n\n            <div>\n              {isActivated ? (\n                <button\n                  type=\"button\"\n                  aria-label=\"Deactivation button\"\n                  disabled={createAutomation.isLoading}\n                  className=\"rollout-blueprint-activator__deactivate-btn rollout-button--primary\"\n                  onClick={deactivate}\n                >\n                  {createAutomation.isLoading\n                    ? \"Deactivating...\"\n                    : \"Deactivate\"}\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  aria-label=\"Activation button\"\n                  disabled={createAutomation.isLoading}\n                  className=\"rollout-blueprint-activator__activate-btn rollout-button--primary\"\n                  onClick={activate}\n                >\n                  {createAutomation.isLoading ? \"Activating...\" : \"Activate\"}\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </FormContextProvider>\n  );\n}\n","import { useMemo } from \"react\";\nimport { AnyZodObject, z } from \"zod\";\n\nimport {\n  PartialActionRef,\n  PartialTriggerRef,\n} from \"@rollouthq/connect-react/components/automation-form/types\";\n\nexport const zBlueprintActivatorFormSchema = z.object({\n  name: z.string().min(1),\n  trigger: z.object({\n    appKey: z.string(),\n    triggerKey: z.string(),\n    credentialId: z.string(),\n    inputParams: z.object({}),\n  }),\n  action: z.object({\n    appKey: z.string(),\n    actionKey: z.string(),\n    credentialId: z.string(),\n    inputParams: z.object({}),\n  }),\n});\n\nexport type BlueprintActivatorFormData = z.output<\n  typeof zBlueprintActivatorFormSchema\n>;\n\nexport type BlueprintActivatorFormDataInput = z.input<\n  typeof zBlueprintActivatorFormSchema\n>;\n\nexport type PartialBlueprintActivatorData = {\n  name?: string | undefined;\n  trigger?: PartialTriggerRef;\n  action?: PartialActionRef;\n};\n\nexport function useValidateBlueprintActivatorFormData(opts: {\n  data: any;\n  triggerInputParamsSchema: AnyZodObject;\n  actionInputParamsSchema: AnyZodObject;\n}) {\n  const { data = {}, actionInputParamsSchema, triggerInputParamsSchema } = opts;\n\n  const schema = useMemo(\n    () =>\n      zBlueprintActivatorFormSchema.extend({\n        trigger: zBlueprintActivatorFormSchema.shape.trigger.extend({\n          inputParams: triggerInputParamsSchema,\n        }),\n        action: zBlueprintActivatorFormSchema.shape.action.extend({\n          inputParams: actionInputParamsSchema,\n        }),\n      }),\n    [actionInputParamsSchema, triggerInputParamsSchema]\n  );\n\n  return useMemo(() => {\n    return schema.safeParse(data);\n  }, [data, schema]);\n}\n","import { matchSorter } from \"match-sorter\";\nimport React, { useState } from \"react\";\n\nimport {\n  InferQueryOutput,\n  useMutation,\n  useTRPCContext,\n} from \"@rollouthq/api-client-react\";\nimport { AppIcon } from \"@rollouthq/connect-react/components/app-icon\";\nimport {\n  isChildofInteractiveElement,\n  Center,\n  Search,\n  TextField,\n  Spinner,\n  Switch,\n} from \"@rollouthq/ui\";\n\ntype BlueprintsListItem = InferQueryOutput<\"blueprints.list\">[number];\n\nexport type BlueprintsListProps = {\n  blueprints: BlueprintsListItem[];\n  isLoading?: boolean;\n  onOpenActivationForm: (blueprint: BlueprintsListItem) => void;\n};\n\nexport function BlueprintsList(props: BlueprintsListProps) {\n  const { blueprints, isLoading = false, onOpenActivationForm } = props;\n\n  const [query, setQuery] = useState(\"\");\n\n  const blueprintsFiltered = matchSorter(blueprints, query, {\n    keys: [\"name\", \"action.app.name\"],\n    threshold: matchSorter.rankings.ACRONYM,\n  });\n\n  const isFilteredListEmpty = blueprintsFiltered.length === 0;\n\n  return (\n    <div className=\"rollout-automations-list__container\">\n      <div className=\"rollout-automations-list__search-input__group\">\n        <div className=\"rollout-automations-list__search-input__left-element\">\n          <Search />\n        </div>\n\n        <TextField\n          placeholder=\"Search blueprints\"\n          value={query}\n          onChange={setQuery}\n          className=\"rollout-automations-list__search-input\"\n        />\n      </div>\n\n      {isLoading && (\n        <div className=\"rollout__loading_spinner_container\">\n          <Spinner className=\"rollout__loading_spinner\" />\n        </div>\n      )}\n\n      {!isLoading && isFilteredListEmpty && (\n        <div className=\"rollout-automations-list__empty-msg\">\n          No blueprints found\n        </div>\n      )}\n\n      <div className=\"rollout-automations-list__list\">\n        {blueprintsFiltered.map((blueprint) => (\n          <BlueprintsListItem\n            key={blueprint.id}\n            blueprint={blueprint}\n            onOpenActivationForm={() => onOpenActivationForm(blueprint)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype BlueprintsListItemProps = {\n  blueprint: BlueprintsListItem;\n  onOpenActivationForm: () => void;\n};\n\nfunction BlueprintsListItem(props: BlueprintsListItemProps) {\n  const { blueprint, onOpenActivationForm } = props;\n  const { invalidateQueries } = useTRPCContext();\n  const deactivateAutomation = useMutation(\"blueprints.deactivateAutomation\");\n  const active = blueprint.automation?.active ?? false;\n\n  return (\n    <div className=\"rollout-automations-list__item-wrapper\">\n      <div\n        className=\"rollout-automations-list__item\"\n        role=\"group\"\n        onClick={(e) => {\n          if (!isChildofInteractiveElement(e.target as Element)) {\n            onOpenActivationForm();\n          }\n        }}\n      >\n        <div className=\"rollout-automations-list-item__header\">\n          <div className=\"rollout-automations-list-item__icons\">\n            <Center className=\"rollout-automations-list-item__trigger\">\n              <AppIcon appKey={blueprint.trigger.appKey} />\n            </Center>\n            <Center className=\"rollout-automations-list-item__action\">\n              <AppIcon appKey={blueprint.action.appKey} />\n            </Center>\n          </div>\n\n          <div className=\"rollout-automations-list-item__switch\">\n            <Switch\n              isSelected={active}\n              onChange={async () => {\n                if (active) {\n                  const blueprintId = blueprint.id;\n\n                  await deactivateAutomation.mutateAsync({ blueprintId });\n\n                  invalidateQueries([\"blueprints.get\", { blueprintId }]);\n                  invalidateQueries([\n                    \"blueprints.getAutomation\",\n                    { blueprintId },\n                  ]);\n                  invalidateQueries([\"blueprints.list\"]);\n                } else {\n                  onOpenActivationForm();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"rollout-automations-list-item__name\">\n          {blueprint.name}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { BlueprintActivator } from \"@rollouthq/connect-react/components/blueprint-activator\";\nimport { MyBlueprints } from \"@rollouthq/connect-react/components/my-blueprints\";\nimport { ArrowBack } from \"@rollouthq/ui\";\n\nexport type BlueprintsManagerView =\n  | { mode: \"LIST\" }\n  | { mode: \"ACTIVATE\"; blueprintId: string };\n\nexport function BlueprintsManager() {\n  const [currentView, setCurrentView] = useState<BlueprintsManagerView>({\n    mode: \"LIST\",\n  });\n\n  return (\n    <div className=\"rollout-automations-manager\">\n      {currentView.mode === \"LIST\" && (\n        <MyBlueprints\n          onOpenActivationForm={(bp) => {\n            setCurrentView({ mode: \"ACTIVATE\", blueprintId: bp.id });\n          }}\n        />\n      )}\n\n      {currentView.mode === \"ACTIVATE\" && (\n        <>\n          <div className=\"rollout-automations-manager__navbar\">\n            <button\n              type=\"button\"\n              aria-label=\"Return to blueprints list button\"\n              className=\"rollout-blueprints-manager__back-btn\"\n              onClick={() => setCurrentView({ mode: \"LIST\" })}\n            >\n              <ArrowBack className=\"rollout-automation-form__header-back__arrow\" />\n            </button>\n          </div>\n\n          <BlueprintActivator blueprintId={currentView.blueprintId} />\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { InferQueryOutput, useQuery } from \"@rollouthq/api-client-react\";\nimport { BlueprintsList } from \"@rollouthq/connect-react/components/blueprints-list\";\n\ntype BlueprintListItem = InferQueryOutput<\"blueprints.list\">[number];\n\nexport type MyBlueprintsProps = {\n  onOpenActivationForm: (blueprint: BlueprintListItem) => void;\n};\n\nexport function MyBlueprints(props: MyBlueprintsProps) {\n  const { onOpenActivationForm } = props;\n\n  const blueprints = useQuery([\"blueprints.list\"]);\n\n  return (\n    <div>\n      <div className=\"rollout-automations-list__header\">\n        <span className=\"rollout-automations-list__header-title\">\n          My blueprints\n        </span>\n      </div>\n\n      <BlueprintsList\n        blueprints={blueprints.data ?? []}\n        isLoading={blueprints.isFetching}\n        onOpenActivationForm={onOpenActivationForm}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { RolloutIcon, st } from \"@rollouthq/ui\";\n\nexport function PoweredByRollout() {\n  return (\n    <st.div css={{ textAlign: \"center\" }}>\n      <st.div\n        css={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <RolloutIcon width=\"16px\" />\n\n        <st.span\n          css={{ paddingLeft: \"$2\", fontWeight: 700, color: \"$neutral-2\" }}\n        >\n          Powered by Rollout\n        </st.span>\n      </st.div>\n\n      <st.div css={{ marginTop: \"$2\", fontSize: \"8px\", color: \"$grayMedium\" }}>\n        By automating, you agree to Rollout's{\" \"}\n        <st.a\n          href=\"https://docs.rollouthq.com/security-and-legal/security\"\n          css={{ color: \"black\", textDecoration: \"underline\" }}\n        >\n          Terms\n        </st.a>{\" \"}\n        &amp;{\" \"}\n        <st.a\n          href=\"https://docs.rollouthq.com/security-and-legal/privacy-policy\"\n          css={{ color: \"black\", textDecoration: \"underline\" }}\n        >\n          Privacy policy\n        </st.a>\n      </st.div>\n    </st.div>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport * from './SSRProvider';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","import { SSRProvider } from \"@react-aria/ssr\";\nimport {\n  BrowserClient,\n  defaultIntegrations,\n  defaultStackParser,\n  makeFetchTransport,\n} from \"@sentry/browser\";\nimport React, { useCallback, useState } from \"react\";\nimport { ReactElement } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\nimport { RolloutAPIClientProvider } from \"@rollouthq/api-client-react\";\nimport { ErrorFallback } from \"@rollouthq/connect-react/components/error-fallback\";\nimport {\n  AnyAppSlug,\n  RolloutAllowedAppsContextProvider,\n} from \"@rollouthq/connect-react/contexts/allowed-apps-context\";\nimport { RolloutApiBaseUrlContextProvider } from \"@rollouthq/connect-react/contexts/api-base-url-context\";\nimport { RolloutAppKeyProvider } from \"@rollouthq/connect-react/contexts/end-user-context\";\n\nconst ROLLOUT_API_BASE_URL = \"https://app.rollouthq.com/api\";\nconst SENTRY_DSN =\n  \"https://28e3dd4b02f14f2eb74768520edbc8a1@o345148.ingest.sentry.io/6463365\";\n\nexport type RolloutConnectProviderProps = {\n  token: string | (() => Promise<string> | string);\n  onError?: (error: Error, info: { componentStack: string }) => void;\n  apiBaseUrl?: string | undefined;\n  allowedApps?: AnyAppSlug[];\n  children: ReactElement;\n  env?: string;\n};\n\nexport function RolloutConnectProvider(props: RolloutConnectProviderProps) {\n  const {\n    token,\n    allowedApps,\n    apiBaseUrl = ROLLOUT_API_BASE_URL,\n    children,\n    env = \"production\",\n    onError: onErrorProp,\n  } = props;\n\n  const [sentry] = useState(() => {\n    return new BrowserClient({\n      dsn: SENTRY_DSN,\n      transport: makeFetchTransport,\n      stackParser: defaultStackParser,\n      integrations: defaultIntegrations,\n    });\n  });\n\n  const onError = useCallback(\n    (error: Error, info: React.ErrorInfo) => {\n      onErrorProp?.(error, info);\n\n      if (env === \"production\") {\n        sentry.captureException(error, {\n          data: { info },\n        });\n      }\n    },\n    [env, sentry, onErrorProp]\n  );\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback} onError={onError}>\n      <RolloutApiBaseUrlContextProvider apiBaseUrl={apiBaseUrl}>\n        <RolloutAllowedAppsContextProvider allowedApps={allowedApps}>\n          <RolloutAPIClientProvider\n            token={token}\n            apiBaseUrl={apiBaseUrl ?? ROLLOUT_API_BASE_URL}\n          >\n            <RolloutAppKeyProvider>\n              <SSRProvider>{children}</SSRProvider>\n            </RolloutAppKeyProvider>\n          </RolloutAPIClientProvider>\n        </RolloutAllowedAppsContextProvider>\n      </RolloutApiBaseUrlContextProvider>\n    </ErrorBoundary>\n  );\n}\n","import React from \"react\";\n\nimport { Gear } from \"@rollouthq/ui\";\nimport { RedQuestion } from \"@rollouthq/ui\";\n\nexport function ErrorFallback() {\n  return (\n    <div className=\"rollout-error-fallback__container\">\n      <div>\n        <Gear\n          style={{\n            width: \"40px\",\n            height: \"40px\",\n          }}\n        />\n        <RedQuestion\n          style={{\n            position: \"relative\",\n            right: \"10px\",\n            bottom: \"30px\",\n          }}\n        />\n      </div>\n      <div className=\"rollout-error-fallback__text-container\">\n        <div className=\"rollout-error-fallback__message\">\n          An unexpected error occured\n        </div>\n        <div className=\"rollout-error-fallback__additional-info\">\n          Please try again later\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { CSS, globalCss } from \"@rollouthq/ui\";\n\nconst card: CSS = {\n  border: \"1px solid #D5DCE2\",\n  borderRadius: \"8px\",\n  padding: \"16px\",\n  marginTop: \"24px\",\n  background: \"white\",\n};\n\nexport const defaultTheme = globalCss({\n  \".rollout-automation-form__line-items-container\": {\n    border: \"1px solid #DFE1E4\",\n    borderRadius: \"8px\",\n  },\n  \".rollout-automation-form__line-items-header\": {\n    padding: \"12px\",\n    display: \"flex\",\n    gap: \"12px\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    background:\n      \"linear-gradient(180deg, rgba(255, 255, 255, 0.03) 0%, rgba(0, 0, 0, 0.03) 100%), #FFFFFF\",\n  },\n  \".rollout-automation-form__line_items-description\": {\n    fontSize: \"13px\",\n  },\n  \".rollout-automation-form__line-items-title\": {\n    fontSize: \"13px\",\n    fontWeight: \"600\",\n  },\n  \".rollout-automation-form__line-items-content\": {\n    padding: \"16px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"16px\",\n  },\n\n  \".rollout-automations-list__container\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  \".rollout-automations-list__header\": {\n    display: \"flex\",\n    paddingY: \"16px\",\n    marginBottom: \"16px\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    borderBottom: \"1px solid #EFF1F4\",\n  },\n\n  \".rollout-automations-list__header-title\": {\n    fontWeight: \"600\",\n  },\n\n  \".rollout-error-fallback__container\": {\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"32px\",\n    gap: \"16px\",\n    margin: \"24px auto\",\n    width: \"572px\",\n    height: \"173px\",\n\n    border: \"1px solid #D5DCE2\",\n    borderRadius: \"8px\",\n  },\n\n  \".rollout-error-fallback__text-container\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: \"4px\",\n    width: \"227px\",\n    height: \"48px\",\n  },\n\n  \".rollout-error-fallback__message\": {\n    color: \"#6C6F75\",\n    fontFamily: \"Inter\",\n    fontStyle: \"normal\",\n    fontWeight: \"600\",\n    fontSize: \"16px\",\n    lineHeight: \"150%\",\n  },\n\n  \".rollout-error-fallback__additional-info\": {\n    color: \"#6C6F75\",\n    fontFamily: \"Inter\",\n    fontStyle: \"normal\",\n    fontweight: \"500\",\n    fontSize: \"13px\",\n    lineHeight: \"150%\",\n  },\n\n  \".rollout-combobox__input__spinner\": {\n    width: \"1rem\",\n    height: \"1rem\",\n  },\n\n  \".rollout-combobox__input\": {\n    width: \"100%\",\n    paddingX: \"$2\",\n    paddingY: \"$2-5\",\n    background: \"none\",\n    outline: \"none\",\n    border: \"none\",\n    cursor: \"text\",\n    paddingRight: \"40px\",\n    fontSize: \"13px\",\n\n    \"&:focus\": {\n      borderColor: \"$interactPrimary\",\n    },\n\n    \"[data-disabled]\": {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n\n    \".rollout-combobox__input__left-element[data-icon] ~ &\": {\n      paddingLeft: \"40px\",\n    },\n\n    \"&:disabled\": { cursor: \"not-allowed\" },\n  },\n\n  \".rollout-select__tag\": {\n    margin: \"2px\",\n    paddingX: \"6px\",\n    paddingY: \"1px\",\n    height: \"fit-content\",\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"4px\",\n    background: \"white\",\n    border: \"1px solid #EFF1F4\",\n    borderRadius: \"4px\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    whiteSpace: \"nowrap\",\n  },\n\n  \".rollout-select__tag-icon\": {\n    color: \"#91959C\",\n    \"&:hover\": {\n      color: \"black\",\n    },\n  },\n\n  \".rollout-select__input\": {\n    background: \"none\",\n    outline: \"none\",\n    border: \"none\",\n    width: \"100%\",\n    \"&:disabled\": { cursor: \"not-allowed\" },\n  },\n\n  \".rollout-select__input__group\": {\n    background: \"#F8F9FB\",\n    height: \"36px\",\n    paddingX: \"8px\",\n    \".rollout-select__input\": {\n      paddingLeft: \"0\",\n    },\n  },\n\n  \".rollout-form-control__input[data-error]\": {\n    \".rollout-combobox__input__group, .rollout-select__input__group, .rollout__base-input\":\n      {\n        borderColor: \"$error\",\n      },\n  },\n\n  \".rollout-combobox__input__group, .rollout-select__input__group\": {\n    position: \"relative\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    alignItems: \"center\",\n    fontSize: \"13px\",\n    outline: \"none\",\n    overflowX: \"hidden\",\n    borderWidth: \"1px\",\n    borderRadius: \"$md\",\n    borderStyle: \"solid\",\n    borderColor: \"$strokeMedium\",\n    \"&[data-focused]\": {\n      borderColor: \"$interactPrimary\",\n    },\n    \"&[data-disabled]\": {\n      cursor: \"not-allowed\",\n      color: \"$grayMedium\",\n      backgroundColor: \"$surfaceSecondary\",\n    },\n  },\n\n  \".rollout-connect-combobox__label, .rollout-connect-select__label\": {\n    marginBottom: \"$2\",\n    span: {\n      color: \"$primary\",\n    },\n  },\n\n  \".rollout-combobox__input__left-element, .rollout-combobox__input__right-element\":\n    {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      position: \"absolute\",\n      \"&:not([data-open])\": {\n        pointerEvents: \"none\",\n      },\n      \"&[data-open]\": {\n        cursor: \"pointer\",\n      },\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      zIndex: 2,\n      color: \"#91959C\",\n      border: \"none\",\n      background: \"none\",\n    },\n\n  \".rollout-combobox__input__left-element\": {\n    size: \"24px\",\n    left: \"8px\",\n    \"&:not([data-icon])\": {\n      display: \"none\",\n    },\n    \"[data-avatar][data-selected] &\": {\n      background: \"transparent\",\n      border: \"none\",\n      color: \"white\",\n      fontSize: \"$1\",\n    },\n    borderWidth: \"1px\",\n    borderColor: \"#EFF1F4\",\n    borderStyle: \"solid\",\n    borderRadius: \"6px\",\n    background: \"white\",\n  },\n  \".rollout-combobox__input__right-element, .rollout-select__input__right-element\":\n    {\n      size: \"16px\",\n      right: \"8px\",\n    },\n  \".rollout-combobox__input__spinner, .rollout-select__input__spinner\": {\n    flexShrink: \"0\",\n    size: \"12px\",\n  },\n\n  \".rollout-combobox__content, .rollout-select__content\": {\n    maxHeight: \"288px\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    outline: \"none\",\n    border: \"solid 1px\",\n    borderColor: \"#D5DCE2\",\n    borderRadius: \"8px\",\n\n    \".rollout-tab__list\": {\n      background: \"#282A2F\",\n      padding: \"10px 12px\",\n      fontSize: \"13px\",\n      color: \"white\",\n      fontWeight: \"600\",\n      gap: \"16px\",\n      border: \"none\",\n    },\n\n    \".rollout-tabs__tab\": {\n      overflowX: \"hidden !important\",\n      padding: \"0\",\n      border: \"none\",\n      color: \"white\",\n      opacity: \"0.4\",\n      \"&[data-selected]\": {\n        opacity: \"1\",\n      },\n    },\n  },\n\n  \".rollout-select__multiple-alert\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"8px\",\n    paddingX: \"12px\",\n    paddingY: \"8px\",\n    background: \"#5386F6\",\n    color: \"white\",\n    span: {\n      fontSize: \"13px\",\n      fontWeight: \"500\",\n    },\n  },\n\n  \".rollout-combobox__content ul\": {\n    margin: \"0px\",\n    padding: \"0px\",\n  },\n\n  \".rollout-select__content ul\": {\n    margin: \"0px\",\n    padding: \"0px\",\n  },\n\n  \".rollout-select__option-check__icon\": {\n    marginLeft: \"auto\",\n  },\n\n  \".rollout-listbox\": {\n    width: \"100%\",\n    margin: 0,\n    padding: 0,\n  },\n\n  \".rollout-listbox__option, .rollout-select__option\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"$2\",\n    fontSize: \"$2\",\n    outline: \"none\",\n    cursor: \"pointer\",\n    borderBottom: \"solid 1px\",\n    borderColor: \"#F8F9FB\",\n    \"&[data-focused]\": {\n      background: \"#F4F5F8\",\n    },\n    \"&[data-disabled]\": {\n      fontWeight: \"500\",\n      color: \"#91959C\",\n    },\n    \"&[data-selected]\": {\n      fontWeight: \"500\",\n      color: \"#5284F2\",\n      diaplay: \"flex\",\n      alignItems: \"center\",\n    },\n  },\n\n  \".rollout-listbox__option-icon\": {\n    \"[data-avatar] &\": {\n      background: \"#C3C7CE;\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"100%\",\n      padding: 0,\n      fontSize: \"$1\",\n    },\n    borderWidth: \"1px\",\n    borderColor: \"$strokeMedium\",\n    borderStyle: \"solid\",\n    borderRadius: \"$md\",\n    background: \"white\",\n    size: \"$6\",\n    padding: \"$1\",\n    marginRight: \"$1-5\",\n  },\n\n  \".rollout-automations-list__search-input\": {\n    paddingX: \"40px\",\n    paddingY: \"10px\",\n    borderRadius: \"$md\",\n    outline: \"none\",\n    borderWidth: \"2px\",\n    borderColor: \"#EFF1F4\",\n    \"&:focus\": {\n      borderColor: \"$interactPrimary\",\n    },\n    borderStyle: \"solid\",\n    background: \"#F8F9FB\",\n  },\n\n  \".rollout-automations-list__search-input__group\": {\n    position: \"relative\",\n    display: \"flex\",\n    marginBottom: \"$4\",\n    color: \"#91959C\",\n  },\n\n  \".rollout-automations-list__search-input__left-element\": {\n    position: \"absolute\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: 2,\n    display: \"flex\",\n    size: \"40px\",\n    fontSize: \"$md\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    svg: {\n      size: \"20px\",\n    },\n  },\n\n  \".rollout-automations-list__not-found\": {\n    paddingInlineStart: \"$4\",\n  },\n\n  \".rollout-form-control-find__container\": {\n    display: \"flex\",\n    background: \"#e0e1e4\",\n    width: \"max-content\",\n    borderRadius: \"6px\",\n  },\n\n  \".rollout-form-control-find__active\": {\n    color: \"#5d88ef\",\n    fontSize: \"0.8125rem\",\n    fontFamily: \"inherit\",\n    fontWeight: \"500\",\n    padding: \"4px 36px\",\n    whiteSpace: \"nowrap\",\n    background: \"white\",\n    height: \"32px\",\n    cursor: \"pointer\",\n    borderRadius: \"8px\",\n    border: \"1px solid #e0e1e4\",\n  },\n\n  \".rollout-form-control-find__disabled\": {\n    color: \"#6c6f75\",\n    fontFamily: \"inherit\",\n    fontSize: \"0.8125rem\",\n    fontWeight: \"500\",\n    padding: \"4px 36px\",\n    whiteSpace: \"nowrap\",\n    background: \"e0e0e5\",\n    height: \"32px\",\n    cursor: \"pointer\",\n    borderRadius: \"8px\",\n  },\n\n  \".rollout-automations-list__new-btn\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"8px\",\n    padding: \"4px 12px\",\n    whiteSpace: \"nowrap\",\n    backgroundColor: \"#5386F7\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"8px\",\n    height: \"32px\",\n    cursor: \"pointer\",\n  },\n\n  \".rollout-automations-list__empty-msg\": {\n    textAlign: \"center\",\n    padding: \"20px\",\n    border: \"1px solid #eff1f4\",\n    borderRadius: \"4px\",\n  },\n\n  \".rollout-automations-list__error-msg\": {\n    textAlign: \"center\",\n    padding: \"20px\",\n    border: \"1px dashed #AA4849\",\n    borderRadius: \"4px\",\n  },\n\n  \".rollout-automations-list__list\": {\n    display: \"grid\",\n    gap: \"16px\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n  },\n\n  \".rollout-automations-list__item-wrapper\": {\n    position: \"relative\",\n    marginBottom: \"8px\",\n    maxWidth: \"343px\",\n    border: \"1px solid #D5DCE2\",\n    borderRadius: \"8px\",\n    \"&:hover\": {\n      border: \"1px solid #ADB4BA\",\n    },\n    \"&[data-deleting]\": {\n      opacity: 0.4,\n    },\n    \"&[data-deleting]::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      inset: 0,\n      userSelect: \"none\",\n      cursor: \"wait\",\n    },\n  },\n\n  \".rollout-automations-list__item\": {\n    padding: \"16px\",\n    cursor: \"pointer\",\n  },\n\n  \".rollout-automations-list-item__header\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  \".rollout-automations-list-item__draft-badge\": {\n    marginLeft: \"auto\",\n    marginRight: \"10px\",\n    padding: \"4px 8px\",\n    borderRadius: \"40px\",\n    background: \"$neutral-4\",\n    fontSize: \"small\",\n    color: \"white\",\n  },\n\n  \".rollout-automations-list-item__icons\": {\n    display: \"inline-flex\",\n    \".rollout-automations-list-item__trigger, .rollout-automations-list-item__action\":\n      {\n        padding: \"$1\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        borderColor: \"$strokeMedium\",\n        borderRadius: \"$md\",\n        fontSize: \"24px\",\n      },\n    \":first-child\": {\n      borderStartEndRadius: \"unset\",\n      borderEndEndRadius: \"unset\",\n      marginRight: \"-1px\",\n    },\n    \":last-child\": {\n      borderStartStartRadius: \"unset\",\n      borderEndStartRadius: \"unset\",\n    },\n    size: \"fit-content\",\n  },\n\n  \".rollout-automations-list-item__name\": {\n    marginTop: \"12px\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    color: \"#31373F\",\n    height: \"72px\",\n  },\n\n  \".rollout-automations-list-item__options__trigger\": {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    color: \"#91959C\",\n    transition: \"all .2s ease\",\n    size: \"32px\",\n    svg: {\n      size: \"16px\",\n    },\n    \"&:hover\": {\n      bg: \"rgba(219, 97, 92, 0.1)\",\n      color: \"#DB615C\",\n    },\n    opacity: 0,\n    '[role=\"group\"]:hover:not([data-open]) &': {\n      opacity: 1,\n    },\n  },\n\n  \".rollout-automations-list-item__options__content\": {\n    position: \"absolute\",\n    padding: \"18px 16px\",\n    inset: \"0\",\n    background: \"white\",\n    borderRadius: \"8px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"12px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    span: {\n      fontWeight: \"600\",\n    },\n  },\n\n  \".rollout-automations-list-item__options__delete-item-btn\": {\n    background: \"#DB615C\",\n    color: \"white\",\n    whiteSpace: \"nowrap\",\n    \"&:hover\": {\n      background: \"#C74D48\",\n    },\n    cursor: \"pointer\",\n  },\n\n  \".rollout-automations-list-item__options__cancel-item-btn\": {\n    border: \"1px solid #282A2F\",\n    cursor: \"pointer\",\n  },\n\n  \".rollout-automations-manager__navbar\": {\n    paddingY: \"$3\",\n  },\n\n  \".rollout-automations-manager__back-btn\": {\n    border: \"none\",\n    background: \"none\",\n  },\n\n  \".rollout-automation-form__header-back__arrow\": {\n    cursor: \"pointer\",\n  },\n\n  \".rollout-automations-list-item__options__content button\": {\n    fonSize: \"13px\",\n    fontWeight: \"500\",\n    borderRadius: \"8px\",\n    height: \"32px\",\n    width: \"100%\",\n    cursor: \"pointer\",\n    transition: \"all .2s ease\",\n  },\n\n  \".rollout-automation-form__name\": {\n    height: \"36px\",\n    fontWeight: 500,\n    fontSize: \"13px\",\n    background: \"none\",\n    border: \"1px solid\",\n    borderColor: \"$strokeDark\",\n    borderRadius: \"8px\",\n    paddingX: \"$4\",\n    paddingY: \"$2-5\",\n    outline: \"none\",\n\n    \"&[aria-invalid]::placeholder\": {\n      color: \"$error\",\n    },\n  },\n\n  \".rollout-automation-form__action-inputs-wrapper, .rollout-automation-form__trigger-inputs-wrapper\":\n    {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"$3\",\n    },\n\n  \".rollout-automation-form__trigger\": {\n    ...card,\n  },\n\n  \".rollout-automation-form__trigger-inputs\": {\n    ...card,\n  },\n\n  \".rollout-automation-form__action\": {\n    ...card,\n  },\n\n  \".rollout-automation-form__action-inputs\": {\n    ...card,\n  },\n\n  \".rollout-automation-form__trigger-trigger\": {\n    marginBottom: \"$3\",\n  },\n\n  \".rollout-automation-form__trigger .rollout-automation-form__trigger-app \": {\n    marginBottom: \"$3\",\n  },\n\n  \".rollout-automation-form__trigger .rollout-automation-form__credentials\": {\n    marginTop: \"$3\",\n  },\n\n  \".rollout-automation-form__action .rollout-automation-form__action-app\": {\n    marginBottom: \"$3\",\n  },\n\n  \".rollout-automation-form__action .rollout-automation-form__action-action\": {\n    marginBottom: \"$3\",\n  },\n\n  \".rollout-automation-form__credential\": {\n    marginBottom: \"$3\",\n  },\n\n  \".rollout-automation-form__label\": {\n    fontWeight: \"600\",\n    marginBottom: \"12px\",\n  },\n\n  \".rollout-automation-form__helper-text\": {\n    marginBottom: \"12px\",\n  },\n\n  \".rollout-automation-form__content\": {\n    marginBottom: \"16px\",\n  },\n\n  \".rollout-automation-form-oauth__error__message\": {\n    marginTop: \"4px\",\n    fontSize: \"$2\",\n    color: \"$error\",\n  },\n\n  \".rollout-input\": {\n    height: \"36px\",\n    paddingX: \"$2\",\n    paddingY: \"$2-5\",\n    border: \"1px solid\",\n    borderColor: \"$strokeMedium\",\n    borderRadius: \"6px\",\n  },\n\n  \".rollout-button--primary, .rollout-button--secondary, .rollout-button--danger\":\n    {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"8px\",\n      height: \"32px\",\n      padding: \"4px 12px\",\n      fontWeight: 600,\n      whiteSpace: \"nowrap\",\n      textAlign: \"center\",\n      border: \"1px solid\",\n      borderRadius: \"8px\",\n    },\n\n  \".rollout-button--primary\": {\n    backgroundColor: \"#5386F7\",\n    borderColor: \"#5386F7\",\n    color: \"white\",\n  },\n\n  \".rollout-button--secondary\": {\n    backgroundColor: \"$grayMedium\",\n    borderColor: \"$grayMedium\",\n    color: \"white\",\n  },\n\n  \".rollout-button--danger\": {\n    color: \"white\",\n    backgroundColor: \"$error\",\n    borderColor: \"$error\",\n    \"&:hover\": {\n      backgroundColor: \"#A92F2A\",\n      borderColor: \"#A92F2A\",\n    },\n  },\n\n  \".rollout-automation-form__buttons\": {\n    display: \"flex\",\n    gap: \"$3\",\n  },\n\n  \".rollout-automation-form__cancel\": {\n    marginLeft: \"auto\",\n  },\n\n  \".rollout-automation-form__delete\": {\n    position: \"relative\",\n    marginLeft: \"auto\",\n\n    \".rollout-automation-form__cancel ~ &\": {\n      marginLeft: \"0\",\n    },\n  },\n\n  \".rollout-automation-form-delete__confirm-dialog\": {\n    position: \"absolute\",\n    bottom: \"100%\",\n    right: \"0\",\n    whiteSpace: \"nowrap\",\n    background: \"white\",\n    marginBottom: \"12px\",\n    padding: \"12px\",\n    border: \"1px solid #F8F9FB\",\n    borderRadius: \"8px\",\n    boxShadow: \"0px 4px 16px rgba(0, 0, 0, 0.2)\",\n  },\n\n  \".rollout-automation-form__delete-confirm-text\": {\n    padding: \"$3\",\n    fontSize: \"$2\",\n    fontWeight: 500,\n  },\n\n  \".rollout-automation-form__delete-confirm-buttons\": {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    gap: \"$3\",\n    marginTop: \"$4\",\n  },\n\n  \".rollout-automation-form__delete-cancel, .rollout-automation-form__delete-confirm\":\n    {\n      width: \"100%\",\n    },\n\n  \".rollout-automation-form__submit[disabled], .rollout-automation-form__submit[data-loading]\":\n    {\n      opacity: 0.3,\n    },\n\n  \".rollout-form-control__label\": {\n    marginBottom: \"8px\",\n    fontSize: \"$2\",\n    fontWeight: 500,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  \".rollout-form-control__lock-btn\": {\n    marginLeft: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: \"1px solid #EFF1F4\",\n    size: \"20px\",\n    cursor: \"pointer\",\n    borderRadius: \"4px\",\n    boxShadow: \"$md\",\n    color: \"#91959C\",\n    transition: \"all .2s ease\",\n    \"&[data-locked]\": {\n      color: \"#9A58F6\",\n    },\n    \"&:hover\": {\n      background: \"#F8F9FB\",\n    },\n    svg: {\n      height: \"14px\",\n    },\n  },\n\n  \".rollout-form-control__required-hint\": {\n    paddingLeft: \"4px\",\n    color: \"$primary\",\n  },\n\n  \".rollout-form-control__description\": {\n    marginBottom: \"8px\",\n    fontSize: \"13px\",\n  },\n\n  \".rollout-form-control__error\": {\n    marginTop: \"4px\",\n    fontSize: \"$2\",\n    color: \"$error\",\n  },\n\n  \".rollout-automation-form__api-token-input\": {\n    height: \"32px\",\n    marginTop: \"$2\",\n    marginBottom: \"$4\",\n    background: \"#F8F9FB\",\n    border: \"1px solid #EFF1F4\",\n    borderRadius: \"4px\",\n    paddingX: \"8px\",\n    \"&:focus\": {\n      background: \"white\",\n    },\n  },\n\n  \".rollout-automation-form__api-token-input-info\": {\n    fontSize: \"0.75rem\",\n    marginBottom: \"$1-5\",\n    color: \"#6C6F75\",\n  },\n\n  \".rollout-automation-form__api-token-input-label\": {\n    fontSize: \"$2\",\n    marginTop: \"$1-5\",\n  },\n\n  \".rollout-automation-form__api-token-input-container\": {\n    marginTop: \"$2\",\n  },\n\n  \".rollout-automation-form__api-token-connection-result\": {\n    fontSize: \".85rem\",\n  },\n\n  \".rollout-automation-form__api-token-apitoken-button-container\": {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    gap: \"$2-5\",\n  },\n\n  // BlueprintActivator\n  \".rollout-blueprint-activator__header\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid\",\n    borderBottomColor: \"$strokeMedium\",\n    paddingY: \"12px\",\n  },\n\n  \".rollout-blueprint-activator__name\": {\n    marginLeft: \"16px\",\n  },\n\n  \".rollout-blueprint-activator__label\": {\n    padding: \"12px\",\n    fontSize: \"$3\",\n    fontWeight: \"bold\",\n    borderBottom: \"1px solid\",\n    borderBottomColor: \"$strokeMedium\",\n  },\n\n  \".rollout-blueprint-activator__trigger\": {\n    marginTop: \"12px\",\n    border: \"1px solid\",\n    borderColor: \"$strokeMedium\",\n    borderRadius: \"8px\",\n\n    \"& .rollout-automation-form__credentials\": {\n      marginBottom: \"$3\",\n    },\n  },\n\n  \".rollout-blueprint-activator__trigger__fields\": {\n    padding: \"12px\",\n  },\n\n  \".rollout-blueprint-activator__activate-btn, .rollout-blueprint-activator__deactivate-btn\":\n    {\n      marginTop: \"12px\",\n    },\n  //\n\n  \".rollout__loading_spinner_container\": {\n    padding: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n\n  \".rollout__loading_spinner\": {\n    height: \"1rem\",\n    width: \"1rem\",\n  },\n\n  \".rollout__base-input\": {\n    background: \"#F8F9FB\",\n    border: \"1px solid #EFF1F4\",\n    borderRadius: \"4px\",\n    paddingX: \"8px\",\n    \"&:focus\": {\n      background: \"white\",\n    },\n  },\n\n  \"input.rollout__base-input, select.rollout__base-input\": {\n    height: \"32px\",\n  },\n\n  \".rollout__terms-of-service-link, .rollout__privacy-policy-link\": {\n    color: \"#31373F\",\n    textDecoration: \"underline\",\n    \"&:hover\": {\n      color: \"#1e2227\",\n    },\n  },\n\n  \".ace_editor\": {\n    backgroundColor: \"$surfaceSecondary\",\n  },\n\n  \".rollout-card\": {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"12px\",\n    marginTop: \"12px\",\n    padding: \"16px\",\n    border: \"1px solid #d5dce2\",\n    borderRadius: \"8px\",\n  },\n});\n"],"mappings":"6kCAAA,qWCAA,sQCAA,OAAgC,oBAEhC,GAAiD,uCCFjD,MAA4C,oBAC5C,GAAyB,iBACzB,GAA6B,sBAE7B,GAAyC,uCACzC,GAAoC,6BCLpC,OAA0D,oBAC1D,GAAoC,iBAGpC,GAA8B,6BCJ9B,gJCAA,MAA2C,oBAE3C,GAAsD,6BCFtD,OAAiC,oBCSjC,OAA8B,yBAuCjB,CACX,GACA,IACE,qBAA2C,CAC7C,KAAM,sBACR,CAAC,ECrDD,OAAgD,0BAIhD,GAAoC,6BCJpC,OAAsC,0BACtC,GAMO,eAEA,YACL,EACA,EACA,CACA,GAAM,GAAW,eAAQ,CAAI,EAE7B,MADa,IAAU,EAAmB,CAAQ,CAEpD,CAEA,YACE,EACA,EAC0B,CAC1B,GAAM,GAAW,EAAK,MAAM,CAAC,EACvB,EACJ,YAAkB,gBAAc,EAAO,OAAO,EAAI,EAEpD,GAAI,YAAyB,cAAW,CACtC,GAAM,GAAO,EAAc,MAAM,EAAK,IACtC,MAAO,GAAK,OAAS,EAAI,GAAU,EAAM,CAAQ,EAAI,CACvD,CAEA,GAAI,YAAyB,cAAW,CACtC,GAAM,GAAO,EAAc,YAC3B,MAAO,GAAK,OAAS,EAAI,GAAU,EAAM,CAAQ,EAAI,CACvD,CAEA,cAAQ,MAAM,kCAAmC,CAAa,EACxD,GAAI,OAAM,gCAAgC,CAClD,CD7BO,YACL,EAUA,CApBF,UAqBE,GAAM,GAAM,GAA+B,EACrC,CACJ,cACA,iBACA,eACA,eACA,yBACE,EAEE,EAAO,eAAQ,CAAI,EACnB,EAAQ,WAAI,EAAa,CAAI,EAC7B,EAAW,AAAC,GAAgB,CAChC,GAAM,GAAiB,gBAAgB,CAAW,EAClD,WAAI,EAAgB,EAAM,CAAQ,EAClC,EAAe,CAAc,CAC/B,EAEM,EACJ,qBAAuB,GACnB,EAAa,kBACb,2BAAoB,EAAa,cAAc,EAE/C,EAAS,GAA8B,EAAmB,CAAI,EAC9D,EAAa,EAAO,WAAW,EAC/B,EAAO,EAAO,YACd,EAAQ,oBAAM,QAAN,OAAe,GAAY,CAAI,EACvC,EAAc,oBAAM,cAAN,OAAqB,GACnC,EAAwB,oBAAM,wBAAN,OAA+B,GAEvD,EAAa,EAAkB,UAAU,CAAW,EACpD,EACJ,GAAyB,GAAgB,MAAQ,CAAC,EAC9C,OACA,GAAkC,EAAY,CAAI,EAExD,MAAO,CACL,QACA,WACA,aACA,QACA,cACA,wBACA,QACA,MACF,CACF,CAEA,YACE,EACA,EACA,CACA,GAAM,GAAO,eAAQ,CAAK,EAE1B,GAAI,GAAW,QAIf,MAAO,GAAW,MAAM,OAAO,KAAK,AAAC,GAC5B,EAAI,KAAK,KAAK,GAAG,IAAM,EAAK,KAAK,GAAG,CAC5C,CACH,CAEA,YAAqB,EAAqB,CACxC,MAAO,GACJ,IAAI,AAAC,GAAS,GAA0B,EAAK,SAAS,CAAC,CAAC,EACxD,KAAK,GAAG,CACb,CAEA,YAAmC,EAAa,CAC9C,GAAM,GAAiB,EAAI,QACzB,aACA,AAAC,GAAS,IAAI,EAAK,YAAY,GACjC,EAEA,MAAO,GAAG,EAAe,GAAG,YAAY,IAAI,EAAe,MAAM,CAAC,GACpE,CF3FA,OAAyC,yBAWlC,YAAgC,EAAoC,CAhB3E,MAiBE,GAAM,CAAE,OAAM,WAAU,cAAa,QAAO,aAAa,IAAU,EAE7D,CAAE,eAAc,wBAAwB,IAC5C,GAA+B,EAE3B,EAAQ,GAAwB,CAAI,EAEpC,EACJ,EAAM,uBACN,GAAgB,MAChB,CAAC,EAEH,GAAI,GAAyB,CAAC,EAAM,sBAClC,MAAO,MAGT,YAAuB,CACrB,MAAI,GAEA,yBAAC,SACC,IAAK,CACH,WAAY,SACZ,QAAS,MACT,gBAAiB,oBACjB,aAAc,MACd,MAAO,cACP,SAAU,OACV,WAAY,GACd,GAEA,yBAAC,aAAS,IAAK,CAAE,YAAa,KAAM,EAAG,EAAE,qDAE3C,EAIG,CACT,CAEA,GAAM,GAAQ,KAAM,QAAN,OAAe,GAE7B,MACE,0BAAC,IACC,YAAa,EACb,MAAO,EACP,WAAY,EACZ,MAAO,GAEN,EAAY,CACf,CAEJ,CAUO,YACL,EACA,CACA,GAAM,CAAE,QAAO,cAAa,QAAO,aAAY,YAAa,EAE5D,MACE,0BAAC,OAAI,UAAU,wBACZ,GACC,yBAAC,OAAI,UAAU,+BACZ,EACA,GACC,yBAAC,QAAK,UAAU,uCACb,IAAI,YAEP,CAEJ,EAGD,GACC,yBAAC,OAAI,UAAU,qCAAqC,CAAY,EAGlE,yBAAC,OACC,UAAU,8BACV,aAAY,gBAAS,CAAC,CAAC,CAAK,GAE3B,CACH,EAEC,GAAS,yBAAC,OAAI,UAAU,+BAA+B,CAAM,CAChE,CAEJ,CI/GA,OAA8B,yBAOjB,CAAC,GAAqB,GAAkB,qBACnD,CACE,KAAM,MACR,CACF,ELHA,OAKO,yBAmBA,YAAuB,EAA2B,CAhCzD,UAiCE,GAAM,CAAE,OAAM,eAAc,eAAc,qBAAoB,cAC5D,EACI,EAAQ,GAAwB,CAAI,EACpC,CAAE,QAAO,YAAa,EACtB,EAAQ,KAAM,QAAN,OAAe,EAAM,MAC7B,EAAc,KAAM,cAAN,OAAqB,EAAM,YACzC,CAAC,EAAS,GAAc,eAAoC,CAAC,CAAC,EAC9D,CAAC,EAAkB,GAAuB,eAAS,EAAK,EACxD,CAAE,oBAAqB,EAAe,EACtC,CAAE,YAAW,SAAU,GAC3B,GAA+B,EAC3B,EACJ,GACA,GACC,GAAgB,MAAQ,EAAa,MAAM,OAAO,IAAM,GAE3D,gBAAU,IAAM,CACd,kBAAyB,CACvB,EAAoB,EAAI,EACxB,GAAM,IAAkB,KAAM,GAAa,EAC3C,EAAW,EAAe,EAC1B,EAAoB,EAAK,CAC3B,CACA,AAAI,CAAC,GAAsB,CAAC,GAC1B,EAAQ,CAEZ,EAAG,CAAC,KAAK,UAAU,CAAY,EAAG,EAAoB,CAAQ,CAAC,EAE/D,gBAAU,IAAM,CACd,AAAI,GAAsB,GAAS,CAAC,kBAAW,CAAK,GAClD,EAAS,MAAS,CAEtB,EAAG,CAAC,EAAoB,CAAK,CAAC,EAC9B,GAAM,GAAkB,EAAU,IAAI,AAAC,GAAO,EAC5C,GAAI,GAAG,+BAA4B,EAAE,KACrC,KAAM,IAAI,EAAE,OACd,EAAE,EACI,EAAa,CAAC,GAAG,EAAiB,GAAG,CAAO,EAC5C,EAAiB,EAAW,KAAK,AAAC,GAAQ,EAAI,KAAO,CAAK,EAE1D,EACJ,wBAAC,aACC,aAAW,oBACX,UAAU,KACV,WAAY,EACZ,aAAc,EACd,YAAY,QACZ,eAAgB,EAChB,UAAW,EACX,iBAAkB,EAAM,aAAe,gBACvC,kBAAmB,AAAC,GAAY,EAAS,iBAAS,EAAE,GAEpD,wBAAC,oBAAgB,MAAM,aACpB,EAAgB,IAAI,AAAC,GACpB,wBAAC,iBAAa,IAAK,EAAI,IAAK,EAAI,IAAK,CACtC,CACH,CACF,EAGI,EACJ,wBAAC,aACC,aAAW,oBACX,UAAU,KACV,WAAY,EACZ,aAAc,EACd,YAAY,QACZ,eAAgB,EAChB,IAAK,EACL,UAAW,EACX,iBAAkB,EAAM,aAAe,gBACvC,kBAAmB,AAAC,GAAY,EAAS,iBAAS,EAAE,GAEpD,wBAAC,oBAAgB,MAAM,WACpB,EAAQ,IAAI,AAAC,GACZ,wBAAC,iBAAa,IAAK,EAAI,IAAK,EAAI,IAAK,CACtC,CACH,EACA,wBAAC,oBAAgB,MAAM,aACpB,EAAgB,IAAI,AAAC,GACpB,wBAAC,iBAAa,IAAK,EAAI,IAAK,EAAI,IAAK,CACtC,CACH,CACF,EAGI,GAAiB,EACnB,EACA,EAEJ,MACE,yBAAC,IACC,KAAM,EACN,MAAO,EACP,YAAa,EACb,MAAO,EAAmB,KAAM,QAAN,cAAa,QAAU,OACjD,WAAY,CAAC,EAAM,YAElB,EACH,CAEJ,CMtIA,OAA+C,oBAexC,YAAgB,EAAyB,CAfhD,UAgBE,GAAM,CAAE,cAAa,mBAAkB,cAAa,YAAa,EAC3D,CAAE,QAAS,EACX,EAAQ,GAAwB,CAAI,EACpC,CAAE,oBAAqB,EAAe,EACtC,CAAE,QAAO,WAAU,cAAe,EAClC,EAAQ,KAAM,QAAN,OAAe,EAAM,MAC7B,EAAc,KAAM,cAAN,OAAqB,EAAM,YAE/C,uBAAU,IAAM,CACd,AAAI,GAAS,MACX,EAAS,QAAQ,CAErB,EAAG,CAAC,CAAK,CAAC,EAGR,kDACE,yBAAC,IACC,KAAM,EACN,MAAO,EACP,WAAY,CAAC,EACb,YAAa,EACb,MAAO,EAAmB,KAAM,QAAN,cAAa,QAAU,QAEjD,yBAAC,OAAI,UAAU,wCACb,yBAAC,UACC,KAAK,SACL,aAAW,0BACX,UACE,GAAS,SACL,oCACA,sCAEN,QAAS,IAAM,EAAS,QAAQ,GACjC,WAED,EACA,yBAAC,UACC,KAAK,SACL,aAAW,0BACX,UACE,GAAS,SACL,oCACA,sCAEN,QAAS,IAAM,EAAS,QAAQ,GACjC,aAED,CACF,CACF,EAEC,GAAS,UAAY,EACrB,GAAS,UAAY,EACrB,GAAS,UAAY,CACxB,CAEJ,CCxEA,OAAkB,oBAElB,GAAgC,6BAKhC,OAA+D,yBAYxD,YAAuB,EAA2B,CAnBzD,YAoBE,GAAM,CAAE,OAAM,aAAY,cAAa,SAAU,GAAsB,EACjE,EAAQ,GAAwB,CAAI,EACpC,EAAQ,KAAM,QAAN,OAAe,EAAM,MAC7B,EAAc,KAAM,cAAN,OAAqB,EAAM,YACzC,CAAE,YAAW,SAAU,GAC3B,GAA+B,EAE3B,CAAE,oBAAqB,EAAe,EACtC,EAAW,GAAuB,EAClC,EAAQ,KAAM,QAAN,OAAe,KACvB,EAAW,AAAC,GAAkC,CAClD,EAAM,SAAS,UAAO,MAAS,CACjC,EAEM,EAAkB,GAAS,uBAAgB,EAAO,CAAS,EAEjE,MACE,0BAAC,IACC,KAAM,EACN,MAAO,EACP,WAAY,CAAC,EAAM,YAAc,EAAM,WACvC,YAAa,EACb,MAAO,EAAmB,KAAM,QAAN,cAAa,QAAU,QAEjD,yBAAC,OAAI,UAAU,2BACb,yBAAC,iBACC,MAAO,EACP,SAAU,EACV,YAAa,EACb,kBAAmB,GACnB,aAAc,GACd,iBAAkB,EAClB,WAAY,GACR,EACN,CACF,CACF,CAEJ,CC1DA,OAA2C,oBAO3C,OAA+C,yBAOxC,YAA0B,EAA8B,CAd/D,UAeE,GAAM,CAAE,OAAM,eAAc,eAAc,eAAgB,EACpD,EAAQ,GAAwB,CAAI,EACpC,CAAE,SAAU,GAAgB,GAA+B,EAC3D,EAAW,GAAe,CAAC,YAAc,MAAM,UAC/C,CAAE,QAAO,YAAa,EACtB,EAAQ,KAAM,QAAN,OAAe,EAAM,MAC7B,EAAc,KAAM,cAAN,OAAqB,EAAM,YACzC,CAAC,EAAS,GAAc,gBAA8B,CAAC,CAAC,EACxD,CAAC,EAAkB,GAAuB,gBAAS,EAAK,EACxD,CAAE,oBAAqB,EAAe,EAE5C,uBAAU,IAAM,CACd,kBAA4B,CAE1B,GADA,EAAoB,EAAI,EACpB,CAAC,EAAU,CACb,GAAM,GAAkB,KAAM,GAAa,EAC3C,EAAW,CAAe,CAC5B,CACA,EAAoB,EAAK,CAC3B,CACA,EAAW,CACb,EAAG,CAAC,CAAQ,CAAC,EAGX,yBAAC,IACC,KAAM,EACN,MAAO,EACP,YAAa,EACb,MAAO,EAAmB,KAAM,QAAN,cAAa,QAAU,QAEjD,yBAAC,gBACC,MAAO,EACP,WAAY,EACZ,MAAO,EACP,UAAW,EACX,iBAAkB,GAAe,gBACjC,kBAAmB,AAAC,GAAU,CAC5B,EAAS,EAAM,IAAI,AAAC,GAAM,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,CAC5C,EACA,MAAO,EACT,CACF,CAEJ,CC1DA,OAAkB,oBAWX,YAAsB,EAA0B,CAXvD,UAYE,GAAM,CAAE,QAAS,EACX,EAAQ,GAAwB,CAAI,EACpC,CAAE,oBAAqB,EAAe,EACtC,CAAE,YAAa,GAA+B,EAC9C,CAAE,QAAO,WAAU,aAAY,QAAS,EAExC,EAAQ,KAAM,QAAN,OAAe,EAAM,MAC7B,EAAc,KAAM,cAAN,OAAqB,EAAM,YAE/C,MACE,0BAAC,IACC,KAAM,EACN,MAAO,EACP,WAAY,CAAC,EACb,YAAa,EACb,MAAO,EAAmB,KAAM,QAAN,cAAa,QAAU,QAEjD,yBAAC,SACC,KAAK,WACL,QAAS,EACT,SAAU,EACV,SAAU,AAAC,GAAM,EAAS,EAAE,OAAO,OAAO,EAC5C,CACF,CAEJ,CCrCA,OAAkB,oBAEL,GAAoB,IAAM,kDAAE,WAAS,ECFlD,OAA2C,iBAC3C,GAAkB,oBAElB,GAA8B,yBAMxB,CAAC,GAAmC,IACxC,qBAAwC,CACtC,KAAM,0BACR,CAAC,EAII,YACL,EACA,CACA,GAAkC,KAA1B,aAA0B,EAAb,KAAa,EAAb,CAAb,aACF,EAAM,eAAQ,IAAM,EAAU,OAAO,OAAO,CAAQ,CAAC,EAE3D,MACE,0BAAC,IAAkC,MAAO,GACvC,CACH,CAEJ,CbjBA,GAAM,IACJ,MAAO,UAAa,IAAc,aAAY,mBAQzC,YACL,EACwB,CACxB,GAAM,CAAE,cAAe,GAA4B,EAE7C,CAAC,EAAqB,GAC1B,gBAAiC,EAEnC,UAAoB,IAAM,CACxB,OAAO,OAAO,OAAQ,CACpB,qBAAsB,CACpB,IAAK,CAAE,MAAE,EACT,MAAO,YACN,qBAAsB,CAAE,OAAG,wBAAW,GACtC,qDAAsD,EACzD,CACF,CAAC,CACH,EAAG,CAAC,CAAC,EAEL,GAAoB,IAAM,CACxB,GAAI,GAAQ,KACV,MAAO,GAAuB,MAAS,EAGzC,GAAI,CAAC,EAAK,QAAU,CAAC,EAAK,WACxB,OAGF,GAAM,GAAa,GAAG,mBAA4B,EAAK,mBAAmB,EAAK,gBAM/E,AAFiB,GAAI,UAAS,OAAQ,qBAAqB,EAElD,CAAU,EAAE,KACnB,AAAC,GAGK,CACJ,EAAuB,CAAI,CAC7B,CACF,CACF,EAAG,CAAC,KAAK,UAAU,CAAI,CAAC,CAAC,EAElB,CACT,CchEA,OAA2C,iBAC3C,GAAkB,oBAGlB,GAA8B,yBAQxB,CAAC,GAAoC,IACzC,qBAAyC,CACvC,KAAM,mCACR,CAAC,EAII,YACL,EACA,CACA,GAAkC,KAA1B,aAA0B,EAAb,KAAa,EAAb,CAAb,aACF,EAAM,eAAQ,IAAM,EAAU,OAAO,OAAO,CAAQ,CAAC,EAE3D,MACE,0BAAC,IAAmC,MAAO,GACxC,CACH,CAEJ,CC9BA,OAA0B,iBAE1B,GAA6B,uCAGtB,YAAyB,EAAsC,CACpE,GAAM,GAAU,oBAAa,cAAc,EAE3C,uBAAU,IAAM,CACd,AAAI,kBAAQ,SAAU,MACpB,EAAQ,MAAM,CAAE,OAAQ,EAAO,MAAO,CAAC,CAE3C,EAAG,CAAC,iBAAQ,MAAM,CAAC,EAEZ,CACT,CCfA,OAAyB,uCAElB,YAAsB,EAA6C,CACxE,GAAM,CAAE,eAAgB,EAExB,MAAO,gBAAS,CAAC,WAAW,EAAG,CAC7B,OACE,GAAe,KACX,AAAC,GAAa,EAAS,OAAO,AAAC,GAAM,EAAY,SAAS,EAAE,GAAG,CAAC,EAChE,MACR,CAAC,CACH,CCXA,OAAmB,qBAEnB,GAA0B,iBAE1B,GAAyB,wCCJzB,OAAkB,6BAClB,GAAiD,iBAEjD,GAA+B,uCAExB,YAAkB,EAEtB,CACD,GAAM,CAAC,EAAiB,GAAsB,gBAAwB,IAAI,EACpE,CAAC,EAAe,GAAoB,gBAAiB,EACrD,CAAE,UAAW,sBAAe,EAElC,iBAAU,IAAM,CACd,WAAyC,EAAsB,CAbnE,MAcM,GAAM,GAAS,EAAE,KAAK,WAEtB,AAAI,WAAQ,GAER,kBAAQ,QAAS,oBACjB,EAAO,SAAW,GAClB,EAAO,cAAgB,MAEvB,MAAK,oBAAL,eAAyB,EAAO,eAG9B,WAAQ,OACV,EAAmB,EAAO,KAAK,CAGrC,CAEA,cAAO,iBAAiB,UAAW,EAAiC,EAAK,EAElE,IAAM,CACX,OAAO,oBAAoB,UAAW,CAA+B,CACvE,CACF,EAAG,CAAC,CAAa,CAAC,EAElB,GAAM,GAAiB,mBACrB,KAAO,IAGD,CACJ,EAAiB,EAAU,MAAM,EACjC,EAAmB,IAAI,EAEvB,GAAI,CACF,GAAM,CAAE,OAAQ,KAAM,GAAO,MAAM,eAAgB,CACjD,OAAQ,EAAU,OAClB,aAAc,EAAU,YAC1B,CAAC,EAED,eAAM,EAAK,GAAI,CACb,MAAO,IACP,OAAQ,GACV,CAAC,CACH,MAAE,CACA,EAAmB,8CAA8C,CACnE,CACF,EACA,CAAC,CACH,EAEA,MAAO,CACL,kBACA,gBACF,CACF,CD5DO,YAA8B,EAGlC,CACD,GAAM,CAAE,SAAQ,mBAAoB,EAE9B,CAAE,kBAAmB,GAAS,CAClC,kBAAmB,AAAC,GAAoB,CACtC,EAAgB,CAAe,EAC/B,EAAiB,QAAQ,CAC3B,CACF,CAAC,EAMK,EAAW,AAJK,gBAAS,CAAC,gBAAiB,CAAE,OAAQ,CAAQ,CAAC,EAAG,CACrE,QAAS,GAAU,IACrB,CAAC,EAE8B,KAEzB,EAAmB,gBAAS,CAAC,mBAAoB,CAAE,OAAQ,CAAQ,CAAC,EAAG,CAC3E,QAAS,GAAU,IACrB,CAAC,EAEK,EAAc,EAAiB,KAErC,iBAAU,IAAM,CACd,GAAI,KAAY,MAAQ,GAAe,MAIvC,IAAI,EAAS,OAAS,OAAQ,CAC5B,GAAM,GAAiB,EAAY,OAAS,EAC5C,qBAAO,EAAgB,uBAAuB,EACvC,EAAgB,EAAY,GAAG,EAAE,CAC1C,CAEA,AACG,GAAS,OAAS,UAAY,EAAS,OAAS,WACjD,EAAS,sBAET,CAAI,EAAY,SAAW,EACzB,EAAe,CAAE,OAAQ,CAAQ,CAAC,EAElC,EAAgB,EAAY,GAAG,EAAE,GAGvC,EAAG,CAAC,EAAU,CAAW,CAAC,CAC5B,ClB1CA,OAA2D,yBoBZ3D,MAA+B,oBCA/B,OAAkB,oBAGlB,OAAwB,yBAOjB,WAAiB,EAAqB,CAC3C,GAAM,CAAE,cAAe,GAA4B,EAE7C,CAAE,SAAQ,OAAQ,EAClB,EAAM,GAAG,mBAA4B,SAE3C,MAAO,0BAAC,MAAG,IAAH,CAAO,IAAK,EAAQ,IAAK,EAAK,IAAK,GAAE,MAAO,OAAU,GAAO,CACvE,CCjBA,OAA0C,oBAE1C,GAAyB,uCACzB,GAA8B,0BAExB,CAAC,GAAwB,IAA2B,qBAEvD,CACD,KAAM,wBACR,CAAC,EAIM,YAA+B,EAAgC,CAbtE,MAeE,GAAM,GAAS,GADM,gBAAS,CAAC,mBAAmB,CAAC,EACvB,OAAb,cAAmB,OAElC,MAAI,IAAU,KACL,KAIP,yBAAC,IAA2B,OAAQ,GACjC,EAAM,QACT,CAEJ,CAEA,YAAoC,EAGjC,CACD,GAAM,CAAE,UAAW,EAEb,EAAU,eAAQ,IAAO,EAAE,QAAO,GAAI,CAAC,CAAM,CAAC,EAEpD,MACE,0BAAC,IAAuB,MAAO,GAC5B,EAAM,QACT,CAEJ,CCzCA,OAAmD,0BAG5C,YACL,EACA,EACA,CACA,GAAI,EAAW,QACb,OAEF,GAAM,GAAQ,mBAAmB,EAC3B,EAAO,eAAQ,EAAW,CAAK,CAAC,EAEtC,MAAO,GAAW,MAAM,OAAO,KAAK,AAAC,GAC5B,EAAI,KAAK,KAAK,GAAG,IAAM,EAAK,KAAK,GAAG,CAC5C,CACH,CHTA,OAA4D,yBIH5D,OAA8B,yBA0BjB,CAAC,GAA+B,GAC3C,qBAAqC,CACnC,KAAM,gBACR,CAAC,EJlBH,YAA2B,EAA+B,CAf1D,QAgBE,GAAM,CAAE,UAAW,GAAwB,EACrC,CAAE,OAAM,OAAM,UAAS,cAAe,EAAyB,EAC/D,CAAE,UAAW,EAEb,EAAQ,GAAU,EAAY,AAAC,GAAM,EAAE,MAAM,EAE7C,EAAU,cACd,IAAG,CAvBP,QAuBU,cAAK,OAAL,cAAW,OAAO,AAAC,GAAM,EAAE,cAA3B,OAA0C,CAAC,GACjD,CAAC,EAAK,IAAI,CACZ,EACM,EAAc,KAAK,OAAL,cAAW,KAAK,AAAC,GAAM,EAAE,MAAQ,kBAAQ,SAEvD,CAAE,oBAAqB,EAAe,EAE5C,MACE,yBAAC,OAAI,UAAU,uCAEb,wBAAC,OAAI,MAAO,CAAE,QAAS,MAAO,GAC3B,KAAK,OAAL,cAAW,IAAI,AAAC,GACf,wBAAC,GAAQ,IAAK,EAAI,IAAK,OAAQ,EAAI,IAAK,EAE5C,EAEA,wBAAC,gBAAY,MAAO,EAAmB,iBAAO,QAAU,QACtD,wBAAC,aACC,aAAW,kBACX,aAAc,EACd,eAAgB,EAChB,WAAY,EAAM,WAClB,KACE,GAAe,KAAO,OACpB,wBAAC,GAAQ,OAAQ,EAAY,IAAK,EAGtC,iBAAiB,aACjB,YAAY,QACZ,kBAAmB,AAAC,GACX,EAAQ,AAAC,GAAgB,CArD5C,MAsDc,GAAI,GAAkB,KACpB,MAAO,QACF,GADE,CAEL,OAAQ,MACV,GAGF,GAAM,GAA0B,EAAe,MAAQ,EACjD,EACJ,MAAY,UAAZ,cAAqB,UAAW,EAS5B,EACJ,AAPA,GAA2B,GAG3B,CAAC,GAA2B,CAAC,EAM/B,MAAO,QACF,GADE,CAEL,OAAQ,CACN,OAAQ,EAAe,IACvB,YAAa,CAAC,CAChB,EACA,QAAS,EAAqB,OAAY,EAAY,OACxD,EACF,CAAC,GAGF,AAAC,GACA,wBAAC,iBAAa,IAAK,EAAI,aAAc,UAAW,EAAI,MAClD,wBAAC,WAAO,UAAU,gCAChB,wBAAC,GAAQ,OAAQ,EAAI,IAAK,CAC5B,EACC,EAAI,IACP,CAEJ,CACF,CACF,CAEJ,CAEO,YAA2B,EAAmB,CACnD,MAAO,yBAAC,IAAkB,WAAY,EAAM,SAAU,CACxD,CKtGA,OAAmC,oBAGnC,GAAyB,wCCHzB,OAAmB,qBAEnB,EAA4D,oBAG5D,GAKO,uCCVP,MAA2C,oBAE3C,GAA8C,uCAC9C,GAAwB,yBCHxB,OAAkC,oBAGlC,GAA0B,yBASb,GAAa,kBACxB,CAAC,EAAO,IAAQ,CACd,GAAM,CAAE,sBAAqB,QAAO,YAAa,EAC3C,CAAE,WAAU,QAAO,eAAgB,EAAM,WAE/C,MACE,0BAAC,WACC,yBAAC,SAAM,UAAU,kDACd,CACH,EAEC,GAAY,MACX,yBAAC,OACC,wBAAyB,CAAE,OAAQ,CAAS,EAC5C,UAAU,gDACZ,EAGF,yBAAC,WACC,yBAAC,cACC,IAAK,EACL,UAAU,2CACV,aAAW,yBACX,WAAY,EACZ,YAAa,EACb,MAAO,EACP,SAAU,EACZ,CACF,CACF,CAEJ,CACF,EDvBO,YAA2B,EAA+B,CAC/D,GAAM,CACJ,SACA,eACA,WACA,qBACA,iBACA,aACA,kBACE,EAEE,CAAC,EAAa,GAAkB,eAAiC,CAAC,CAAC,EAEnE,CAAC,EAA0B,GAC/B,eAAS,EAAK,EAEV,CAAC,EAAyB,GAA8B,eAAS,EAAK,EACtE,CAAC,EAAmB,GAAwB,eAAS,EAAK,EAE1D,EAA0B,mBAAY,6BAA6B,EACnE,EAAsB,EAAqB,EAGjD,gBAAU,IAAM,CACd,AAAI,GACF,GAA4B,EAAK,EACjC,EAA2B,EAAK,EAEpC,EAAG,CAAC,CAAW,CAAC,EAEhB,YAAgC,CAC9B,MAAI,gBAAkB,IAAY,EAAS,cAAgB,KAClD,EAAS,aAAa,MAAM,AAAC,GAAM,kBAAc,EAAE,OAAQ,IAAI,EAGjE,EACT,CAEA,YAAkC,CAChC,EAAqB,EAAI,EACzB,EAAwB,OACtB,CAAE,OAAQ,EAAQ,SAAU,CAAY,EACxC,CACE,UAAW,AAAC,GAAU,CACpB,EAA4B,EAAI,EAChC,EAA2B,CAAK,EAChC,EAAqB,EAAK,CAC5B,CACF,CACF,CACF,CAEA,YAAwB,CAzE1B,MA0EI,GAAI,GAAY,KACd,MAAO,MAET,GAAI,gBAAkB,GACpB,MAAO,KAAS,eAAT,cAAuB,IAAI,CAAC,GAAO,IAAU,CA9E1D,MA+EQ,+BAAC,IACC,IAAK,EACL,IAAK,IAAa,EAAI,EAAqB,OAC3C,WAAY,GACZ,MAAO,oBAAc,GAAM,OAApB,OAA4B,GACnC,SAAU,AAAC,GACT,EAAe,OAAK,GAAL,EAAmB,GAAM,KAAM,CAAS,EAAC,EAE1D,oBAAqB,EACvB,GAGN,CAEA,GAAM,GAAY,IAAM,CACtB,EAAe,CACb,SACA,aAAc,CAChB,CAAC,EACD,EAAqB,EAAK,EAC1B,EAAW,CACb,EAEM,EAAkB,IAAM,CAC5B,AAAI,GAA2B,GAAe,KAC5C,EAAa,CAAW,EAExB,EAAuB,CAE3B,EAEA,MACE,yBAAC,OAAI,UAAU,sDACZ,EAAa,EAEb,kBAAU,QAAS,SAClB,wBAAC,OAAI,UAAU,gEACb,wBAAC,UACC,KAAK,SACL,aAAW,cACX,SACE,CAAC,GAAuB,GAAqB,EAE/C,UAAW,2BACT,EACI,iDACA,mDAEN,QAAS,GAEP,IAAqB,IAAmB,wBAAC,eAAQ,EAClD,GAA4B,EACzB,OACA,EACA,yBACA,iBACN,EAEC,GACC,wBAAC,QAAK,UAAU,wDACb,EACG,4BACA,4CACN,CAEJ,EAEA,wBAAC,UACC,KAAK,SACL,aAAW,cACX,SAAU,CAAC,GAAuB,GAAqB,EACvD,UAAU,0BACV,QAAS,GACV,aAED,CAEJ,CAEJ,CDhJA,MAWO,yBAED,GAA4B,CAChC,GAAI,aACJ,MAAO,kBACP,OAAQ,OACR,KAAM,wBAAC,WAAK,CACd,EAWO,YAAyB,EAA6B,CAC3D,GAAM,CACJ,aACA,SACA,kBACA,eACA,gBACA,SACE,EAEE,CAAE,oBAAqB,EAAe,EACtC,CAAC,EAAY,GAAiB,eAAS,EAAK,EAC5C,CAAC,EAAgB,GAAqB,eAAS,EAAK,EACpD,EAAgB,mBAAY,2BAA2B,EACvD,EAAc,gBAAS,CAAC,mBAAoB,CAAE,QAAO,CAAC,CAAC,EACvD,EAAqB,aAAgC,IAAI,EACzD,EAAqB,aAAgC,IAAI,EACzD,CAAC,EAA0B,GAC/B,eAAS,EAAK,EAEV,CAAE,iBAAgB,mBAAoB,GAAS,CACnD,kBAAmB,AAAC,GAAoB,CACtC,EAAgB,CAAe,EAC/B,EAAY,QAAQ,CACtB,CACF,CAAC,EAGD,gBAAU,IAAM,CACd,EAAc,GAAmB,IAAI,CACvC,EAAG,CAAC,CAAe,CAAC,EAEpB,GAAM,GAAkB,cACtB,IAAG,CA5EP,MA4EU,OAAC,GAAI,KAAY,OAAZ,OAAoB,CAAC,EAAI,EAAyB,GAC7D,CAAC,EAAY,IAAI,CACnB,EAEM,EAAqB,EAAgB,KACzC,AAAC,GAAS,EAAK,KAAO,CACxB,EAEM,EAAO,EACX,wBAAC,gBAAU,EACT,GAAsB,EAAmB,QAAU,KACrD,wBAAC,UACC,IAAK,EAAmB,OACxB,KAAM,EAAmB,MACzB,IAAK,EAAmB,MAC1B,EAEA,wBAAC,aAAO,EAGV,WAAsB,EAAkC,CACtD,AAAI,GAAY,MACd,GAAkB,EAAI,EACtB,EAAc,OACZ,CACE,SACA,WAAY,CACd,EACA,CACE,UAAW,AAAC,GAAM,CAzG5B,MA0GY,EAA4B,EAAK,EACjC,EAAY,QAAQ,EACpB,KAAmB,UAAnB,QAA4B,OAC5B,EAAgB,CAAC,EACjB,EAAkB,EAAK,CACzB,EACA,QAAS,IAAM,EAAkB,EAAK,CACxC,CACF,EAEJ,CAEA,GAAM,IAAU,EACV,EAAiB,GAAQ,KAAK,AAAC,GAAQ,EAAI,KAAO,CAAY,EAEpE,MACE,yBAAC,OACC,UAAU,uCACV,cAAW,GACX,gBAAe,eAAS,kBAAoB,SAAU,IAAI,GAE1D,wBAAC,eAAY,MAAO,EAAmB,iBAAO,QAAU,QACtD,wBAAC,YACC,aAAW,mBACX,UAAW,EACX,aAAc,GACd,eAAgB,EAChB,YAAY,QACZ,KAAM,EACN,WAAY,EACZ,UAAW,EAAY,YAAc,EAAc,WACnD,iBACE,EAA2B,sBAAwB,iBAErD,kBAAmB,AAAC,GAAY,CAC9B,GAAI,GAAW,KACb,MAAO,GAAgB,MAAS,EAGlC,GAAM,GAAc,EAAc,KAC5B,EAAgB,IAAY,GAIlC,GAFA,eAAO,GAAe,KAAM,kBAAkB,EAE1C,EAAe,CACjB,AACE,GAAY,OAAS,UACrB,EAAY,OAAS,WAErB,CAAI,EAAY,cAAgB,KAC9B,GAA4B,EAAI,EAChC,WAAW,IAAG,CA7JhC,OA6JmC,YAAmB,UAAnB,eAA4B,QAAO,GAEpD,EAAe,CAAE,QAAO,CAAC,GAIzB,EAAY,OAAS,UACvB,GAA4B,EAAI,EAChC,WAAW,IAAG,CArK9B,OAqKiC,YAAmB,UAAnB,eAA4B,QAAO,GAGtD,EAAc,EAAK,EACnB,MACF,CAEA,EAAc,EAAK,EACnB,EAA4B,EAAK,EACjC,EAAgB,EAAQ,EAAE,CAC5B,GAEC,AAAC,GAOI,AALF,KAAW,SACX,IAAW,kBACX,IAAW,cACX,IAAW,iBAEM,EAAK,KAAO,aAE3B,wBAAC,gBAAa,IAAK,EAAK,aAAc,UAAW,EAAK,OACpD,wBAAC,mBAAa,CAChB,EAIA,wBAAC,gBAAa,IAAK,EAAK,aAAc,UAAW,EAAK,OACpD,wBAAC,UAAO,UAAU,gCAChB,wBAAC,UACC,aAAW,cACX,IAAK,EAAK,OACV,KAAM,QAAU,GAAO,KAAO,EAAK,MACnC,IAAK,EAAK,MACV,KAAM,QAAU,GAAO,EAAK,KAAO,OACrC,CACF,EACC,EAAK,KACR,CAIR,CACF,EAEC,GACC,wBAAC,OAAI,UAAU,iDACZ,UAAmB,mCACtB,EAGD,GAA4B,EAAc,MAAQ,MACjD,wBAAC,IACC,OAAQ,EACR,SAAU,EAAc,KACxB,aAAc,EACd,eAAgB,EAChB,aAAc,EACd,mBAAoB,EACpB,eAAgB,EAChB,WAAY,IAAM,EAA4B,EAAK,EACrD,CAEJ,CAEJ,CAWO,YAAgC,EAAoC,CACzE,GAAM,CACJ,SACA,gBACA,eACA,QACA,kBACA,cACE,EAEE,EAAW,EAAc,KAa/B,MAXI,IAAY,MAKb,GAAS,OAAS,UAAY,EAAS,OAAS,WACjD,EAAS,sBAKP,EAAS,OAAS,OACb,KAIP,wBAAC,IACC,OAAQ,EACR,cAAe,EACf,aAAc,EACd,gBAAiB,EACjB,MAAO,EACP,WAAY,EACd,CAEJ,CDrQO,YAAiC,EAAgC,CACtE,GAAM,CAAE,SAAQ,eAAc,kBAAiB,QAAO,cAAe,EAE/D,EAAgB,gBAAS,CAAC,gBAAiB,CAAE,QAAO,CAAC,CAAC,EAE5D,MAAI,GAAc,MAAQ,KACjB,KAIP,yBAAC,IACC,OAAQ,EACR,cAAe,EACf,aAAc,EACd,gBAAiB,EACjB,MAAO,EACP,WAAY,EACd,CAEJ,CAEO,YAAiC,EAAmB,CACzD,GAAM,CAAE,OAAM,UAAS,cAAe,EAAyB,EAEzD,CAAE,UAAW,EAEb,EAAkB,mBACtB,AAAC,GACC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,OAAQ,OACH,EAAY,QADT,CAEN,aAAc,CAChB,EACF,EAAE,EACJ,CAAC,CACH,EAEA,MAAI,kBAAQ,YAAa,KAChB,KAIP,yBAAC,IACC,OAAQ,EAAO,OACf,aAAc,EAAO,aACrB,gBAAiB,EACjB,MACE,EAAW,QACP,OACA,EAAW,MAAM,OAAO,KACtB,AAAC,GAAU,EAAM,KAAK,KAAK,GAAG,IAAM,qBACtC,EAEN,WAAY,EAAM,SACpB,CAEJ,CI1EA,OAAkB,oBAKlB,OAA4D,yBAIrD,YAA8B,EAAiC,CATtE,QAUE,GAAM,CAAE,OAAM,UAAS,UAAS,cAAe,EAAyB,EAClE,CAAE,mBAAkB,uBAAwB,EAAe,EAU3D,EAAQ,AARc,KACtB,EAAW,QACN,KAEF,EAAW,MAAM,OAAO,KAC7B,AAAC,GAAU,EAAM,KAAK,KAAK,GAAG,IAAM,kBACtC,GAEgC,EAC5B,EACJ,EAAK,QAAU,KAAO,yBAAC,GAAQ,OAAQ,EAAK,OAAO,OAAQ,EAAK,OAE5D,EAAU,KAAQ,OAAR,OAAgB,CAAC,EAC3B,EAAiB,KAAQ,OAAR,cAAc,KACnC,AAAC,GAAG,CA3BR,MA2BW,SAAE,MAAQ,MAAK,SAAL,cAAa,aAGhC,MACE,0BAAC,OAAI,UAAU,0CACb,yBAAC,gBAAY,MAAO,EAAmB,iBAAO,QAAU,QACtD,yBAAC,aACC,aAAW,kBACX,aAAc,EACd,eAAgB,EAChB,WAAY,EAAM,WAClB,KAAM,EACN,UAAW,EAAQ,UACnB,iBAAiB,gBACjB,YAAY,QACZ,kBAAmB,AAAC,GAClB,GAAoB,EAAK,EAElB,EAAQ,AAAC,GAAiB,OAC5B,GAD4B,CAE/B,OAAQ,OACH,EAAY,QADT,CAEN,UAAW,iBAAmB,IAC9B,YAAa,CAAC,CAChB,EACF,EAAE,IAGH,AAAC,GACA,yBAAC,iBAAa,IAAK,EAAK,aAAc,UAAW,EAAK,MACpD,yBAAC,WAAO,UAAU,gCAAgC,CAAK,EACtD,EAAK,IACR,CAEJ,CACF,CACF,CAEJ,CAEO,YAAwB,EAAmB,CAChD,MAAO,0BAAC,IAAqB,WAAY,EAAM,SAAU,CAC3D,CCrEA,OAAmB,qBAEnB,GAAkB,oBCFlB,OAAmC,oBAEnC,GAA+B,uCCF/B,MAAkB,oBAClB,GAAgC,iCAChC,GAA4B,0BAG5B,GAAyB,uCAMzB,GAA0C,6BAG1C,OAMO,yBAOP,GAAM,IAAI,mBAAmC,EAItC,YAA8B,EAA4B,CAC/D,GAAM,CACJ,MACA,eACA,cACA,iBACA,eACA,YACA,qBACE,EAEJ,MACE,yBAAC,IAAoC,MAAO,GACzC,aAAe,GACd,wBAAC,EAAa,UAAb,CACC,EAAG,GACH,aAAc,EACd,YAAa,EACb,eAAgB,EAChB,IAAK,EACL,SAAU,YACV,gBAAiB,GACnB,EAEA,gDACG,EAAa,eAAe,IAAI,AAAC,GAE9B,wBAAC,IACC,IAAK,EAAI,IACT,IAAK,EACL,MAAO,EAAY,EAAI,KACvB,SAAU,AAAC,GACT,EAAe,OACV,GADU,EAEZ,EAAI,KAAM,CACb,EAAC,EAEH,UAAW,EACX,kBAAmB,EACrB,CAEH,CACH,CAEJ,CAEJ,CAEA,YAA0B,EAQvB,CACD,GAAM,CAAE,MAAK,QAAO,WAAU,YAAW,qBAAsB,EAE/D,YAAuB,CACrB,GAAI,EAAI,OAAS,YACf,MACE,yBAAC,cACC,UAAU,gBACV,MAAO,UAAS,GAChB,SAAU,EACZ,EAIJ,GAAI,EAAI,OAAS,WACf,MACE,yBAAC,IACC,IAAK,EACL,MAAO,EACP,SAAU,EACV,kBAAmB,EACrB,EAIJ,GAAI,EAAI,OAAS,SACf,MACE,yBAAC,OAAI,UAAU,2BACb,wBAAC,eACC,MAAO,GAAS,uBAAgB,EAAO,CAAS,EAChD,SAAU,EACV,kBAAmB,GACnB,aAAc,GACd,iBAAkB,EACpB,CACF,EAIJ,uBAAgB,CAAG,CACrB,CAEA,MACE,yBAAC,IACC,MAAO,EAAI,MACX,WAAU,GACV,MAAO,QAEN,EAAY,CACf,CAEJ,CAEA,YAAkC,EAO/B,CAnJH,MAoJE,GAAM,CAAE,MAAK,QAAO,WAAU,qBAAsB,EAa9C,EAAkB,GAXK,oBAAa,SAAY,CAtJxD,MAuJI,MAAI,MAAI,wBAAJ,cAA2B,QAAS,SAC/B,EAAI,sBAAsB,cAAc,IAAI,AAAC,GAAS,EAC3D,IAAK,EACL,MAAO,CACT,EAAE,EAEK,KAAM,GAAkB,CAAE,SAAU,EAAI,GAAI,CAAC,CAExD,EAAG,CAAC,KAAK,UAAU,EAAI,qBAAqB,CAAC,CAAC,EAED,QAArB,OAA8B,CAAC,EACjD,EAAiB,EAAgB,KAAK,AAAC,GAAM,EAAE,MAAQ,CAAK,EAElE,MACE,yBAAC,aACC,aAAc,EACd,eAAgB,EAChB,YAAY,QACZ,KAAM,KACN,iBAAiB,gBACjB,kBAAmB,AAAC,GAAsB,CACxC,EAAS,iBAAmB,GAAG,CACjC,GAEC,AAAC,GACA,wBAAC,iBAAa,IAAK,EAAK,aAAc,UAAW,EAAK,OACnD,EAAK,KACR,CAEJ,CAEJ,CCtLA,OAAuC,oBACvC,GAAoC,iBAEpC,GAA8B,6BAM9B,GAAM,IACJ,MAAO,UAAa,IAAc,aAAY,mBAQzC,YAA+B,EAAiC,CACrE,GAAM,CAAE,aAAc,EAChB,CAAE,cAAe,GAA4B,EAE7C,CAAC,EAAoB,GAAyB,gBAElD,EAEF,UAAoB,IAAM,CACxB,OAAO,OAAO,OAAQ,CACpB,qBAAsB,CACpB,IAAK,CAAE,MAAE,EACT,MAAO,YACN,qBAAsB,CAAE,OAAG,wBAAW,GACtC,qDAAsD,EACzD,CACF,CAAC,CACH,EAAG,CAAC,CAAC,EAEL,GAAoB,IAAM,CACxB,GAAI,GAAa,KAAM,CACrB,GAAM,CAAE,SAAQ,aAAc,EAC9B,GAAI,CAAC,GAAU,CAAC,EACd,OAGF,GAAM,GAAa,GAAG,mBAA4B,aAAkB,OAKpE,AADiB,GAAI,UAAS,OAAQ,qBAAqB,EAClD,CAAU,EAAE,KAAK,AAAC,GACzB,EAAsB,CAAI,CAC5B,CACF,CACF,EAAG,CAAC,iBAAW,OAAQ,iBAAW,SAAS,CAAC,EAErC,CACT,CFjDO,aAAsC,CAC3C,MACE,0BAAC,OAAI,UAAU,0CACb,yBAAC,WACC,yBAAC,OAAI,UAAU,kCAAiC,eAAa,EAC7D,yBAAC,OAAkB,CACrB,CACF,CAEJ,CAEO,aAA6B,CAClC,GAAM,CAAE,UAAW,sBAAe,EAC5B,CAAE,OAAM,UAAS,aAAc,EAAyB,EACxD,EAAS,EAAK,OACd,EAAqB,GAAsB,CAAE,UAAW,EAAK,MAAO,CAAC,EAErE,EAAiB,mBACrB,AAAC,GAAmC,CAClC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,OAAQ,OACH,EAAY,QADT,CAEN,YAAa,CACf,EACF,EAAE,CACJ,EACA,CAAC,CAAO,CACV,EAEA,MAAI,IAAsB,MAAQ,EAAO,cAAgB,KAChD,KAIP,yBAAC,OAAI,UAAU,kDACb,yBAAC,IACC,IAAK,EACL,aAAc,EAAO,aACrB,YAAa,EAAO,YACpB,eAAgB,EAChB,aAAc,EACd,UAAW,EACX,kBAAmB,IAAM,CACvB,KAAM,IAAI,OAAM,4CAA4C,CAC9D,EACF,CACF,CAEJ,CGxDA,OAKO,oBCLP,OAAiC,oBAE1B,YAAc,EAAgC,CACnD,MAAO,0BAAC,OAAI,UAAU,gBAAgB,EAAM,QAAS,CACvD,CDsDO,YAAqC,EAIzC,CACD,GAAM,CAAE,aAAc,EAAc,MAAK,YAAa,EAEtD,MAAI,IAAY,MAAQ,IAAa,GAC5B,yBAAC,MAAa,EAGnB,IAAa,GACR,KAGF,EAAS,OACX,GADW,CAEd,+BACA,OACF,EAAC,CACH,CJnEO,aAAgC,CAXvC,UAYE,GAAM,CAAE,OAAM,gBAAiB,EAAyB,EAClD,CAAE,UAAW,EAEnB,eACE,MAAO,kBAAc,SAAW,YAC9B,MAAO,kBAAc,SAAW,SACpC,EAEA,GAAM,GAAoB,GAAY,CACpC,aAAc,GACd,SAAU,oBAAc,SAAd,cAAsB,OAChC,IAAK,CAAE,oBAAkB,CAC3B,CAAC,EAEK,EAAiB,GAAY,CACjC,aAAc,GACd,SAAU,oBAAc,SAAd,cAAsB,UAChC,IAAK,CAAE,iBAAe,CACxB,CAAC,EAEK,EAAoB,GAAY,CACpC,aAAc,GACd,SAAU,oBAAc,SAAd,cAAsB,aAChC,IAAK,CAAE,0BAAwB,CACjC,CAAC,EAED,MACE,mDACE,yBAAC,OAAI,UAAU,mCACb,yBAAC,OAAI,UAAU,kCAAiC,eAAa,EAE7D,yBAAC,OAAI,UAAU,wCAAuC,qDAEtD,EAEC,EACA,EACA,CACH,EAEC,kBAAQ,YAAa,MAAQ,EAAO,cAAgB,MACnD,yBAAC,OAA2B,CAEhC,CAEJ,CMzDA,OAAmB,qBAEnB,EAA4C,oBAE5C,GAA+B,uCCJ/B,OAAkB,oBAElB,GAAyB,uCAMzB,OAMO,yBAQA,YAA4B,EAAgC,CAtBnE,MAuBE,GAAM,CAAE,UAAW,GAAwB,EACrC,CAAE,OAAM,UAAS,cAAe,EAAyB,EACzD,CAAE,WAAY,EACd,EAAc,gBAAS,CAAC,eAAe,CAAC,EACxC,CAAE,oBAAqB,EAAe,EACtC,EAAQ,GAAU,EAAY,AAAC,GAAM,EAAE,OAAO,EAC9C,EAAU,KAAY,OAAZ,OAAoB,CAAC,EAC/B,EAAc,iBAAS,KAAK,AAAC,GAAQ,EAAI,MAAQ,kBAAS,SAEhE,MACE,0BAAC,OAAI,UAAU,wCACb,yBAAC,gBAAY,MAAO,EAAmB,iBAAO,QAAU,QACtD,yBAAC,aACC,aAAW,uBACX,aAAc,EACd,eAAgB,EAChB,YAAY,QACZ,KACE,GAAW,KAAO,yBAAC,cAAO,EAAK,yBAAC,GAAQ,OAAQ,EAAQ,OAAQ,EAElE,WAAY,EAAM,WAClB,iBAAiB,aACjB,kBAAmB,AAAC,GACX,EAAQ,AAAC,GAAgB,CA9C5C,MA+Cc,GAAI,GAAyB,KAC3B,MAAO,QACF,GADE,CAEL,QAAS,MACX,GAGF,GAAM,GACJ,EAAsB,MAAQ,EAC1B,EACJ,MAAY,SAAZ,cAAoB,UAAW,EAS3B,EACJ,AAPA,GAA4B,GAG5B,CAAC,GAA4B,CAAC,EAMhC,MAAO,QACF,GADE,CAEL,QAAS,CACP,OAAQ,EAAsB,IAC9B,YAAa,CAAC,CAChB,EACA,OAAQ,EAAoB,OAAY,EAAY,MACtD,EACF,CAAC,GAGF,AAAC,GACA,yBAAC,iBAAa,IAAK,EAAO,aAAc,UAAW,EAAO,MACxD,yBAAC,WAAO,UAAU,gCAChB,yBAAC,GAAQ,OAAQ,EAAO,IAAK,CAC/B,EACC,EAAO,IACV,CAEJ,CACF,CACF,CAEJ,CAEO,YAA4B,EAAmB,CACpD,MAAO,0BAAC,IAAmB,WAAY,EAAM,SAAU,CACzD,CChGA,OAAkB,oBAElB,GAAyB,uCAKzB,OAMO,yBAQA,YAAyB,EAA0B,CArB1D,MAsBE,GAAM,CAAE,cAAe,EACjB,CAAE,oBAAqB,EAAe,EACtC,CAAE,aAAY,OAAM,WAAY,EAAyB,EACzD,CAAE,WAAY,EAEd,EAAW,gBAAS,CAAC,gBAAiB,CAAE,OAAQ,iBAAS,MAAQ,CAAC,EAAG,CACzE,QAAS,kBAAS,SAAU,IAC9B,CAAC,EAEK,EAAQ,GAAU,EAAY,AAAC,GAAM,EAAE,QAAQ,UAAU,EACzD,EAAU,KAAS,OAAT,OAAiB,CAAC,EAC5B,EAAiB,EAAQ,KAAK,AAAC,GAAQ,EAAI,MAAQ,kBAAS,WAAU,EAE5E,MACE,0BAAC,gBAAY,MAAO,EAAmB,iBAAO,QAAU,QACtD,yBAAC,aACC,aAAW,mBACX,aAAc,EACd,eAAgB,EAChB,YAAY,QACZ,WAAY,GAAc,EAAS,UACnC,KACE,kBAAS,SAAU,KACjB,yBAAC,cAAO,EAER,yBAAC,GAAQ,OAAQ,iBAAS,OAAQ,EAGtC,iBAAiB,iBACjB,kBAAmB,AAAC,GAClB,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,QAAS,OACJ,EAAY,SADR,CAEP,WAAY,iBAAY,IACxB,YAAa,CAAC,CAChB,EACF,EAAE,GAGH,AAAC,GACA,yBAAC,iBAAa,IAAK,EAAK,aAAc,UAAW,EAAK,MACpD,yBAAC,WAAO,UAAU,gCACf,kBAAS,SAAU,KAClB,yBAAC,cAAO,EAER,yBAAC,GAAQ,OAAQ,iBAAS,OAAQ,CAEtC,EAEC,EAAK,IACR,CAEJ,CACF,CAEJ,CAEO,YAAyB,EAAmB,CACjD,MAAO,0BAAC,IAAgB,WAAY,EAAM,SAAU,CACtD,CClFA,OAAkB,oBAGlB,GAAyB,uCAWlB,YAAkC,EAAsC,CAC7E,GAAM,CAAE,SAAQ,eAAc,kBAAiB,QAAO,cAAe,EAE/D,EAAgB,gBAAS,CAAC,gBAAiB,CAAE,QAAO,CAAC,CAAC,EAE5D,MAAI,GAAc,MAAQ,KACjB,KAIP,yBAAC,IACC,OAAQ,EACR,cAAe,EACf,aAAc,EACd,gBAAiB,EACjB,MAAO,EACP,WAAY,EACd,CAEJ,CHnBO,aAAiC,CAdxC,QAeE,GAAM,CAAE,UAAW,sBAAe,EAE5B,CAAE,OAAM,UAAS,eAAc,cACnC,EAAyB,EAErB,CAAE,WAAY,EAEd,EAAsB,GAAuB,CAAO,EAEpD,EAAiB,kBACrB,AAAC,GAAmC,CAClC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,QAAS,OACJ,EAAY,SADR,CAEP,YAAa,CACf,EACF,EAAE,CACJ,EACA,CAAC,CAAO,CACV,EAEM,EAAkB,kBACtB,AAAC,GACC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,QAAS,OACJ,EAAY,SADR,CAEP,aAAc,CAChB,EACF,EAAE,EACJ,CAAC,CAAO,CACV,EAEM,EAAY,cAAQ,IAAM,CAAC,EAAG,CAAC,CAAC,EAEtC,eACE,MAAO,kBAAc,UAAY,YAC/B,MAAO,kBAAc,UAAY,SACrC,EAEA,GAAM,GAAqB,GAAY,CACrC,aAAc,GACd,SAAU,oBAAc,UAAd,cAAuB,OACjC,IAAK,CAAE,qBAAmB,CAC5B,CAAC,EAEK,EAAkB,GAAY,CAClC,aAAc,GACd,SAAU,oBAAc,UAAd,cAAuB,WACjC,IAAK,CAAE,kBAAgB,CACzB,CAAC,EAEK,EACJ,GACC,sBAAuB,GACpB,OAAO,KAAK,EAAoB,kBAAkB,KAAK,EAAE,OAAS,EAClE,EAAoB,eAAe,OAAS,GAElD,MACE,yBAAC,OAAI,UAAU,oCACb,wBAAC,OAAI,UAAU,kCAAiC,gBAAc,EAE9D,wBAAC,OAAI,UAAU,wCAAuC,kDAEtD,EAEC,EAED,wBAAC,OAAI,UAAU,4CACZ,CACH,EAEC,kBAAS,aAAc,MACtB,wBAAC,IACC,OAAQ,EAAQ,OAChB,aAAc,EAAQ,aACtB,gBAAiB,EACjB,MACE,EAAW,QACP,OACA,EAAW,MAAM,OAAO,KACtB,AAAC,GAAU,EAAM,KAAK,KAAK,GAAG,IAAM,sBACtC,EAER,EAGD,kBAAS,eAAgB,MAAQ,GAChC,wBAAC,OAAI,UAAU,2CACb,wBAAC,OAAI,UAAU,mDACb,wBAAC,IACC,IAAK,EACL,aAAc,EAAQ,aACtB,YAAa,EAAQ,YACrB,eAAgB,EAChB,aAAc,EACd,UAAW,EACX,kBAAmB,CAAC,CAAE,cACpB,EAAO,MAAM,kCAAmC,CAC9C,WAAY,EAAQ,WACpB,UACF,CAAC,EAEL,CACF,CACF,CAEJ,CAEJ,CI7HA,OAAkB,oBAKlB,OAA0B,yBAInB,YAAmB,EAA+B,CATzD,MAUE,GAAM,CAAE,WAAW,IAAU,EACvB,CAAE,OAAM,UAAS,cAAe,EAAyB,EACzD,CAAE,oBAAqB,EAAe,EACtC,EAAW,GAAU,EAAY,AAAC,GAAM,EAAE,IAAI,GAAK,KAEzD,MACE,0BAAC,cACC,aAAW,wBACX,UAAU,gCACV,YAAY,8BACZ,WAAY,EACZ,MAAO,KAAK,OAAL,OAAa,GACpB,gBAAiB,GAAoB,EAAW,UAAY,QAC5D,SAAU,AAAC,GACT,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,KAAM,CACR,EAAE,EAEN,CAEJ,CAEO,YAAmB,EAAmB,CAC3C,MAAO,0BAAC,QAAc,EAAO,CAC/B,CCnCA,OAAwB,iBACxB,EAAgC,eAEnB,GAAwB,IAAE,OAAO,CAC5C,KAAM,IAAE,OAAO,EAAE,IAAI,CAAC,EACtB,QAAS,IAAE,OAAO,CAChB,OAAQ,IAAE,OAAO,EACjB,WAAY,IAAE,OAAO,EACrB,aAAc,IAAE,OAAO,EACvB,YAAa,IAAE,OAAO,CAAC,CAAC,CAC1B,CAAC,EACD,OAAQ,IAAE,OAAO,CACf,OAAQ,IAAE,OAAO,EACjB,UAAW,IAAE,OAAO,EACpB,aAAc,IAAE,OAAO,EACvB,YAAa,IAAE,OAAO,CAAC,CAAC,CAC1B,CAAC,CACH,CAAC,EA8BM,YAAuC,EAI3C,CACD,GAAM,CAAE,OAAM,0BAAyB,4BAA6B,EAE9D,EAAS,eACb,IACE,GAAsB,OAAO,CAC3B,QAAS,GAAsB,MAAM,QAAQ,OAAO,CAClD,YAAa,CACf,CAAC,EACD,OAAQ,GAAsB,MAAM,OAAO,OAAO,CAChD,YAAa,CACf,CAAC,CACH,CAAC,EACH,CAAC,EAA0B,CAAuB,CACpD,EAEA,MAAO,eAAQ,IACN,EAAO,UAAU,CAAI,EAC3B,CAAC,EAAM,CAAM,CAAC,CACnB,CzCtBO,YAAwB,EAA4B,CAhD3D,mBAiDE,GAAM,CACJ,OACA,WACA,SACA,WACA,WACA,WACA,OACA,gBACE,EAEE,CAAC,EAAkB,GAAuB,gBAAS,EAAK,EACxD,CAAC,EAAQ,GAAoB,iBAAU,EACvC,CAAE,UAAW,sBAAe,EAO5B,EAAkB,IALF,gBACpB,CAAC,gBAAiB,CAAE,OAAQ,MAAK,UAAL,eAAc,MAAQ,CAAC,EACnD,CAAE,QAAS,OAAK,UAAL,eAAc,SAAU,IAAK,CAC1C,EAEsC,OAAd,eAAoB,KAC1C,AAAC,GAAG,CAtER,MAsEW,SAAE,MAAQ,MAAK,UAAL,cAAc,cAG3B,EAA4B,oBAAa,SAAY,CAzE7D,WA0EI,MAAI,IAAmB,KACd,CAAC,EAEN,EAAgB,qBAAqB,OAAS,SACzC,EAAgB,qBAAqB,aAEvC,KAAM,GAAO,MAAM,4BAA6B,CACrD,OAAQ,KAAK,UAAL,cAAc,OACtB,WAAY,KAAK,UAAL,cAAc,WAC1B,YAAa,MAAK,UAAL,eAAc,WAC7B,CAAC,CACH,EAAG,CACD,KAAK,UAAU,iBAAiB,oBAAoB,EACpD,KAAK,UAAU,EAAK,OAAO,CAC7B,CAAC,EAEK,EAA0B,cAC9B,IAAG,CA3FP,MA4FO,YAA0B,QAA1B,OAAmC,CAAC,GAAG,IAAI,AAAC,GAAU,EACrD,GAAI,EAAK,IACT,MAAO,EAAK,MACZ,KAAM,QACR,EAAE,GACJ,CAAC,EAA0B,KAAK,CAClC,EAEM,CAAE,eAAgB,GAA6B,EAE/C,EAAO,GAAa,CAAE,aAAY,CAAC,EACnC,EAAU,GAAgB,EAAK,MAAM,EACrC,EAAqB,GAAsB,CAAE,UAAW,EAAK,MAAO,CAAC,EACrE,EAAsB,GAAuB,EAAK,OAAO,EAEzD,EAA2B,cAAQ,IACnC,GAAuB,KAClB,GAAsB,MAAM,OAAO,MAAM,YAE9C,qBAAuB,GAClB,EAAoB,kBAEpB,2BAAoB,EAAoB,cAAc,EAE9D,CAAC,CAAmB,CAAC,EAElB,GAA0B,cAAQ,IAClC,GAAsB,KACjB,GAAsB,MAAM,OAAO,MAAM,YAE9C,qBAAuB,GAClB,EAAmB,kBAEnB,2BAAoB,EAAmB,cAAc,EAE7D,CAAC,CAAkB,CAAC,EAEjB,EAAa,GAA8B,CAC/C,OACA,2BACA,0BACF,CAAC,EAEK,EAAU,kBACd,AACE,GAIA,EAAS,AAAC,GAAgB,CA7IhC,UA8IQ,GAAM,IAAU,EAAQ,CAAW,EAE7B,EACJ,OAAY,UAAZ,eAAqB,cAAe,QAAQ,UAAR,eAAiB,YAEjD,EACJ,GAAQ,QAAU,KACd,OACA,OACK,GAAQ,QADb,CAEE,YAAa,EAAmB,CAAC,EAAI,GAAQ,OAAO,WACtD,GAEN,MAAO,QACF,IADE,CAEL,OAAQ,CACV,EACF,CAAC,EACH,CAAC,CAAQ,CACX,EAEM,EAAU,cACd,IAAO,EACL,OACA,OACA,UACA,aACA,UAAW,EACX,UACA,cACF,GACA,CACE,EACA,EACA,EACA,EACA,EACA,EACA,CACF,CACF,EAEM,EAAc,cAClB,IAAO,EAAE,mBAAkB,qBAAoB,GAC/C,CAAC,EAAkB,CAAmB,CACxC,EAEM,GAAyB,kBAC7B,AAAC,GACC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,QAAS,OACJ,EAAY,SADR,CAEP,aAAc,CAChB,EACF,EAAE,EACJ,CAAC,CAAO,CACV,EAEM,GAAwB,kBAC5B,AAAC,GACC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,OAAQ,OACH,EAAY,QADT,CAEN,aAAc,CAChB,EACF,EAAE,EACJ,CAAC,CAAO,CACV,EAEA,GAAqB,CACnB,OAAQ,MAAK,UAAL,eAAc,OACtB,gBAAiB,EACnB,CAAC,EAED,GAAqB,CACnB,OAAQ,MAAK,SAAL,eAAa,OACrB,gBAAiB,EACnB,CAAC,EAED,GAAM,IAAc,EAAK,MAAQ,KAC3B,GAAc,oBAAa,GAAa,CAC5C,MAAO,IACP,YAAa,GACf,CAAC,EAID,GAF0B,EAAK,aAAe,EAG5C,MACE,yBAAC,OAAI,UAAU,uCAAsC,mDAErD,EAIJ,GAAI,IAAe,GACjB,MACE,yBAAC,OAAI,UAAU,sCACb,wBAAC,YAAQ,UAAU,2BAA2B,CAChD,EAIJ,GAAM,IAAY,GAAY,CAC5B,aAAc,GACd,SAAU,iBAAc,KACxB,IAAK,CAAE,YAAU,CACnB,CAAC,EAEK,GACJ,MAAO,kBAAc,UAAY,SAC/B,wBAAC,OAAsB,EAEvB,GAAY,CACV,aAAc,GACd,SAAU,iBAAc,QACxB,IAAK,CAAE,sBAAoB,kBAAgB,CAC7C,CAAC,EAGC,GACJ,MAAO,kBAAc,SAAW,SAC9B,wBAAC,OAAqB,EAEtB,GAAY,CACV,aAAc,GACd,SAAU,iBAAc,OACxB,IAAK,CACH,qBACA,kBACA,2BACA,oBACF,CACF,CAAC,EAGL,MACE,yBAAC,IAAoB,MAAO,GAC1B,wBAAC,IAA8B,MAAO,GACpC,wBAAC,OAAI,UAAU,2BACb,wBAAC,OAAI,UAAU,mCAAmC,EAAU,EAE5D,wBAAC,OAAI,UAAU,oCACZ,GACA,EACH,EAEA,wBAAC,OAAI,UAAU,oCACb,wBAAC,UACC,KAAK,SACL,aAAW,cACX,UAAU,0DACV,eAAc,gBAAS,CAAQ,EAC/B,QAAS,IAAM,CACb,EAAoB,EAAI,EACxB,AAAI,EAAW,QACb,EAAO,EAAW,IAAI,EAEtB,QAAQ,MAAM,EAAW,KAAK,CAElC,GAEC,EAAW,YAAc,MAC5B,EAEC,GAAY,MACX,wBAAC,UACC,KAAK,SACL,aAAW,gBACX,UAAU,4DACV,QAAS,IAAM,EAAS,GACzB,QAED,EAGD,IAAS,UACR,wBAAC,OAAI,UAAU,mCACZ,GACC,wBAAC,OAAI,UAAU,kDACb,wBAAC,OAAI,UAAU,gDAA+C,kDAE9D,EAEA,wBAAC,OAAI,UAAU,mDACb,wBAAC,UACC,KAAK,SACL,aAAW,yBACX,QAAS,EACT,UAAU,oEACX,YAED,EAEA,wBAAC,UACC,KAAK,SACL,aAAW,0BACX,QAAS,EACT,UAAU,kEACX,aAED,CACF,CACF,EAGF,wBAAC,UACC,KAAK,SACL,aAAW,gBACX,UAAU,kEACV,QAAS,GACV,QAED,CACF,CAEJ,CACF,CACF,CACF,CAEJ,CD5TO,YAA2B,EAA+B,CAC/D,GAAM,CACJ,sBACA,2BACA,WACA,YACA,gBACE,EAEE,EAA2B,mBAAY,oBAAoB,EAE3D,CAAC,EAAoB,GACzB,gBAAoC,IAAM,CA7D9C,YA8DM,GAAM,GAAyC,CAAC,EAEhD,MAAI,IAAa,MAIb,GAAU,MACZ,GAAY,KAAO,EAAU,MAG3B,MAAU,UAAV,cAAmB,SAAU,MAC/B,GAAY,QAAU,OACjB,EAAU,SADO,CAEpB,OAAQ,EAAU,QAAQ,OAC1B,YAAa,KAAU,QAAQ,cAAlB,OAAiC,CAAC,CACjD,IAGE,MAAU,SAAV,cAAkB,SAAU,MAC9B,GAAY,OAAS,OAChB,EAAU,QADM,CAEnB,OAAQ,EAAU,OAAO,OACzB,YAAa,KAAU,OAAO,cAAjB,OAAgC,CAAC,CAChD,KAGK,CACT,CAAC,EAEG,EAAmB,KAAO,IAA6B,CAC3D,GAAM,GAAiC,KAAM,kBAA2B,CACtE,eAAgB,CAClB,IAEA,GAAI,IAAmC,GAErC,OAGF,GAAM,GACJ,IAAmC,IACnC,IAAmC,OAC/B,EACA,EAA+B,eAE/B,EAAa,KAAM,GAAyB,YAChD,CACF,EAEA,EAAoB,CAAE,YAAW,CAAC,CACpC,EAEA,MACE,0BAAC,OAAI,UAAU,8BACb,yBAAC,IACC,KAAK,SACL,KAAM,EACN,aAAc,EACd,SAAU,EACV,SAAU,EAAyB,UACnC,OAAQ,EACR,SAAU,EACZ,CACF,CAEJ,C2C/HA,OAAgC,oBAEhC,GAKO,uCAkBA,YAA0B,EAA8B,CAC7D,GAAM,CACJ,eACA,sBACA,sBACA,WACA,gBACE,EACE,CAAE,qBAAsB,sBAAe,EAEvC,EAAmB,mBAAY,qBAAsB,CACzD,UAAW,IAAM,EAAkB,CAAC,kBAAkB,CAAC,CACzD,CAAC,EAEK,CAAC,EAAoB,GACzB,gBAAoC,CAAC,CAAC,EAElC,EAAa,gBAAS,CAAC,kBAAmB,CAAE,cAAa,CAAC,EAAG,CACjE,UAAU,EAAK,CACb,AAAI,GAAO,MACT,EAAsB,CACpB,KAAM,EAAI,KACV,OAAQ,EAAI,OACZ,QAAS,EAAI,OACf,CAAC,CAEL,CACF,CAAC,EAEK,EAA2B,mBAAY,oBAAoB,EAEjE,GAAI,EAAW,UACb,MAAO,MAGT,GAAI,EAAW,MAAQ,KACrB,MACE,0BAAC,OAAI,UAAU,yCAAwC,sBAEvD,EAIJ,GAAM,GAAiB,KAAO,IAA6B,CACzD,GAAM,GAAoB,KAAM,GAAyB,YAAY,CACnE,GAAI,EACJ,eAAgB,CACd,KAAM,EAAK,KACX,OAAQ,EAAK,OACb,QAAS,EAAK,OAChB,CACF,CAAC,EAED,WAAsB,EACxB,EAEM,EAAW,IAAM,CACrB,EAAiB,OACf,CAAE,GAAI,EAAW,KAAK,EAAG,EACzB,CACE,UAAW,IAAM,CACf,YACF,CACF,CACF,CACF,EAEA,MACE,0BAAC,OAAI,UAAU,6BACb,yBAAC,IACC,KAAK,OACL,KAAM,EACN,aAAc,EACd,SAAU,EACV,SAAU,EAAyB,UACnC,OAAQ,EACR,SAAU,EACV,SAAU,EACZ,CACF,CAEJ,CC1GA,OAAgC,oBCAhC,OAA2C,oBAE3C,GAKO,uCCPP,OAA4B,wBAC5B,EAA2C,oBAI3C,MAOO,yBACP,GAAiC,yBAY1B,YAAyB,EAA6B,CAC3D,GAAM,CACJ,cACA,YAAY,GACZ,aAAa,GACb,mBACA,sBACE,EAEE,CAAC,EAAO,GAAY,eAAS,EAAE,EAE/B,EAAqB,mBAAY,EAAa,EAAO,CACzD,KAAM,CAAC,OAAQ,iBAAiB,EAChC,UAAW,eAAY,SAAS,OAClC,CAAC,EAEK,EAAqB,EAAmB,SAAW,EAEzD,MACE,yBAAC,OAAI,UAAU,uCACb,wBAAC,OAAI,UAAU,iDACb,wBAAC,OAAI,UAAU,wDACb,wBAAC,aAAO,CACV,EAEA,wBAAC,aACC,aAAW,gCACX,YAAY,qBACZ,MAAO,EACP,SAAU,EACV,UAAU,yCACZ,CACF,EAEC,GACC,wBAAC,OAAI,UAAU,sCACb,wBAAC,WAAQ,UAAU,2BAA2B,CAChD,EAGD,CAAC,GAAa,GACb,wBAAC,OAAI,UAAU,uCAAsC,sBAErD,EAGF,wBAAC,OAAI,UAAU,kCACZ,EAAmB,IAAI,AAAC,GACvB,wBAAC,IACC,IAAK,EAAW,GAChB,WAAY,EACZ,OAAQ,IAAM,EAAiB,CAAU,EACzC,SAAU,IAAM,EAAmB,CAAU,EAC7C,WAAY,EACd,CACD,CACH,CACF,CAEJ,CASA,YAA6B,EAAiC,CAC5D,GAAM,CAAE,aAAY,SAAQ,WAAU,cAAe,EAC/C,CAAC,EAAQ,GAAoB,iBAAU,EACvC,CAAC,EAAc,GAAmB,eAAS,EAAK,EAEtD,gBAAU,IAAM,CACd,AAAI,CAAC,GAAc,GACjB,EAAgB,EAAK,CAEzB,EAAG,CAAC,CAAU,CAAC,EAEf,GAAM,GAAc,GAClB,wBAAC,OACC,UAAU,kDACV,aAAc,IAAM,CAClB,AAAI,GACF,EAAiB,CAErB,GAEA,wBAAC,YAAK,gBAAc,EACpB,wBAAC,UACC,KAAK,SACL,aAAW,0BACX,QAAS,IAAM,CACb,EAAS,EACT,EAAgB,EAAI,CACtB,EACA,UAAU,2DACX,QAED,EAEA,wBAAC,UACC,KAAK,SACL,aAAW,yBACX,QAAS,EACT,UAAU,2DACX,QAED,CACF,EAGF,MACE,yBAAC,OACC,UAAU,yCACV,gBAAe,eAAS,CAAY,GAEnC,EACD,wBAAC,OACC,UAAU,iCACV,KAAK,QACL,YAAW,eAAS,CAAM,EAC1B,QAAS,AAAC,GAAM,CACd,AAAK,kCAA4B,EAAE,MAAiB,GAClD,EAAO,CAEX,GAEA,wBAAC,OAAI,UAAU,yCACb,wBAAC,OAAI,UAAU,wCACb,wBAAC,UAAO,UAAU,0CAChB,wBAAC,GAAQ,OAAQ,EAAW,QAAQ,OAAQ,CAC9C,EACA,wBAAC,UAAO,UAAU,yCAChB,wBAAC,GAAQ,OAAQ,EAAW,OAAO,OAAQ,CAC7C,CACF,EACA,wBAAC,OACC,KAAK,SACL,UAAU,kDACV,QAAS,GAET,wBAAC,aAAM,CACT,CACF,EACA,wBAAC,OAAI,UAAU,uCACZ,EAAW,IACd,CACF,CACF,CAEJ,CDvKA,OAAqB,yBAwBd,YAAuB,EAA2B,CACvD,GAAM,CAAE,mBAAkB,qBAAoB,UAAW,EACnD,CAAE,qBAAsB,sBAAe,EACvC,CAAC,EAAgB,GAAqB,gBAC1C,IAAM,CAAC,CACT,EAEM,EAAc,gBAAS,CAAC,kBAAkB,CAAC,EAEjD,iBAAU,IAAM,CACd,AAAI,EAAY,MAAQ,MACtB,CAAI,GAAU,KACZ,EACE,EAAY,KAAK,OAAO,AAAC,GAA2B,CAClD,GAAI,CACF,MAAO,GAAO,CAAyB,CACzC,OAAS,EAAP,CACA,eAAQ,MAAM,CAAW,EAClB,EACT,CACF,CAAC,CACH,EAEA,EAAkB,EAAY,IAAI,EAGxC,EAAG,CAAC,EAAY,KAAM,CAAM,CAAC,EAE7B,GAAM,GAAmB,mBAAY,qBAAsB,CACzD,UAAW,IAAM,EAAkB,CAAC,kBAAkB,CAAC,CACzD,CAAC,EAED,MACE,0BAAC,WACC,yBAAC,OAAI,UAAU,oCACb,yBAAC,QAAK,UAAU,0CAAyC,gBAEzD,EAEA,yBAAC,UACC,KAAK,SACL,aAAW,wBACX,UAAU,oCACV,QAAS,IAAM,EAAmB,GAElC,yBAAC,YAAK,EAAE,KAEV,CACF,EAEA,yBAAC,IACC,YAAa,UAAkB,CAAC,EAChC,UAAW,EAAY,WACvB,WAAY,EAAiB,UAC7B,mBAAoB,AAAC,GAAO,EAAiB,OAAO,CAAE,GAAI,EAAG,EAAG,CAAC,EACjE,iBAAkB,EACpB,CACF,CAEJ,CDhFA,OAA0B,yBAenB,YAA4B,EAAgC,CACjE,GAAM,CACJ,sBACA,2BACA,YACA,SACA,gBACE,EAEE,CAAC,EAAa,GAAkB,gBAAiC,CACrE,KAAM,MACR,CAAC,EAED,MACE,0BAAC,OAAI,UAAU,+BACZ,EAAY,OAAS,QACpB,yBAAC,IACC,iBAAkB,AAAC,GACjB,EAAe,CAAE,KAAM,OAAQ,aAAc,EAAI,EAAG,CAAC,EAEvD,mBAAoB,IAAM,EAAe,CAAE,KAAM,QAAS,CAAC,EAC3D,OAAQ,EACV,EAGA,GAAY,OAAS,UAAY,EAAY,OAAS,SACtD,yBAAC,OAAI,UAAU,uCACb,yBAAC,UACC,KAAK,SACL,aAAW,oCACX,UAAU,wCACV,QAAS,IAAM,EAAe,CAAE,KAAM,MAAO,CAAC,GAE9C,yBAAC,cAAU,UAAU,8CAA8C,CACrE,CACF,EAED,EAAY,OAAS,UACpB,yBAAC,IACC,yBAA0B,EAC1B,oBAAqB,AAAC,GAAgB,CACpC,WAAsB,GACtB,EAAe,CAAE,KAAM,MAAO,CAAC,CACjC,EACA,UAAW,EACX,aAAc,EAChB,EAED,EAAY,OAAS,QACpB,yBAAC,IACC,aAAc,EAAY,aAC1B,oBAAqB,IAAM,EAAe,CAAE,KAAM,MAAO,CAAC,EAC1D,oBAAqB,IAAM,EAAe,CAAE,KAAM,MAAO,CAAC,EAC1D,aAAc,EAChB,CAEJ,CAEJ,CGrFA,MAAiE,oBACjE,GAA6B,sBAE7B,GAKO,uCAEP,GAAoC,8BASpC,OAA2D,yBCnB3D,OAAwB,iBACxB,EAAgC,eAOnB,GAAgC,IAAE,OAAO,CACpD,KAAM,IAAE,OAAO,EAAE,IAAI,CAAC,EACtB,QAAS,IAAE,OAAO,CAChB,OAAQ,IAAE,OAAO,EACjB,WAAY,IAAE,OAAO,EACrB,aAAc,IAAE,OAAO,EACvB,YAAa,IAAE,OAAO,CAAC,CAAC,CAC1B,CAAC,EACD,OAAQ,IAAE,OAAO,CACf,OAAQ,IAAE,OAAO,EACjB,UAAW,IAAE,OAAO,EACpB,aAAc,IAAE,OAAO,EACvB,YAAa,IAAE,OAAO,CAAC,CAAC,CAC1B,CAAC,CACH,CAAC,EAgBM,YAA+C,EAInD,CACD,GAAM,CAAE,OAAO,CAAC,EAAG,0BAAyB,4BAA6B,EAEnE,EAAS,eACb,IACE,GAA8B,OAAO,CACnC,QAAS,GAA8B,MAAM,QAAQ,OAAO,CAC1D,YAAa,CACf,CAAC,EACD,OAAQ,GAA8B,MAAM,OAAO,OAAO,CACxD,YAAa,CACf,CAAC,CACH,CAAC,EACH,CAAC,EAAyB,CAAwB,CACpD,EAEA,MAAO,eAAQ,IACN,EAAO,UAAU,CAAI,EAC3B,CAAC,EAAM,CAAM,CAAC,CACnB,CD9BO,YAA4B,EAAgC,CA/BnE,6BAgCE,GAAM,CAAE,eAAgB,EAElB,CAAE,SAAQ,qBAAsB,sBAAe,EAE/C,CAAC,EAAM,GAAW,eAAoD,EAEtE,EAAuB,oBAAa,2BAA2B,EAC/D,EAAkB,oBAAa,eAAe,EAC9C,EAAiB,oBAAa,eAAe,EAE7C,EAAsB,GAAuB,iBAAM,OAAO,EAEhE,gBAAU,IAAM,CACd,GAAM,GAAU,iBAAM,QAEtB,AAAI,GAAW,MAIf,GAAgB,MAAM,CAAE,OAAQ,EAAQ,MAAO,CAAC,EAChD,EAAe,MAAM,CAAE,OAAQ,EAAQ,MAAO,CAAC,EAE3C,EAAQ,YAAc,MAAQ,EAAQ,QAAU,MAClD,EAAqB,MAAM,CACzB,OAAQ,EAAQ,OAChB,WAAY,EAAQ,UACtB,CAAC,EAEL,EAAG,CAAC,iBAAM,OAAO,CAAC,EAElB,GAAM,GAAW,oBAAa,eAAe,EAE7C,gBAAU,IAAM,CAhElB,MAiEI,AAAI,qBAAM,SAAN,cAAc,SAAU,MAC1B,EAAS,MAAM,CAAE,OAAQ,EAAK,OAAO,MAAO,CAAC,CAEjD,EAAG,CAAC,qBAAM,SAAN,eAAc,MAAM,CAAC,EAEzB,GAAM,GAAY,gBAChB,CACE,iBACA,CACE,aACF,CACF,EACA,CACE,UAAW,AAAC,GAAO,CACjB,AAAI,GAAQ,MACV,CAAI,EAAG,YAAc,KACnB,EAAQ,CACN,KAAM,EAAG,WAAW,KACpB,OAAQ,EAAG,WAAW,OACtB,QAAS,EAAG,WAAW,OACzB,CAAC,EAED,EAAQ,CACN,KAAM,EAAG,KACT,OAAQ,EAAG,OACX,QAAS,EAAG,OACd,CAAC,EAGP,CACF,CACF,EAEM,EAAmB,mBAAY,6BAA6B,EAC5D,EAAuB,mBAAY,iCAAiC,EAEpE,EAA2B,cAAQ,IACnC,GAAuB,KAClB,GAA8B,MAAM,OAAO,MAAM,YAEtD,qBAAuB,GAClB,EAAoB,kBAEpB,2BAAoB,EAAoB,cAAc,EAE9D,CAAC,CAAmB,CAAC,EAElB,EAAqB,GAAsB,CAC/C,UAAW,iBAAM,MACnB,CAAC,EAEK,EAA0B,cAAQ,IAClC,GAAsB,KACjB,GAA8B,MAAM,OAAO,MAAM,YAEtD,qBAAuB,GAClB,EAAmB,kBAEnB,2BAAoB,EAAmB,cAAc,EAE7D,CAAC,CAAkB,CAAC,EAEjB,EAAa,GAAsC,CACvD,OACA,2BACA,yBACF,CAAC,EAEK,EAAyB,kBAC7B,AAAC,GACC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,QAAS,OACJ,iBAAa,SADT,CAEP,aAAc,CAChB,EACF,EAAE,EACJ,CAAC,CAAO,CACV,EAEM,EAAwB,kBAC5B,AAAC,GACC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,OAAQ,OACH,iBAAa,QADV,CAEN,aAAc,CAChB,EACF,EAAE,EACJ,CAAC,CAAO,CACV,EAEA,GAAqB,CACnB,OAAQ,qBAAM,UAAN,eAAe,OACvB,gBAAiB,CACnB,CAAC,EAED,GAAM,GAAwB,kBAC5B,AAAC,GAAmC,CAClC,EAAQ,AAAC,GAAiB,OACrB,GADqB,CAExB,QAAS,OACJ,EAAa,SADT,CAEP,YAAa,CACf,EACF,EAAE,CACJ,EACA,CAAC,CAAO,CACV,EAOM,EAAkB,IALF,gBACpB,CAAC,gBAAiB,CAAE,OAAQ,qBAAM,UAAN,eAAe,MAAQ,CAAC,EACpD,CAAE,QAAS,sBAAM,UAAN,eAAe,SAAU,IAAK,CAC3C,EAEsC,OAAd,eAAoB,KAC1C,AAAC,GAAG,CArLR,MAqLW,SAAE,MAAQ,qBAAM,UAAN,cAAe,cAG5B,EAA4B,oBAAa,SAAY,CAxL7D,WAyLI,MAAI,IAAmB,KACd,CAAC,EAEN,EAAgB,qBAAqB,OAAS,SACzC,EAAgB,qBAAqB,aAEvC,KAAM,GAAO,MAAM,4BAA6B,CACrD,OAAQ,oBAAM,UAAN,cAAe,OACvB,WAAY,oBAAM,UAAN,cAAe,WAC3B,YAAa,qBAAM,UAAN,eAAe,WAC9B,CAAC,CACH,EAAG,CACD,KAAK,UAAU,iBAAiB,oBAAoB,EACpD,KAAK,UAAU,iBAAM,OAAO,CAC9B,CAAC,EAEK,GAA0B,cAC9B,IAAG,CA1MP,MA2MO,YAA0B,QAA1B,OAAmC,CAAC,GAAG,IAAI,AAAC,GAAU,EACrD,GAAI,EAAK,IACT,MAAO,EAAK,MACZ,KAAM,QACR,EAAE,GACJ,CAAC,EAA0B,KAAK,CAClC,EAEA,YAAmC,CAKjC,MAJI,kBAAM,SAAU,MAIhB,GAAsB,KACjB,KAIP,wBAAC,OAAI,UAAU,0CACb,wBAAC,WACC,wBAAC,OAAI,UAAU,kCAAiC,eAAa,EAE7D,wBAAC,OAAI,UAAU,uCACb,wBAAC,gBAAY,MAAM,UAAU,WAAU,IACrC,wBAAC,IACC,MACE,EAAW,QACP,OACA,EAAW,MAAM,OAAO,KACtB,AAAC,GACC,EAAM,KAAK,KAAK,GAAG,IAAM,qBAC7B,EAEN,aAAc,EAAK,OAAO,aAC1B,gBAAiB,AAAC,GAAoB,CACpC,GAAM,GAA8B,OAC9B,EAAK,QADyB,CAElC,aAAc,CAChB,GAEA,EAAQ,OACH,GADG,CAEN,OAAQ,CACV,EAAC,CACH,EACA,cAAe,EACf,OAAQ,EAAK,OAAO,OACtB,CACF,CACF,EAEA,wBAAC,OAAI,UAAU,kDACb,wBAAC,IACC,sBAAqB,GACrB,IAAK,EACL,aAAc,EAAK,OAAO,aAC1B,YAAa,EAAK,OAAO,YACzB,eAAgB,AAAC,GACf,EAAQ,OACH,GADG,CAEN,OAAQ,OACF,EAAK,QADH,CAEN,YAAa,CACf,EACF,EAAC,EAEH,aAAc,EACd,UAAW,GACX,kBAAmB,IAAM,CACvB,KAAM,IAAI,OAAM,4CAA4C,CAC9D,EACF,CACF,CACF,CACF,CAEJ,CAEA,GAAM,GAAc,YAAU,OAAV,eAAgB,aAAhB,cAA4B,SAA5B,OAAsC,GAEpD,CAAC,EAAkB,GAAuB,eAAS,EAAK,EAExD,GAAc,cAClB,IAAO,EAAE,mBAAkB,qBAAoB,GAC/C,CAAC,EAAkB,CAAmB,CACxC,EAEM,GAAwB,cAAQ,IAAM,CAAC,EAAG,CAAC,CAAC,EAElD,mBAA0B,CAExB,GADA,EAAoB,EAAI,EACpB,EAAW,QAAS,CACtB,GAAM,GAAI,EAAW,KAErB,KAAM,GAAiB,YAAY,CACjC,cACA,QAAS,CACP,aAAc,EAAE,QAAQ,aACxB,YAAa,EAAE,QAAQ,WACzB,EACA,OAAQ,CACN,aAAc,EAAE,OAAO,aACvB,YAAa,EAAE,OAAO,WACxB,CACF,CAAC,EAED,EAAkB,CAAC,2BAA4B,CAAE,aAAY,CAAC,CAAC,EAC/D,EAAkB,CAAC,iBAAkB,CAAE,aAAY,CAAC,CAAC,EACrD,EAAkB,iBAAiB,CACrC,KACE,SAAQ,IAAI,CAAI,EAChB,QAAQ,MAAM,EAAW,KAAK,CAElC,CAEA,mBAA4B,CAC1B,KAAM,GAAqB,YAAY,CAAE,aAAY,CAAC,EAEtD,EAAkB,CAAC,2BAA4B,CAAE,aAAY,CAAC,CAAC,EAC/D,EAAkB,CAAC,iBAAkB,CAAE,aAAY,CAAC,CAAC,EACrD,EAAkB,iBAAiB,CACrC,CAEA,GAAM,IAAc,oBAAa,GAAQ,KAAM,CAC7C,MAAO,IACP,YAAa,GACf,CAAC,EAED,GAAI,GAAQ,KACV,MAAO,MAGT,GAAI,GACF,MACE,yBAAC,OAAI,UAAU,sCACb,wBAAC,YAAQ,UAAU,2BAA2B,CAChD,EAIJ,GAAM,IACJ,GACC,sBAAuB,GACpB,OAAO,KAAK,EAAoB,kBAAkB,KAAK,EAAE,OAAS,EAClE,EAAoB,eAAe,OAAS,GAE5C,GAAgB,OAAK,UAAL,eAAc,aAAc,MAChD,wBAAC,OAAI,UAAU,wCACb,wBAAC,OAAI,UAAU,sCAAqC,gBAAc,EAElE,wBAAC,OAAI,UAAU,gDACb,wBAAC,IACC,MACE,EAAW,QACP,OACA,EAAW,MAAM,OAAO,KACtB,AAAC,GAAU,EAAM,KAAK,KAAK,GAAG,IAAM,sBACtC,EAEN,OAAQ,EAAK,QAAQ,OACrB,gBAAiB,AAAC,GAChB,EAAQ,OACH,GADG,CAEN,QAAS,OACJ,EAAK,SADD,CAEP,aAAc,CAChB,EACF,EAAC,EAEH,cAAe,EACf,aAAc,EAAK,QAAQ,aAC7B,EAEC,EAAK,QAAQ,cAAgB,MAAQ,IACpC,wBAAC,OAAI,UAAU,mDACb,wBAAC,IACC,IAAK,EACL,aAAc,EAAK,QAAQ,aAC3B,YAAa,EAAK,QAAQ,YAC1B,eAAgB,EAChB,aAAc,EACd,UAAW,GACX,kBAAmB,CAAC,CAAE,cAAY,CAjYhD,MAkYgB,SAAO,MAAM,kCAAmC,CAC9C,WAAY,KAAK,UAAL,cAAc,WAC1B,UACF,CAAC,GAEL,CACF,CAEJ,CACF,EAGF,MACE,yBAAC,IAAoB,MAAO,IAC1B,wBAAC,WACE,EAAU,MAAQ,MACjB,wBAAC,WACC,wBAAC,OAAI,UAAU,uCACb,wBAAC,OAAI,UAAU,wCACb,wBAAC,WAAO,UAAU,0CAChB,wBAAC,GAAQ,OAAQ,EAAU,KAAK,QAAQ,OAAQ,CAClD,EACA,wBAAC,WAAO,UAAU,yCAChB,wBAAC,GAAQ,OAAQ,EAAU,KAAK,OAAO,OAAQ,CACjD,CACF,EAEA,wBAAC,OAAI,UAAU,qCACZ,EAAU,KAAK,IAClB,CACF,EAEC,GAEA,EAAwB,EAEzB,wBAAC,WACE,EACC,wBAAC,UACC,KAAK,SACL,aAAW,sBACX,SAAU,EAAiB,UAC3B,UAAU,sEACV,QAAS,IAER,EAAiB,UACd,kBACA,YACN,EAEA,wBAAC,UACC,KAAK,SACL,aAAW,oBACX,SAAU,EAAiB,UAC3B,UAAU,oEACV,QAAS,IAER,EAAiB,UAAY,gBAAkB,UAClD,CAEJ,CACF,CAEJ,CACF,CAEJ,CEpcA,OAA4B,wBAC5B,EAAgC,oBAEhC,GAIO,uCAEP,OAOO,yBAUA,YAAwB,EAA4B,CACzD,GAAM,CAAE,aAAY,YAAY,GAAO,wBAAyB,EAE1D,CAAC,EAAO,GAAY,eAAS,EAAE,EAE/B,EAAqB,mBAAY,EAAY,EAAO,CACxD,KAAM,CAAC,OAAQ,iBAAiB,EAChC,UAAW,eAAY,SAAS,OAClC,CAAC,EAEK,EAAsB,EAAmB,SAAW,EAE1D,MACE,yBAAC,OAAI,UAAU,uCACb,wBAAC,OAAI,UAAU,iDACb,wBAAC,OAAI,UAAU,wDACb,wBAAC,cAAO,CACV,EAEA,wBAAC,cACC,YAAY,oBACZ,MAAO,EACP,SAAU,EACV,UAAU,yCACZ,CACF,EAEC,GACC,wBAAC,OAAI,UAAU,sCACb,wBAAC,YAAQ,UAAU,2BAA2B,CAChD,EAGD,CAAC,GAAa,GACb,wBAAC,OAAI,UAAU,uCAAsC,qBAErD,EAGF,wBAAC,OAAI,UAAU,kCACZ,EAAmB,IAAI,AAAC,GACvB,wBAAC,IACC,IAAK,EAAU,GACf,UAAW,EACX,qBAAsB,IAAM,EAAqB,CAAS,EAC5D,CACD,CACH,CACF,CAEJ,CAOA,YAA4B,EAAgC,CAnF5D,QAoFE,GAAM,CAAE,YAAW,wBAAyB,EACtC,CAAE,qBAAsB,sBAAe,EACvC,EAAuB,mBAAY,iCAAiC,EACpE,EAAS,QAAU,aAAV,cAAsB,SAAtB,OAAgC,GAE/C,MACE,yBAAC,OAAI,UAAU,0CACb,wBAAC,OACC,UAAU,iCACV,KAAK,QACL,QAAS,AAAC,GAAM,CACd,AAAK,mCAA4B,EAAE,MAAiB,GAClD,EAAqB,CAEzB,GAEA,wBAAC,OAAI,UAAU,yCACb,wBAAC,OAAI,UAAU,wCACb,wBAAC,WAAO,UAAU,0CAChB,wBAAC,GAAQ,OAAQ,EAAU,QAAQ,OAAQ,CAC7C,EACA,wBAAC,WAAO,UAAU,yCAChB,wBAAC,GAAQ,OAAQ,EAAU,OAAO,OAAQ,CAC5C,CACF,EAEA,wBAAC,OAAI,UAAU,yCACb,wBAAC,WACC,WAAY,EACZ,SAAU,SAAY,CACpB,GAAI,EAAQ,CACV,GAAM,GAAc,EAAU,GAE9B,KAAM,GAAqB,YAAY,CAAE,aAAY,CAAC,EAEtD,EAAkB,CAAC,iBAAkB,CAAE,aAAY,CAAC,CAAC,EACrD,EAAkB,CAChB,2BACA,CAAE,aAAY,CAChB,CAAC,EACD,EAAkB,CAAC,iBAAiB,CAAC,CACvC,KACE,GAAqB,CAEzB,EACF,CACF,CACF,EACA,wBAAC,OAAI,UAAU,uCACZ,EAAU,IACb,CACF,CACF,CAEJ,CC1IA,OAAgC,oBCAhC,OAAkB,oBAElB,GAA2C,uCASpC,YAAsB,EAA0B,CAXvD,MAYE,GAAM,CAAE,wBAAyB,EAE3B,EAAa,gBAAS,CAAC,iBAAiB,CAAC,EAE/C,MACE,0BAAC,WACC,yBAAC,OAAI,UAAU,oCACb,yBAAC,QAAK,UAAU,0CAAyC,eAEzD,CACF,EAEA,yBAAC,IACC,WAAY,KAAW,OAAX,OAAmB,CAAC,EAChC,UAAW,EAAW,WACtB,qBAAsB,EACxB,CACF,CAEJ,CD3BA,OAA0B,yBAMnB,aAA6B,CAClC,GAAM,CAAC,EAAa,GAAkB,gBAAgC,CACpE,KAAM,MACR,CAAC,EAED,MACE,0BAAC,OAAI,UAAU,+BACZ,EAAY,OAAS,QACpB,yBAAC,IACC,qBAAsB,AAAC,GAAO,CAC5B,EAAe,CAAE,KAAM,WAAY,YAAa,EAAG,EAAG,CAAC,CACzD,EACF,EAGD,EAAY,OAAS,YACpB,kDACE,yBAAC,OAAI,UAAU,uCACb,yBAAC,UACC,KAAK,SACL,aAAW,mCACX,UAAU,uCACV,QAAS,IAAM,EAAe,CAAE,KAAM,MAAO,CAAC,GAE9C,yBAAC,cAAU,UAAU,8CAA8C,CACrE,CACF,EAEA,yBAAC,IAAmB,YAAa,EAAY,YAAa,CAC5D,CAEJ,CAEJ,CE3CA,OAAkB,oBAElB,GAAgC,yBAEzB,aAA4B,CACjC,MACE,0BAAC,MAAG,IAAH,CAAO,IAAK,CAAE,UAAW,QAAS,GACjC,yBAAC,MAAG,IAAH,CACC,IAAK,CACH,QAAS,OACT,eAAgB,SAChB,WAAY,QACd,GAEA,yBAAC,gBAAY,MAAM,OAAO,EAE1B,yBAAC,MAAG,KAAH,CACC,IAAK,CAAE,YAAa,KAAM,WAAY,IAAK,MAAO,YAAa,GAChE,oBAED,CACF,EAEA,yBAAC,MAAG,IAAH,CAAO,IAAK,CAAE,UAAW,KAAM,SAAU,MAAO,MAAO,aAAc,GAAG,wCACjC,IACtC,yBAAC,MAAG,EAAH,CACC,KAAK,yDACL,IAAK,CAAE,MAAO,QAAS,eAAgB,WAAY,GACpD,OAED,EAAQ,IAAI,IACN,IACN,yBAAC,MAAG,EAAH,CACC,KAAK,+DACL,IAAK,CAAE,MAAO,QAAS,eAAgB,WAAY,GACpD,gBAED,CACF,CACF,CAEJ,mNERA,GAAM,IAAkC,CACtC,OAAQ,OAAO,KAAK,MAAM,KAAK,OAAM,EAAK,IAAW,CAAA,EACrD,QAAS,CACX,EAEM,GAAa,UAAM,cAA+B,EAAc,cAW1C,EAAsC,CAChE,GAAI,GAAM,iBAAW,EAAU,EAC3B,EAAyB,cAAO,IAAQ,EAG1C,OAAQ,IAAQ,GAAiB,GAAE,GAAM,EAAI,UAAQ,EAAI,EAAI,UAC7D,QAAS,CACX,GAAI,CAAC,CAAG,CAAC,EAET,MAAM,WAAA,cACH,GAAW,SAAQ,CAAC,MAAO,GACzB,EAAM,QAAQ,CAGrB,CAEA,GAAI,IAAY,QACd,MAAO,QAAW,KAClB,OAAO,UACP,OAAO,SAAS,aAAa,cAIF,EAA4B,CACvD,GAAI,GAAM,iBAAW,EAAU,EAI/B,MAAI,KAAQ,IAAc,CAAK,IAC7B,QAAQ,KAAK,iJAAiJ,EAGzJ,cAAO,IAAO,GAAS,aAAiB,EAAI,UAAQ,EAAI,EAAI,UAAW,CAAC,CAAS,CAAC,CAC3F,cAOoC,CAElC,GAAI,GAAiB,AADX,iBAAW,EAAU,IACF,GAC1B,CAAE,EAAO,GAAY,eAAS,CAAc,EAI/C,MAAI,OAAO,QAAW,KAAe,GAInC,sBAAe,IAAO,CACpB,EAAS,EAAK,CAChB,EAAG,CAAC,CAAC,EAGA,CACT,CCzGA,OAKO,2BACP,GAA6C,oBAE7C,GAA8B,gCAE9B,GAAyC,uCCXzC,OAAkB,oBAElB,GAAqB,yBACrB,GAA4B,yBAErB,aAAyB,CAC9B,MACE,0BAAC,OAAI,UAAU,qCACb,yBAAC,WACC,yBAAC,SACC,MAAO,CACL,MAAO,OACP,OAAQ,MACV,EACF,EACA,yBAAC,gBACC,MAAO,CACL,SAAU,WACV,MAAO,OACP,OAAQ,MACV,EACF,CACF,EACA,yBAAC,OAAI,UAAU,0CACb,yBAAC,OAAI,UAAU,mCAAkC,6BAEjD,EACA,yBAAC,OAAI,UAAU,2CAA0C,wBAEzD,CACF,CACF,CAEJ,CDbA,GAAM,IAAuB,gCACvB,GACJ,4EAWK,YAAgC,EAAoC,CACzE,GAAM,CACJ,QACA,cACA,aAAa,GACb,WACA,MAAM,aACN,QAAS,GACP,EAEE,CAAC,GAAU,gBAAS,IACjB,GAAI,kBAAc,CACvB,IAAK,GACL,UAAW,sBACX,YAAa,sBACb,aAAc,sBAChB,CAAC,CACF,EAEK,EAAU,mBACd,CAAC,EAAc,IAA0B,CACvC,WAAc,EAAO,GAEjB,IAAQ,cACV,EAAO,iBAAiB,EAAO,CAC7B,KAAM,CAAE,MAAK,CACf,CAAC,CAEL,EACA,CAAC,EAAK,EAAQ,CAAW,CAC3B,EAEA,MACE,0BAAC,kBAAc,kBAAmB,GAAe,QAAS,GACxD,yBAAC,IAAiC,WAAY,GAC5C,yBAAC,IAAkC,YAAa,GAC9C,yBAAC,6BACC,MAAO,EACP,WAAY,UAAc,IAE1B,yBAAC,QACC,yBAAC,QAAa,CAAS,CACzB,CACF,CACF,CACF,CACF,CAEJ,CzD/EA,OAA8B,6B2DF9B,OAA+B,yBAEzB,GAAY,CAChB,OAAQ,oBACR,aAAc,MACd,QAAS,OACT,UAAW,OACX,WAAY,OACd,EAEa,GAAe,iBAAU,CACpC,iDAAkD,CAChD,OAAQ,oBACR,aAAc,KAChB,EACA,8CAA+C,CAC7C,QAAS,OACT,QAAS,OACT,IAAK,OACL,WAAY,aACZ,cAAe,SACf,WACE,0FACJ,EACA,mDAAoD,CAClD,SAAU,MACZ,EACA,6CAA8C,CAC5C,SAAU,OACV,WAAY,KACd,EACA,+CAAgD,CAC9C,QAAS,OACT,QAAS,OACT,cAAe,SACf,IAAK,MACP,EAEA,uCAAwC,CACtC,QAAS,OACT,cAAe,QACjB,EAEA,oCAAqC,CACnC,QAAS,OACT,SAAU,OACV,aAAc,OACd,WAAY,SACZ,eAAgB,gBAChB,aAAc,mBAChB,EAEA,0CAA2C,CACzC,WAAY,KACd,EAEA,qCAAsC,CACpC,UAAW,aACX,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,QAAS,OACT,IAAK,OACL,OAAQ,YACR,MAAO,QACP,OAAQ,QAER,OAAQ,oBACR,aAAc,KAChB,EAEA,0CAA2C,CACzC,QAAS,OACT,cAAe,SACf,WAAY,SACZ,IAAK,MACL,MAAO,QACP,OAAQ,MACV,EAEA,mCAAoC,CAClC,MAAO,UACP,WAAY,QACZ,UAAW,SACX,WAAY,MACZ,SAAU,OACV,WAAY,MACd,EAEA,2CAA4C,CAC1C,MAAO,UACP,WAAY,QACZ,UAAW,SACX,WAAY,MACZ,SAAU,OACV,WAAY,MACd,EAEA,oCAAqC,CACnC,MAAO,OACP,OAAQ,MACV,EAEA,2BAA4B,CAC1B,MAAO,OACP,SAAU,KACV,SAAU,OACV,WAAY,OACZ,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,aAAc,OACd,SAAU,OAEV,UAAW,CACT,YAAa,kBACf,EAEA,kBAAmB,CACjB,QAAS,GACT,OAAQ,aACV,EAEA,wDAAyD,CACvD,YAAa,MACf,EAEA,aAAc,CAAE,OAAQ,aAAc,CACxC,EAEA,uBAAwB,CACtB,OAAQ,MACR,SAAU,MACV,SAAU,MACV,OAAQ,cACR,QAAS,OACT,WAAY,SACZ,IAAK,MACL,WAAY,QACZ,OAAQ,oBACR,aAAc,MACd,WAAY,MACZ,OAAQ,UACR,WAAY,QACd,EAEA,4BAA6B,CAC3B,MAAO,UACP,UAAW,CACT,MAAO,OACT,CACF,EAEA,yBAA0B,CACxB,WAAY,OACZ,QAAS,OACT,OAAQ,OACR,MAAO,OACP,aAAc,CAAE,OAAQ,aAAc,CACxC,EAEA,gCAAiC,CAC/B,WAAY,UACZ,OAAQ,OACR,SAAU,MACV,yBAA0B,CACxB,YAAa,GACf,CACF,EAEA,2CAA4C,CAC1C,uFACE,CACE,YAAa,QACf,CACJ,EAEA,iEAAkE,CAChE,SAAU,WACV,SAAU,SACV,QAAS,OACT,WAAY,SACZ,SAAU,OACV,QAAS,OACT,UAAW,SACX,YAAa,MACb,aAAc,MACd,YAAa,QACb,YAAa,gBACb,kBAAmB,CACjB,YAAa,kBACf,EACA,mBAAoB,CAClB,OAAQ,cACR,MAAO,cACP,gBAAiB,mBACnB,CACF,EAEA,mEAAoE,CAClE,aAAc,KACd,KAAM,CACJ,MAAO,UACT,CACF,EAEA,kFACE,CACE,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,SAAU,WACV,qBAAsB,CACpB,cAAe,MACjB,EACA,eAAgB,CACd,OAAQ,SACV,EACA,IAAK,MACL,UAAW,mBACX,OAAQ,EACR,MAAO,UACP,OAAQ,OACR,WAAY,MACd,EAEF,yCAA0C,CACxC,KAAM,OACN,KAAM,MACN,qBAAsB,CACpB,QAAS,MACX,EACA,iCAAkC,CAChC,WAAY,cACZ,OAAQ,OACR,MAAO,QACP,SAAU,IACZ,EACA,YAAa,MACb,YAAa,UACb,YAAa,QACb,aAAc,MACd,WAAY,OACd,EACA,iFACE,CACE,KAAM,OACN,MAAO,KACT,EACF,qEAAsE,CACpE,WAAY,IACZ,KAAM,MACR,EAEA,uDAAwD,CACtD,UAAW,QACX,UAAW,SACX,UAAW,OACX,QAAS,OACT,OAAQ,YACR,YAAa,UACb,aAAc,MAEd,qBAAsB,CACpB,WAAY,UACZ,QAAS,YACT,SAAU,OACV,MAAO,QACP,WAAY,MACZ,IAAK,OACL,OAAQ,MACV,EAEA,qBAAsB,CACpB,UAAW,oBACX,QAAS,IACT,OAAQ,OACR,MAAO,QACP,QAAS,MACT,mBAAoB,CAClB,QAAS,GACX,CACF,CACF,EAEA,kCAAmC,CACjC,QAAS,OACT,WAAY,SACZ,IAAK,MACL,SAAU,OACV,SAAU,MACV,WAAY,UACZ,MAAO,QACP,KAAM,CACJ,SAAU,OACV,WAAY,KACd,CACF,EAEA,gCAAiC,CAC/B,OAAQ,MACR,QAAS,KACX,EAEA,8BAA+B,CAC7B,OAAQ,MACR,QAAS,KACX,EAEA,sCAAuC,CACrC,WAAY,MACd,EAEA,mBAAoB,CAClB,MAAO,OACP,OAAQ,EACR,QAAS,CACX,EAEA,oDAAqD,CACnD,QAAS,OACT,WAAY,SACZ,QAAS,KACT,SAAU,KACV,QAAS,OACT,OAAQ,UACR,aAAc,YACd,YAAa,UACb,kBAAmB,CACjB,WAAY,SACd,EACA,mBAAoB,CAClB,WAAY,MACZ,MAAO,SACT,EACA,mBAAoB,CAClB,WAAY,MACZ,MAAO,UACP,QAAS,OACT,WAAY,QACd,CACF,EAEA,gCAAiC,CAC/B,kBAAmB,CACjB,WAAY,WACZ,MAAO,QACP,OAAQ,OACR,aAAc,OACd,QAAS,EACT,SAAU,IACZ,EACA,YAAa,MACb,YAAa,gBACb,YAAa,QACb,aAAc,MACd,WAAY,QACZ,KAAM,KACN,QAAS,KACT,YAAa,MACf,EAEA,0CAA2C,CACzC,SAAU,OACV,SAAU,OACV,aAAc,MACd,QAAS,OACT,YAAa,MACb,YAAa,UACb,UAAW,CACT,YAAa,kBACf,EACA,YAAa,QACb,WAAY,SACd,EAEA,iDAAkD,CAChD,SAAU,WACV,QAAS,OACT,aAAc,KACd,MAAO,SACT,EAEA,wDAAyD,CACvD,SAAU,WACV,KAAM,MACN,IAAK,MACL,OAAQ,EACR,QAAS,OACT,KAAM,OACN,SAAU,MACV,WAAY,SACZ,eAAgB,SAChB,cAAe,OACf,IAAK,CACH,KAAM,MACR,CACF,EAEA,uCAAwC,CACtC,mBAAoB,IACtB,EAEA,wCAAyC,CACvC,QAAS,OACT,WAAY,UACZ,MAAO,cACP,aAAc,KAChB,EAEA,qCAAsC,CACpC,MAAO,UACP,SAAU,YACV,WAAY,UACZ,WAAY,MACZ,QAAS,WACT,WAAY,SACZ,WAAY,QACZ,OAAQ,OACR,OAAQ,UACR,aAAc,MACd,OAAQ,mBACV,EAEA,uCAAwC,CACtC,MAAO,UACP,WAAY,UACZ,SAAU,YACV,WAAY,MACZ,QAAS,WACT,WAAY,SACZ,WAAY,SACZ,OAAQ,OACR,OAAQ,UACR,aAAc,KAChB,EAEA,qCAAsC,CACpC,QAAS,OACT,WAAY,SACZ,IAAK,MACL,QAAS,WACT,WAAY,SACZ,gBAAiB,UACjB,MAAO,QACP,OAAQ,OACR,aAAc,MACd,OAAQ,OACR,OAAQ,SACV,EAEA,uCAAwC,CACtC,UAAW,SACX,QAAS,OACT,OAAQ,oBACR,aAAc,KAChB,EAEA,uCAAwC,CACtC,UAAW,SACX,QAAS,OACT,OAAQ,qBACR,aAAc,KAChB,EAEA,kCAAmC,CACjC,QAAS,OACT,IAAK,OACL,oBAAqB,uCACvB,EAEA,0CAA2C,CACzC,SAAU,WACV,aAAc,MACd,SAAU,QACV,OAAQ,oBACR,aAAc,MACd,UAAW,CACT,OAAQ,mBACV,EACA,mBAAoB,CAClB,QAAS,EACX,EACA,0BAA2B,CACzB,QAAS,KACT,SAAU,WACV,MAAO,EACP,WAAY,OACZ,OAAQ,MACV,CACF,EAEA,kCAAmC,CACjC,QAAS,OACT,OAAQ,SACV,EAEA,yCAA0C,CACxC,QAAS,OACT,WAAY,SACZ,eAAgB,eAClB,EAEA,8CAA+C,CAC7C,WAAY,OACZ,YAAa,OACb,QAAS,UACT,aAAc,OACd,WAAY,aACZ,SAAU,QACV,MAAO,OACT,EAEA,wCAAyC,CACvC,QAAS,cACT,kFACE,CACE,QAAS,KACT,YAAa,QACb,YAAa,MACb,YAAa,gBACb,aAAc,MACd,SAAU,MACZ,EACF,eAAgB,CACd,qBAAsB,QACtB,mBAAoB,QACpB,YAAa,MACf,EACA,cAAe,CACb,uBAAwB,QACxB,qBAAsB,OACxB,EACA,KAAM,aACR,EAEA,uCAAwC,CACtC,UAAW,OACX,SAAU,OACV,WAAY,MACZ,MAAO,UACP,OAAQ,MACV,EAEA,mDAAoD,CAClD,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,aAAc,MACd,OAAQ,UACR,MAAO,UACP,WAAY,eACZ,KAAM,OACN,IAAK,CACH,KAAM,MACR,EACA,UAAW,CACT,GAAI,yBACJ,MAAO,SACT,EACA,QAAS,EACT,0CAA2C,CACzC,QAAS,CACX,CACF,EAEA,mDAAoD,CAClD,SAAU,WACV,QAAS,YACT,MAAO,IACP,WAAY,QACZ,aAAc,MACd,QAAS,OACT,cAAe,SACf,IAAK,OACL,eAAgB,SAChB,WAAY,SACZ,KAAM,CACJ,WAAY,KACd,CACF,EAEA,2DAA4D,CAC1D,WAAY,UACZ,MAAO,QACP,WAAY,SACZ,UAAW,CACT,WAAY,SACd,EACA,OAAQ,SACV,EAEA,2DAA4D,CAC1D,OAAQ,oBACR,OAAQ,SACV,EAEA,uCAAwC,CACtC,SAAU,IACZ,EAEA,yCAA0C,CACxC,OAAQ,OACR,WAAY,MACd,EAEA,+CAAgD,CAC9C,OAAQ,SACV,EAEA,0DAA2D,CACzD,QAAS,OACT,WAAY,MACZ,aAAc,MACd,OAAQ,OACR,MAAO,OACP,OAAQ,UACR,WAAY,cACd,EAEA,iCAAkC,CAChC,OAAQ,OACR,WAAY,IACZ,SAAU,OACV,WAAY,OACZ,OAAQ,YACR,YAAa,cACb,aAAc,MACd,SAAU,KACV,SAAU,OACV,QAAS,OAET,+BAAgC,CAC9B,MAAO,QACT,CACF,EAEA,oGACE,CACE,QAAS,OACT,cAAe,SACf,IAAK,IACP,EAEF,oCAAqC,KAChC,IAGL,2CAA4C,KACvC,IAGL,mCAAoC,KAC/B,IAGL,0CAA2C,KACtC,IAGL,4CAA6C,CAC3C,aAAc,IAChB,EAEA,2EAA4E,CAC1E,aAAc,IAChB,EAEA,0EAA2E,CACzE,UAAW,IACb,EAEA,wEAAyE,CACvE,aAAc,IAChB,EAEA,2EAA4E,CAC1E,aAAc,IAChB,EAEA,uCAAwC,CACtC,aAAc,IAChB,EAEA,kCAAmC,CACjC,WAAY,MACZ,aAAc,MAChB,EAEA,wCAAyC,CACvC,aAAc,MAChB,EAEA,oCAAqC,CACnC,aAAc,MAChB,EAEA,iDAAkD,CAChD,UAAW,MACX,SAAU,KACV,MAAO,QACT,EAEA,iBAAkB,CAChB,OAAQ,OACR,SAAU,KACV,SAAU,OACV,OAAQ,YACR,YAAa,gBACb,aAAc,KAChB,EAEA,gFACE,CACE,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,IAAK,MACL,OAAQ,OACR,QAAS,WACT,WAAY,IACZ,WAAY,SACZ,UAAW,SACX,OAAQ,YACR,aAAc,KAChB,EAEF,2BAA4B,CAC1B,gBAAiB,UACjB,YAAa,UACb,MAAO,OACT,EAEA,6BAA8B,CAC5B,gBAAiB,cACjB,YAAa,cACb,MAAO,OACT,EAEA,0BAA2B,CACzB,MAAO,QACP,gBAAiB,SACjB,YAAa,SACb,UAAW,CACT,gBAAiB,UACjB,YAAa,SACf,CACF,EAEA,oCAAqC,CACnC,QAAS,OACT,IAAK,IACP,EAEA,mCAAoC,CAClC,WAAY,MACd,EAEA,mCAAoC,CAClC,SAAU,WACV,WAAY,OAEZ,uCAAwC,CACtC,WAAY,GACd,CACF,EAEA,kDAAmD,CACjD,SAAU,WACV,OAAQ,OACR,MAAO,IACP,WAAY,SACZ,WAAY,QACZ,aAAc,OACd,QAAS,OACT,OAAQ,oBACR,aAAc,MACd,UAAW,iCACb,EAEA,gDAAiD,CAC/C,QAAS,KACT,SAAU,KACV,WAAY,GACd,EAEA,mDAAoD,CAClD,QAAS,OACT,eAAgB,gBAChB,IAAK,KACL,UAAW,IACb,EAEA,oFACE,CACE,MAAO,MACT,EAEF,6FACE,CACE,QAAS,EACX,EAEF,+BAAgC,CAC9B,aAAc,MACd,SAAU,KACV,WAAY,IACZ,QAAS,OACT,WAAY,QACd,EAEA,kCAAmC,CACjC,WAAY,OACZ,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,OAAQ,oBACR,KAAM,OACN,OAAQ,UACR,aAAc,MACd,UAAW,MACX,MAAO,UACP,WAAY,eACZ,iBAAkB,CAChB,MAAO,SACT,EACA,UAAW,CACT,WAAY,SACd,EACA,IAAK,CACH,OAAQ,MACV,CACF,EAEA,uCAAwC,CACtC,YAAa,MACb,MAAO,UACT,EAEA,qCAAsC,CACpC,aAAc,MACd,SAAU,MACZ,EAEA,+BAAgC,CAC9B,UAAW,MACX,SAAU,KACV,MAAO,QACT,EAEA,4CAA6C,CAC3C,OAAQ,OACR,UAAW,KACX,aAAc,KACd,WAAY,UACZ,OAAQ,oBACR,aAAc,MACd,SAAU,MACV,UAAW,CACT,WAAY,OACd,CACF,EAEA,iDAAkD,CAChD,SAAU,UACV,aAAc,OACd,MAAO,SACT,EAEA,kDAAmD,CACjD,SAAU,KACV,UAAW,MACb,EAEA,sDAAuD,CACrD,UAAW,IACb,EAEA,wDAAyD,CACvD,SAAU,QACZ,EAEA,gEAAiE,CAC/D,QAAS,OACT,eAAgB,aAChB,WAAY,SACZ,IAAK,MACP,EAGA,uCAAwC,CACtC,QAAS,OACT,WAAY,SACZ,aAAc,YACd,kBAAmB,gBACnB,SAAU,MACZ,EAEA,qCAAsC,CACpC,WAAY,MACd,EAEA,sCAAuC,CACrC,QAAS,OACT,SAAU,KACV,WAAY,OACZ,aAAc,YACd,kBAAmB,eACrB,EAEA,wCAAyC,CACvC,UAAW,OACX,OAAQ,YACR,YAAa,gBACb,aAAc,MAEd,0CAA2C,CACzC,aAAc,IAChB,CACF,EAEA,gDAAiD,CAC/C,QAAS,MACX,EAEA,2FACE,CACE,UAAW,MACb,EAGF,sCAAuC,CACrC,QAAS,OACT,QAAS,OACT,eAAgB,QAClB,EAEA,4BAA6B,CAC3B,OAAQ,OACR,MAAO,MACT,EAEA,uBAAwB,CACtB,WAAY,UACZ,OAAQ,oBACR,aAAc,MACd,SAAU,MACV,UAAW,CACT,WAAY,OACd,CACF,EAEA,wDAAyD,CACvD,OAAQ,MACV,EAEA,iEAAkE,CAChE,MAAO,UACP,eAAgB,YAChB,UAAW,CACT,MAAO,SACT,CACF,EAEA,cAAe,CACb,gBAAiB,mBACnB,EAEA,gBAAiB,CACf,QAAS,OACT,cAAe,SACf,IAAK,OACL,UAAW,OACX,QAAS,OACT,OAAQ,oBACR,aAAc,KAChB,CACF,CAAC","names":[]}